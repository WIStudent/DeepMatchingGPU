# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_gpudm', [dirname(__file__)])
        except ImportError:
            import _gpudm
            return _gpudm
        if fp is not None:
            try:
                _mod = imp.load_module('_gpudm', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _gpudm = swig_import_helper()
    del swig_import_helper
else:
    import _gpudm
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _gpudm.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _gpudm.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _gpudm.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _gpudm.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _gpudm.SwigPyIterator_equal(self, x)

    def copy(self):
        return _gpudm.SwigPyIterator_copy(self)

    def next(self):
        return _gpudm.SwigPyIterator_next(self)

    def __next__(self):
        return _gpudm.SwigPyIterator___next__(self)

    def previous(self):
        return _gpudm.SwigPyIterator_previous(self)

    def advance(self, n):
        return _gpudm.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _gpudm.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _gpudm.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _gpudm.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _gpudm.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _gpudm.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _gpudm.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _gpudm.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


_gpudm.SHARED_PTR_DISOWN_swigconstant(_gpudm)
SHARED_PTR_DISOWN = _gpudm.SHARED_PTR_DISOWN

def GlobalInit(pargc, pargv):
    return _gpudm.GlobalInit(pargc, pargv)
GlobalInit = _gpudm.GlobalInit
class Caffe(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Caffe, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Caffe, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_Caffe
    __del__ = lambda self: None
    __swig_getmethods__["Get"] = lambda x: _gpudm.Caffe_Get
    if _newclass:
        Get = staticmethod(_gpudm.Caffe_Get)
    CPU = _gpudm.Caffe_CPU
    GPU = _gpudm.Caffe_GPU
    __swig_getmethods__["rng_stream"] = lambda x: _gpudm.Caffe_rng_stream
    if _newclass:
        rng_stream = staticmethod(_gpudm.Caffe_rng_stream)
    __swig_getmethods__["cublas_handle"] = lambda x: _gpudm.Caffe_cublas_handle
    if _newclass:
        cublas_handle = staticmethod(_gpudm.Caffe_cublas_handle)
    __swig_getmethods__["curand_generator"] = lambda x: _gpudm.Caffe_curand_generator
    if _newclass:
        curand_generator = staticmethod(_gpudm.Caffe_curand_generator)
    __swig_getmethods__["mode"] = lambda x: _gpudm.Caffe_mode
    if _newclass:
        mode = staticmethod(_gpudm.Caffe_mode)
    __swig_getmethods__["set_mode"] = lambda x: _gpudm.Caffe_set_mode
    if _newclass:
        set_mode = staticmethod(_gpudm.Caffe_set_mode)
    __swig_getmethods__["set_random_seed"] = lambda x: _gpudm.Caffe_set_random_seed
    if _newclass:
        set_random_seed = staticmethod(_gpudm.Caffe_set_random_seed)
    __swig_getmethods__["SetDevice"] = lambda x: _gpudm.Caffe_SetDevice
    if _newclass:
        SetDevice = staticmethod(_gpudm.Caffe_SetDevice)
    __swig_getmethods__["DeviceQuery"] = lambda x: _gpudm.Caffe_DeviceQuery
    if _newclass:
        DeviceQuery = staticmethod(_gpudm.Caffe_DeviceQuery)
    __swig_getmethods__["solver_count"] = lambda x: _gpudm.Caffe_solver_count
    if _newclass:
        solver_count = staticmethod(_gpudm.Caffe_solver_count)
    __swig_getmethods__["set_solver_count"] = lambda x: _gpudm.Caffe_set_solver_count
    if _newclass:
        set_solver_count = staticmethod(_gpudm.Caffe_set_solver_count)
    __swig_getmethods__["root_solver"] = lambda x: _gpudm.Caffe_root_solver
    if _newclass:
        root_solver = staticmethod(_gpudm.Caffe_root_solver)
    __swig_getmethods__["set_root_solver"] = lambda x: _gpudm.Caffe_set_root_solver
    if _newclass:
        set_root_solver = staticmethod(_gpudm.Caffe_set_root_solver)
Caffe_swigregister = _gpudm.Caffe_swigregister
Caffe_swigregister(Caffe)

def Caffe_Get():
    return _gpudm.Caffe_Get()
Caffe_Get = _gpudm.Caffe_Get

def Caffe_rng_stream():
    return _gpudm.Caffe_rng_stream()
Caffe_rng_stream = _gpudm.Caffe_rng_stream

def Caffe_cublas_handle():
    return _gpudm.Caffe_cublas_handle()
Caffe_cublas_handle = _gpudm.Caffe_cublas_handle

def Caffe_curand_generator():
    return _gpudm.Caffe_curand_generator()
Caffe_curand_generator = _gpudm.Caffe_curand_generator

def Caffe_mode():
    return _gpudm.Caffe_mode()
Caffe_mode = _gpudm.Caffe_mode

def Caffe_set_mode(mode):
    return _gpudm.Caffe_set_mode(mode)
Caffe_set_mode = _gpudm.Caffe_set_mode

def Caffe_set_random_seed(seed):
    return _gpudm.Caffe_set_random_seed(seed)
Caffe_set_random_seed = _gpudm.Caffe_set_random_seed

def Caffe_SetDevice(device_id):
    return _gpudm.Caffe_SetDevice(device_id)
Caffe_SetDevice = _gpudm.Caffe_SetDevice

def Caffe_DeviceQuery():
    return _gpudm.Caffe_DeviceQuery()
Caffe_DeviceQuery = _gpudm.Caffe_DeviceQuery

def Caffe_solver_count():
    return _gpudm.Caffe_solver_count()
Caffe_solver_count = _gpudm.Caffe_solver_count

def Caffe_set_solver_count(val):
    return _gpudm.Caffe_set_solver_count(val)
Caffe_set_solver_count = _gpudm.Caffe_set_solver_count

def Caffe_root_solver():
    return _gpudm.Caffe_root_solver()
Caffe_root_solver = _gpudm.Caffe_root_solver

def Caffe_set_root_solver(val):
    return _gpudm.Caffe_set_root_solver(val)
Caffe_set_root_solver = _gpudm.Caffe_set_root_solver

class BlobVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlobVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _gpudm.BlobVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _gpudm.BlobVector___nonzero__(self)

    def __bool__(self):
        return _gpudm.BlobVector___bool__(self)

    def __len__(self):
        return _gpudm.BlobVector___len__(self)

    def pop(self):
        return _gpudm.BlobVector_pop(self)

    def __getslice__(self, i, j):
        return _gpudm.BlobVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _gpudm.BlobVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _gpudm.BlobVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _gpudm.BlobVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _gpudm.BlobVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _gpudm.BlobVector___setitem__(self, *args)

    def append(self, x):
        return _gpudm.BlobVector_append(self, x)

    def empty(self):
        return _gpudm.BlobVector_empty(self)

    def size(self):
        return _gpudm.BlobVector_size(self)

    def clear(self):
        return _gpudm.BlobVector_clear(self)

    def swap(self, v):
        return _gpudm.BlobVector_swap(self, v)

    def get_allocator(self):
        return _gpudm.BlobVector_get_allocator(self)

    def begin(self):
        return _gpudm.BlobVector_begin(self)

    def end(self):
        return _gpudm.BlobVector_end(self)

    def rbegin(self):
        return _gpudm.BlobVector_rbegin(self)

    def rend(self):
        return _gpudm.BlobVector_rend(self)

    def pop_back(self):
        return _gpudm.BlobVector_pop_back(self)

    def erase(self, *args):
        return _gpudm.BlobVector_erase(self, *args)

    def __init__(self, *args):
        this = _gpudm.new_BlobVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _gpudm.BlobVector_push_back(self, x)

    def front(self):
        return _gpudm.BlobVector_front(self)

    def back(self):
        return _gpudm.BlobVector_back(self)

    def assign(self, n, x):
        return _gpudm.BlobVector_assign(self, n, x)

    def resize(self, *args):
        return _gpudm.BlobVector_resize(self, *args)

    def insert(self, *args):
        return _gpudm.BlobVector_insert(self, *args)

    def reserve(self, n):
        return _gpudm.BlobVector_reserve(self, n)

    def capacity(self):
        return _gpudm.BlobVector_capacity(self)
    __swig_destroy__ = _gpudm.delete_BlobVector
    __del__ = lambda self: None
BlobVector_swigregister = _gpudm.BlobVector_swigregister
BlobVector_swigregister(BlobVector)
cvar = _gpudm.cvar
kMaxBlobAxes = cvar.kMaxBlobAxes

class BlobPtrVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobPtrVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlobPtrVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _gpudm.BlobPtrVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _gpudm.BlobPtrVector___nonzero__(self)

    def __bool__(self):
        return _gpudm.BlobPtrVector___bool__(self)

    def __len__(self):
        return _gpudm.BlobPtrVector___len__(self)

    def pop(self):
        return _gpudm.BlobPtrVector_pop(self)

    def __getslice__(self, i, j):
        return _gpudm.BlobPtrVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _gpudm.BlobPtrVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _gpudm.BlobPtrVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _gpudm.BlobPtrVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _gpudm.BlobPtrVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _gpudm.BlobPtrVector___setitem__(self, *args)

    def append(self, x):
        return _gpudm.BlobPtrVector_append(self, x)

    def empty(self):
        return _gpudm.BlobPtrVector_empty(self)

    def size(self):
        return _gpudm.BlobPtrVector_size(self)

    def clear(self):
        return _gpudm.BlobPtrVector_clear(self)

    def swap(self, v):
        return _gpudm.BlobPtrVector_swap(self, v)

    def get_allocator(self):
        return _gpudm.BlobPtrVector_get_allocator(self)

    def begin(self):
        return _gpudm.BlobPtrVector_begin(self)

    def end(self):
        return _gpudm.BlobPtrVector_end(self)

    def rbegin(self):
        return _gpudm.BlobPtrVector_rbegin(self)

    def rend(self):
        return _gpudm.BlobPtrVector_rend(self)

    def pop_back(self):
        return _gpudm.BlobPtrVector_pop_back(self)

    def erase(self, *args):
        return _gpudm.BlobPtrVector_erase(self, *args)

    def __init__(self, *args):
        this = _gpudm.new_BlobPtrVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _gpudm.BlobPtrVector_push_back(self, x)

    def front(self):
        return _gpudm.BlobPtrVector_front(self)

    def back(self):
        return _gpudm.BlobPtrVector_back(self)

    def assign(self, n, x):
        return _gpudm.BlobPtrVector_assign(self, n, x)

    def resize(self, *args):
        return _gpudm.BlobPtrVector_resize(self, *args)

    def insert(self, *args):
        return _gpudm.BlobPtrVector_insert(self, *args)

    def reserve(self, n):
        return _gpudm.BlobPtrVector_reserve(self, n)

    def capacity(self):
        return _gpudm.BlobPtrVector_capacity(self)
    __swig_destroy__ = _gpudm.delete_BlobPtrVector
    __del__ = lambda self: None
BlobPtrVector_swigregister = _gpudm.BlobPtrVector_swigregister
BlobPtrVector_swigregister(BlobPtrVector)

class LayerVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LayerVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LayerVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _gpudm.LayerVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _gpudm.LayerVector___nonzero__(self)

    def __bool__(self):
        return _gpudm.LayerVector___bool__(self)

    def __len__(self):
        return _gpudm.LayerVector___len__(self)

    def pop(self):
        return _gpudm.LayerVector_pop(self)

    def __getslice__(self, i, j):
        return _gpudm.LayerVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _gpudm.LayerVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _gpudm.LayerVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _gpudm.LayerVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _gpudm.LayerVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _gpudm.LayerVector___setitem__(self, *args)

    def append(self, x):
        return _gpudm.LayerVector_append(self, x)

    def empty(self):
        return _gpudm.LayerVector_empty(self)

    def size(self):
        return _gpudm.LayerVector_size(self)

    def clear(self):
        return _gpudm.LayerVector_clear(self)

    def swap(self, v):
        return _gpudm.LayerVector_swap(self, v)

    def get_allocator(self):
        return _gpudm.LayerVector_get_allocator(self)

    def begin(self):
        return _gpudm.LayerVector_begin(self)

    def end(self):
        return _gpudm.LayerVector_end(self)

    def rbegin(self):
        return _gpudm.LayerVector_rbegin(self)

    def rend(self):
        return _gpudm.LayerVector_rend(self)

    def pop_back(self):
        return _gpudm.LayerVector_pop_back(self)

    def erase(self, *args):
        return _gpudm.LayerVector_erase(self, *args)

    def __init__(self, *args):
        this = _gpudm.new_LayerVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _gpudm.LayerVector_push_back(self, x)

    def front(self):
        return _gpudm.LayerVector_front(self)

    def back(self):
        return _gpudm.LayerVector_back(self)

    def assign(self, n, x):
        return _gpudm.LayerVector_assign(self, n, x)

    def resize(self, *args):
        return _gpudm.LayerVector_resize(self, *args)

    def insert(self, *args):
        return _gpudm.LayerVector_insert(self, *args)

    def reserve(self, n):
        return _gpudm.LayerVector_reserve(self, n)

    def capacity(self):
        return _gpudm.LayerVector_capacity(self)
    __swig_destroy__ = _gpudm.delete_LayerVector
    __del__ = lambda self: None
LayerVector_swigregister = _gpudm.LayerVector_swigregister
LayerVector_swigregister(LayerVector)

class FloatVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FloatVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _gpudm.FloatVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _gpudm.FloatVector___nonzero__(self)

    def __bool__(self):
        return _gpudm.FloatVector___bool__(self)

    def __len__(self):
        return _gpudm.FloatVector___len__(self)

    def pop(self):
        return _gpudm.FloatVector_pop(self)

    def __getslice__(self, i, j):
        return _gpudm.FloatVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _gpudm.FloatVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _gpudm.FloatVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _gpudm.FloatVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _gpudm.FloatVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _gpudm.FloatVector___setitem__(self, *args)

    def append(self, x):
        return _gpudm.FloatVector_append(self, x)

    def empty(self):
        return _gpudm.FloatVector_empty(self)

    def size(self):
        return _gpudm.FloatVector_size(self)

    def clear(self):
        return _gpudm.FloatVector_clear(self)

    def swap(self, v):
        return _gpudm.FloatVector_swap(self, v)

    def get_allocator(self):
        return _gpudm.FloatVector_get_allocator(self)

    def begin(self):
        return _gpudm.FloatVector_begin(self)

    def end(self):
        return _gpudm.FloatVector_end(self)

    def rbegin(self):
        return _gpudm.FloatVector_rbegin(self)

    def rend(self):
        return _gpudm.FloatVector_rend(self)

    def pop_back(self):
        return _gpudm.FloatVector_pop_back(self)

    def erase(self, *args):
        return _gpudm.FloatVector_erase(self, *args)

    def __init__(self, *args):
        this = _gpudm.new_FloatVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _gpudm.FloatVector_push_back(self, x)

    def front(self):
        return _gpudm.FloatVector_front(self)

    def back(self):
        return _gpudm.FloatVector_back(self)

    def assign(self, n, x):
        return _gpudm.FloatVector_assign(self, n, x)

    def resize(self, *args):
        return _gpudm.FloatVector_resize(self, *args)

    def insert(self, *args):
        return _gpudm.FloatVector_insert(self, *args)

    def reserve(self, n):
        return _gpudm.FloatVector_reserve(self, n)

    def capacity(self):
        return _gpudm.FloatVector_capacity(self)
    __swig_destroy__ = _gpudm.delete_FloatVector
    __del__ = lambda self: None
FloatVector_swigregister = _gpudm.FloatVector_swigregister
FloatVector_swigregister(FloatVector)


def caffe_memset(N, alpha, X):
    return _gpudm.caffe_memset(N, alpha, X)
caffe_memset = _gpudm.caffe_memset

def caffe_rng_rand():
    return _gpudm.caffe_rng_rand()
caffe_rng_rand = _gpudm.caffe_rng_rand

def caffe_gpu_memcpy(N, X, Y):
    return _gpudm.caffe_gpu_memcpy(N, X, Y)
caffe_gpu_memcpy = _gpudm.caffe_gpu_memcpy

def caffe_gpu_memset(N, alpha, X):
    return _gpudm.caffe_gpu_memset(N, alpha, X)
caffe_gpu_memset = _gpudm.caffe_gpu_memset

def caffe_gpu_rng_uniform(n, r):
    return _gpudm.caffe_gpu_rng_uniform(n, r)
caffe_gpu_rng_uniform = _gpudm.caffe_gpu_rng_uniform
class CusparseHandle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CusparseHandle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CusparseHandle, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["cusparse_handle"] = lambda x: _gpudm.CusparseHandle_cusparse_handle
    if _newclass:
        cusparse_handle = staticmethod(_gpudm.CusparseHandle_cusparse_handle)
CusparseHandle_swigregister = _gpudm.CusparseHandle_swigregister
CusparseHandle_swigregister(CusparseHandle)

def CusparseHandle_cusparse_handle():
    return _gpudm.CusparseHandle_cusparse_handle()
CusparseHandle_cusparse_handle = _gpudm.CusparseHandle_cusparse_handle


_gpudm.GOOGLE_PROTOBUF_VERSION_swigconstant(_gpudm)
GOOGLE_PROTOBUF_VERSION = _gpudm.GOOGLE_PROTOBUF_VERSION

_gpudm.GOOGLE_PROTOBUF_MIN_PROTOC_VERSION_swigconstant(_gpudm)
GOOGLE_PROTOBUF_MIN_PROTOC_VERSION = _gpudm.GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
class Message(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Message, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Message, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_Message
    __del__ = lambda self: None
Message_swigregister = _gpudm.Message_swigregister
Message_swigregister(Message)


def protobuf_AddDesc_caffe_2eproto():
    return _gpudm.protobuf_AddDesc_caffe_2eproto()
protobuf_AddDesc_caffe_2eproto = _gpudm.protobuf_AddDesc_caffe_2eproto

def protobuf_AssignDesc_caffe_2eproto():
    return _gpudm.protobuf_AssignDesc_caffe_2eproto()
protobuf_AssignDesc_caffe_2eproto = _gpudm.protobuf_AssignDesc_caffe_2eproto

def protobuf_ShutdownFile_caffe_2eproto():
    return _gpudm.protobuf_ShutdownFile_caffe_2eproto()
protobuf_ShutdownFile_caffe_2eproto = _gpudm.protobuf_ShutdownFile_caffe_2eproto

_gpudm.FillerParameter_VarianceNorm_FAN_IN_swigconstant(_gpudm)
FillerParameter_VarianceNorm_FAN_IN = _gpudm.FillerParameter_VarianceNorm_FAN_IN

_gpudm.FillerParameter_VarianceNorm_FAN_OUT_swigconstant(_gpudm)
FillerParameter_VarianceNorm_FAN_OUT = _gpudm.FillerParameter_VarianceNorm_FAN_OUT

_gpudm.FillerParameter_VarianceNorm_AVERAGE_swigconstant(_gpudm)
FillerParameter_VarianceNorm_AVERAGE = _gpudm.FillerParameter_VarianceNorm_AVERAGE

def FillerParameter_VarianceNorm_IsValid(value):
    return _gpudm.FillerParameter_VarianceNorm_IsValid(value)
FillerParameter_VarianceNorm_IsValid = _gpudm.FillerParameter_VarianceNorm_IsValid

def FillerParameter_VarianceNorm_descriptor():
    return _gpudm.FillerParameter_VarianceNorm_descriptor()
FillerParameter_VarianceNorm_descriptor = _gpudm.FillerParameter_VarianceNorm_descriptor

def FillerParameter_VarianceNorm_Name(value):
    return _gpudm.FillerParameter_VarianceNorm_Name(value)
FillerParameter_VarianceNorm_Name = _gpudm.FillerParameter_VarianceNorm_Name

def FillerParameter_VarianceNorm_Parse(name, value):
    return _gpudm.FillerParameter_VarianceNorm_Parse(name, value)
FillerParameter_VarianceNorm_Parse = _gpudm.FillerParameter_VarianceNorm_Parse

_gpudm.SolverParameter_SnapshotFormat_HDF5_swigconstant(_gpudm)
SolverParameter_SnapshotFormat_HDF5 = _gpudm.SolverParameter_SnapshotFormat_HDF5

_gpudm.SolverParameter_SnapshotFormat_BINARYPROTO_swigconstant(_gpudm)
SolverParameter_SnapshotFormat_BINARYPROTO = _gpudm.SolverParameter_SnapshotFormat_BINARYPROTO

def SolverParameter_SnapshotFormat_IsValid(value):
    return _gpudm.SolverParameter_SnapshotFormat_IsValid(value)
SolverParameter_SnapshotFormat_IsValid = _gpudm.SolverParameter_SnapshotFormat_IsValid

def SolverParameter_SnapshotFormat_descriptor():
    return _gpudm.SolverParameter_SnapshotFormat_descriptor()
SolverParameter_SnapshotFormat_descriptor = _gpudm.SolverParameter_SnapshotFormat_descriptor

def SolverParameter_SnapshotFormat_Name(value):
    return _gpudm.SolverParameter_SnapshotFormat_Name(value)
SolverParameter_SnapshotFormat_Name = _gpudm.SolverParameter_SnapshotFormat_Name

def SolverParameter_SnapshotFormat_Parse(name, value):
    return _gpudm.SolverParameter_SnapshotFormat_Parse(name, value)
SolverParameter_SnapshotFormat_Parse = _gpudm.SolverParameter_SnapshotFormat_Parse

_gpudm.SolverParameter_SolverMode_CPU_swigconstant(_gpudm)
SolverParameter_SolverMode_CPU = _gpudm.SolverParameter_SolverMode_CPU

_gpudm.SolverParameter_SolverMode_GPU_swigconstant(_gpudm)
SolverParameter_SolverMode_GPU = _gpudm.SolverParameter_SolverMode_GPU

def SolverParameter_SolverMode_IsValid(value):
    return _gpudm.SolverParameter_SolverMode_IsValid(value)
SolverParameter_SolverMode_IsValid = _gpudm.SolverParameter_SolverMode_IsValid

def SolverParameter_SolverMode_descriptor():
    return _gpudm.SolverParameter_SolverMode_descriptor()
SolverParameter_SolverMode_descriptor = _gpudm.SolverParameter_SolverMode_descriptor

def SolverParameter_SolverMode_Name(value):
    return _gpudm.SolverParameter_SolverMode_Name(value)
SolverParameter_SolverMode_Name = _gpudm.SolverParameter_SolverMode_Name

def SolverParameter_SolverMode_Parse(name, value):
    return _gpudm.SolverParameter_SolverMode_Parse(name, value)
SolverParameter_SolverMode_Parse = _gpudm.SolverParameter_SolverMode_Parse

_gpudm.SolverParameter_SolverType_SGD_swigconstant(_gpudm)
SolverParameter_SolverType_SGD = _gpudm.SolverParameter_SolverType_SGD

_gpudm.SolverParameter_SolverType_NESTEROV_swigconstant(_gpudm)
SolverParameter_SolverType_NESTEROV = _gpudm.SolverParameter_SolverType_NESTEROV

_gpudm.SolverParameter_SolverType_ADAGRAD_swigconstant(_gpudm)
SolverParameter_SolverType_ADAGRAD = _gpudm.SolverParameter_SolverType_ADAGRAD

_gpudm.SolverParameter_SolverType_RMSPROP_swigconstant(_gpudm)
SolverParameter_SolverType_RMSPROP = _gpudm.SolverParameter_SolverType_RMSPROP

_gpudm.SolverParameter_SolverType_ADADELTA_swigconstant(_gpudm)
SolverParameter_SolverType_ADADELTA = _gpudm.SolverParameter_SolverType_ADADELTA

_gpudm.SolverParameter_SolverType_ADAM_swigconstant(_gpudm)
SolverParameter_SolverType_ADAM = _gpudm.SolverParameter_SolverType_ADAM

def SolverParameter_SolverType_IsValid(value):
    return _gpudm.SolverParameter_SolverType_IsValid(value)
SolverParameter_SolverType_IsValid = _gpudm.SolverParameter_SolverType_IsValid

def SolverParameter_SolverType_descriptor():
    return _gpudm.SolverParameter_SolverType_descriptor()
SolverParameter_SolverType_descriptor = _gpudm.SolverParameter_SolverType_descriptor

def SolverParameter_SolverType_Name(value):
    return _gpudm.SolverParameter_SolverType_Name(value)
SolverParameter_SolverType_Name = _gpudm.SolverParameter_SolverType_Name

def SolverParameter_SolverType_Parse(name, value):
    return _gpudm.SolverParameter_SolverType_Parse(name, value)
SolverParameter_SolverType_Parse = _gpudm.SolverParameter_SolverType_Parse

_gpudm.ParamSpec_DimCheckMode_STRICT_swigconstant(_gpudm)
ParamSpec_DimCheckMode_STRICT = _gpudm.ParamSpec_DimCheckMode_STRICT

_gpudm.ParamSpec_DimCheckMode_PERMISSIVE_swigconstant(_gpudm)
ParamSpec_DimCheckMode_PERMISSIVE = _gpudm.ParamSpec_DimCheckMode_PERMISSIVE

def ParamSpec_DimCheckMode_IsValid(value):
    return _gpudm.ParamSpec_DimCheckMode_IsValid(value)
ParamSpec_DimCheckMode_IsValid = _gpudm.ParamSpec_DimCheckMode_IsValid

def ParamSpec_DimCheckMode_descriptor():
    return _gpudm.ParamSpec_DimCheckMode_descriptor()
ParamSpec_DimCheckMode_descriptor = _gpudm.ParamSpec_DimCheckMode_descriptor

def ParamSpec_DimCheckMode_Name(value):
    return _gpudm.ParamSpec_DimCheckMode_Name(value)
ParamSpec_DimCheckMode_Name = _gpudm.ParamSpec_DimCheckMode_Name

def ParamSpec_DimCheckMode_Parse(name, value):
    return _gpudm.ParamSpec_DimCheckMode_Parse(name, value)
ParamSpec_DimCheckMode_Parse = _gpudm.ParamSpec_DimCheckMode_Parse

_gpudm.ConvolutionParameter_Engine_DEFAULT_swigconstant(_gpudm)
ConvolutionParameter_Engine_DEFAULT = _gpudm.ConvolutionParameter_Engine_DEFAULT

_gpudm.ConvolutionParameter_Engine_CAFFE_swigconstant(_gpudm)
ConvolutionParameter_Engine_CAFFE = _gpudm.ConvolutionParameter_Engine_CAFFE

_gpudm.ConvolutionParameter_Engine_CUDNN_swigconstant(_gpudm)
ConvolutionParameter_Engine_CUDNN = _gpudm.ConvolutionParameter_Engine_CUDNN

def ConvolutionParameter_Engine_IsValid(value):
    return _gpudm.ConvolutionParameter_Engine_IsValid(value)
ConvolutionParameter_Engine_IsValid = _gpudm.ConvolutionParameter_Engine_IsValid

def ConvolutionParameter_Engine_descriptor():
    return _gpudm.ConvolutionParameter_Engine_descriptor()
ConvolutionParameter_Engine_descriptor = _gpudm.ConvolutionParameter_Engine_descriptor

def ConvolutionParameter_Engine_Name(value):
    return _gpudm.ConvolutionParameter_Engine_Name(value)
ConvolutionParameter_Engine_Name = _gpudm.ConvolutionParameter_Engine_Name

def ConvolutionParameter_Engine_Parse(name, value):
    return _gpudm.ConvolutionParameter_Engine_Parse(name, value)
ConvolutionParameter_Engine_Parse = _gpudm.ConvolutionParameter_Engine_Parse

_gpudm.DataParameter_DB_LEVELDB_swigconstant(_gpudm)
DataParameter_DB_LEVELDB = _gpudm.DataParameter_DB_LEVELDB

_gpudm.DataParameter_DB_LMDB_swigconstant(_gpudm)
DataParameter_DB_LMDB = _gpudm.DataParameter_DB_LMDB

def DataParameter_DB_IsValid(value):
    return _gpudm.DataParameter_DB_IsValid(value)
DataParameter_DB_IsValid = _gpudm.DataParameter_DB_IsValid

def DataParameter_DB_descriptor():
    return _gpudm.DataParameter_DB_descriptor()
DataParameter_DB_descriptor = _gpudm.DataParameter_DB_descriptor

def DataParameter_DB_Name(value):
    return _gpudm.DataParameter_DB_Name(value)
DataParameter_DB_Name = _gpudm.DataParameter_DB_Name

def DataParameter_DB_Parse(name, value):
    return _gpudm.DataParameter_DB_Parse(name, value)
DataParameter_DB_Parse = _gpudm.DataParameter_DB_Parse

_gpudm.EltwiseParameter_EltwiseOp_PROD_swigconstant(_gpudm)
EltwiseParameter_EltwiseOp_PROD = _gpudm.EltwiseParameter_EltwiseOp_PROD

_gpudm.EltwiseParameter_EltwiseOp_SUM_swigconstant(_gpudm)
EltwiseParameter_EltwiseOp_SUM = _gpudm.EltwiseParameter_EltwiseOp_SUM

_gpudm.EltwiseParameter_EltwiseOp_MAX_swigconstant(_gpudm)
EltwiseParameter_EltwiseOp_MAX = _gpudm.EltwiseParameter_EltwiseOp_MAX

def EltwiseParameter_EltwiseOp_IsValid(value):
    return _gpudm.EltwiseParameter_EltwiseOp_IsValid(value)
EltwiseParameter_EltwiseOp_IsValid = _gpudm.EltwiseParameter_EltwiseOp_IsValid

def EltwiseParameter_EltwiseOp_descriptor():
    return _gpudm.EltwiseParameter_EltwiseOp_descriptor()
EltwiseParameter_EltwiseOp_descriptor = _gpudm.EltwiseParameter_EltwiseOp_descriptor

def EltwiseParameter_EltwiseOp_Name(value):
    return _gpudm.EltwiseParameter_EltwiseOp_Name(value)
EltwiseParameter_EltwiseOp_Name = _gpudm.EltwiseParameter_EltwiseOp_Name

def EltwiseParameter_EltwiseOp_Parse(name, value):
    return _gpudm.EltwiseParameter_EltwiseOp_Parse(name, value)
EltwiseParameter_EltwiseOp_Parse = _gpudm.EltwiseParameter_EltwiseOp_Parse

_gpudm.HingeLossParameter_Norm_L1_swigconstant(_gpudm)
HingeLossParameter_Norm_L1 = _gpudm.HingeLossParameter_Norm_L1

_gpudm.HingeLossParameter_Norm_L2_swigconstant(_gpudm)
HingeLossParameter_Norm_L2 = _gpudm.HingeLossParameter_Norm_L2

def HingeLossParameter_Norm_IsValid(value):
    return _gpudm.HingeLossParameter_Norm_IsValid(value)
HingeLossParameter_Norm_IsValid = _gpudm.HingeLossParameter_Norm_IsValid

def HingeLossParameter_Norm_descriptor():
    return _gpudm.HingeLossParameter_Norm_descriptor()
HingeLossParameter_Norm_descriptor = _gpudm.HingeLossParameter_Norm_descriptor

def HingeLossParameter_Norm_Name(value):
    return _gpudm.HingeLossParameter_Norm_Name(value)
HingeLossParameter_Norm_Name = _gpudm.HingeLossParameter_Norm_Name

def HingeLossParameter_Norm_Parse(name, value):
    return _gpudm.HingeLossParameter_Norm_Parse(name, value)
HingeLossParameter_Norm_Parse = _gpudm.HingeLossParameter_Norm_Parse

_gpudm.LRNParameter_NormRegion_ACROSS_CHANNELS_swigconstant(_gpudm)
LRNParameter_NormRegion_ACROSS_CHANNELS = _gpudm.LRNParameter_NormRegion_ACROSS_CHANNELS

_gpudm.LRNParameter_NormRegion_WITHIN_CHANNEL_swigconstant(_gpudm)
LRNParameter_NormRegion_WITHIN_CHANNEL = _gpudm.LRNParameter_NormRegion_WITHIN_CHANNEL

def LRNParameter_NormRegion_IsValid(value):
    return _gpudm.LRNParameter_NormRegion_IsValid(value)
LRNParameter_NormRegion_IsValid = _gpudm.LRNParameter_NormRegion_IsValid

def LRNParameter_NormRegion_descriptor():
    return _gpudm.LRNParameter_NormRegion_descriptor()
LRNParameter_NormRegion_descriptor = _gpudm.LRNParameter_NormRegion_descriptor

def LRNParameter_NormRegion_Name(value):
    return _gpudm.LRNParameter_NormRegion_Name(value)
LRNParameter_NormRegion_Name = _gpudm.LRNParameter_NormRegion_Name

def LRNParameter_NormRegion_Parse(name, value):
    return _gpudm.LRNParameter_NormRegion_Parse(name, value)
LRNParameter_NormRegion_Parse = _gpudm.LRNParameter_NormRegion_Parse

_gpudm.LRNParameter_Engine_DEFAULT_swigconstant(_gpudm)
LRNParameter_Engine_DEFAULT = _gpudm.LRNParameter_Engine_DEFAULT

_gpudm.LRNParameter_Engine_CAFFE_swigconstant(_gpudm)
LRNParameter_Engine_CAFFE = _gpudm.LRNParameter_Engine_CAFFE

_gpudm.LRNParameter_Engine_CUDNN_swigconstant(_gpudm)
LRNParameter_Engine_CUDNN = _gpudm.LRNParameter_Engine_CUDNN

def LRNParameter_Engine_IsValid(value):
    return _gpudm.LRNParameter_Engine_IsValid(value)
LRNParameter_Engine_IsValid = _gpudm.LRNParameter_Engine_IsValid

def LRNParameter_Engine_descriptor():
    return _gpudm.LRNParameter_Engine_descriptor()
LRNParameter_Engine_descriptor = _gpudm.LRNParameter_Engine_descriptor

def LRNParameter_Engine_Name(value):
    return _gpudm.LRNParameter_Engine_Name(value)
LRNParameter_Engine_Name = _gpudm.LRNParameter_Engine_Name

def LRNParameter_Engine_Parse(name, value):
    return _gpudm.LRNParameter_Engine_Parse(name, value)
LRNParameter_Engine_Parse = _gpudm.LRNParameter_Engine_Parse

_gpudm.PoolingParameter_PoolMethod_MAX_swigconstant(_gpudm)
PoolingParameter_PoolMethod_MAX = _gpudm.PoolingParameter_PoolMethod_MAX

_gpudm.PoolingParameter_PoolMethod_AVE_swigconstant(_gpudm)
PoolingParameter_PoolMethod_AVE = _gpudm.PoolingParameter_PoolMethod_AVE

_gpudm.PoolingParameter_PoolMethod_STOCHASTIC_swigconstant(_gpudm)
PoolingParameter_PoolMethod_STOCHASTIC = _gpudm.PoolingParameter_PoolMethod_STOCHASTIC

def PoolingParameter_PoolMethod_IsValid(value):
    return _gpudm.PoolingParameter_PoolMethod_IsValid(value)
PoolingParameter_PoolMethod_IsValid = _gpudm.PoolingParameter_PoolMethod_IsValid

def PoolingParameter_PoolMethod_descriptor():
    return _gpudm.PoolingParameter_PoolMethod_descriptor()
PoolingParameter_PoolMethod_descriptor = _gpudm.PoolingParameter_PoolMethod_descriptor

def PoolingParameter_PoolMethod_Name(value):
    return _gpudm.PoolingParameter_PoolMethod_Name(value)
PoolingParameter_PoolMethod_Name = _gpudm.PoolingParameter_PoolMethod_Name

def PoolingParameter_PoolMethod_Parse(name, value):
    return _gpudm.PoolingParameter_PoolMethod_Parse(name, value)
PoolingParameter_PoolMethod_Parse = _gpudm.PoolingParameter_PoolMethod_Parse

_gpudm.PoolingParameter_Engine_DEFAULT_swigconstant(_gpudm)
PoolingParameter_Engine_DEFAULT = _gpudm.PoolingParameter_Engine_DEFAULT

_gpudm.PoolingParameter_Engine_CAFFE_swigconstant(_gpudm)
PoolingParameter_Engine_CAFFE = _gpudm.PoolingParameter_Engine_CAFFE

_gpudm.PoolingParameter_Engine_CUDNN_swigconstant(_gpudm)
PoolingParameter_Engine_CUDNN = _gpudm.PoolingParameter_Engine_CUDNN

def PoolingParameter_Engine_IsValid(value):
    return _gpudm.PoolingParameter_Engine_IsValid(value)
PoolingParameter_Engine_IsValid = _gpudm.PoolingParameter_Engine_IsValid

def PoolingParameter_Engine_descriptor():
    return _gpudm.PoolingParameter_Engine_descriptor()
PoolingParameter_Engine_descriptor = _gpudm.PoolingParameter_Engine_descriptor

def PoolingParameter_Engine_Name(value):
    return _gpudm.PoolingParameter_Engine_Name(value)
PoolingParameter_Engine_Name = _gpudm.PoolingParameter_Engine_Name

def PoolingParameter_Engine_Parse(name, value):
    return _gpudm.PoolingParameter_Engine_Parse(name, value)
PoolingParameter_Engine_Parse = _gpudm.PoolingParameter_Engine_Parse

_gpudm.ReductionParameter_ReductionOp_SUM_swigconstant(_gpudm)
ReductionParameter_ReductionOp_SUM = _gpudm.ReductionParameter_ReductionOp_SUM

_gpudm.ReductionParameter_ReductionOp_ASUM_swigconstant(_gpudm)
ReductionParameter_ReductionOp_ASUM = _gpudm.ReductionParameter_ReductionOp_ASUM

_gpudm.ReductionParameter_ReductionOp_SUMSQ_swigconstant(_gpudm)
ReductionParameter_ReductionOp_SUMSQ = _gpudm.ReductionParameter_ReductionOp_SUMSQ

_gpudm.ReductionParameter_ReductionOp_MEAN_swigconstant(_gpudm)
ReductionParameter_ReductionOp_MEAN = _gpudm.ReductionParameter_ReductionOp_MEAN

def ReductionParameter_ReductionOp_IsValid(value):
    return _gpudm.ReductionParameter_ReductionOp_IsValid(value)
ReductionParameter_ReductionOp_IsValid = _gpudm.ReductionParameter_ReductionOp_IsValid

def ReductionParameter_ReductionOp_descriptor():
    return _gpudm.ReductionParameter_ReductionOp_descriptor()
ReductionParameter_ReductionOp_descriptor = _gpudm.ReductionParameter_ReductionOp_descriptor

def ReductionParameter_ReductionOp_Name(value):
    return _gpudm.ReductionParameter_ReductionOp_Name(value)
ReductionParameter_ReductionOp_Name = _gpudm.ReductionParameter_ReductionOp_Name

def ReductionParameter_ReductionOp_Parse(name, value):
    return _gpudm.ReductionParameter_ReductionOp_Parse(name, value)
ReductionParameter_ReductionOp_Parse = _gpudm.ReductionParameter_ReductionOp_Parse

_gpudm.ReLUParameter_Engine_DEFAULT_swigconstant(_gpudm)
ReLUParameter_Engine_DEFAULT = _gpudm.ReLUParameter_Engine_DEFAULT

_gpudm.ReLUParameter_Engine_CAFFE_swigconstant(_gpudm)
ReLUParameter_Engine_CAFFE = _gpudm.ReLUParameter_Engine_CAFFE

_gpudm.ReLUParameter_Engine_CUDNN_swigconstant(_gpudm)
ReLUParameter_Engine_CUDNN = _gpudm.ReLUParameter_Engine_CUDNN

def ReLUParameter_Engine_IsValid(value):
    return _gpudm.ReLUParameter_Engine_IsValid(value)
ReLUParameter_Engine_IsValid = _gpudm.ReLUParameter_Engine_IsValid

def ReLUParameter_Engine_descriptor():
    return _gpudm.ReLUParameter_Engine_descriptor()
ReLUParameter_Engine_descriptor = _gpudm.ReLUParameter_Engine_descriptor

def ReLUParameter_Engine_Name(value):
    return _gpudm.ReLUParameter_Engine_Name(value)
ReLUParameter_Engine_Name = _gpudm.ReLUParameter_Engine_Name

def ReLUParameter_Engine_Parse(name, value):
    return _gpudm.ReLUParameter_Engine_Parse(name, value)
ReLUParameter_Engine_Parse = _gpudm.ReLUParameter_Engine_Parse

_gpudm.SigmoidParameter_Engine_DEFAULT_swigconstant(_gpudm)
SigmoidParameter_Engine_DEFAULT = _gpudm.SigmoidParameter_Engine_DEFAULT

_gpudm.SigmoidParameter_Engine_CAFFE_swigconstant(_gpudm)
SigmoidParameter_Engine_CAFFE = _gpudm.SigmoidParameter_Engine_CAFFE

_gpudm.SigmoidParameter_Engine_CUDNN_swigconstant(_gpudm)
SigmoidParameter_Engine_CUDNN = _gpudm.SigmoidParameter_Engine_CUDNN

def SigmoidParameter_Engine_IsValid(value):
    return _gpudm.SigmoidParameter_Engine_IsValid(value)
SigmoidParameter_Engine_IsValid = _gpudm.SigmoidParameter_Engine_IsValid

def SigmoidParameter_Engine_descriptor():
    return _gpudm.SigmoidParameter_Engine_descriptor()
SigmoidParameter_Engine_descriptor = _gpudm.SigmoidParameter_Engine_descriptor

def SigmoidParameter_Engine_Name(value):
    return _gpudm.SigmoidParameter_Engine_Name(value)
SigmoidParameter_Engine_Name = _gpudm.SigmoidParameter_Engine_Name

def SigmoidParameter_Engine_Parse(name, value):
    return _gpudm.SigmoidParameter_Engine_Parse(name, value)
SigmoidParameter_Engine_Parse = _gpudm.SigmoidParameter_Engine_Parse

_gpudm.SoftmaxParameter_Engine_DEFAULT_swigconstant(_gpudm)
SoftmaxParameter_Engine_DEFAULT = _gpudm.SoftmaxParameter_Engine_DEFAULT

_gpudm.SoftmaxParameter_Engine_CAFFE_swigconstant(_gpudm)
SoftmaxParameter_Engine_CAFFE = _gpudm.SoftmaxParameter_Engine_CAFFE

_gpudm.SoftmaxParameter_Engine_CUDNN_swigconstant(_gpudm)
SoftmaxParameter_Engine_CUDNN = _gpudm.SoftmaxParameter_Engine_CUDNN

def SoftmaxParameter_Engine_IsValid(value):
    return _gpudm.SoftmaxParameter_Engine_IsValid(value)
SoftmaxParameter_Engine_IsValid = _gpudm.SoftmaxParameter_Engine_IsValid

def SoftmaxParameter_Engine_descriptor():
    return _gpudm.SoftmaxParameter_Engine_descriptor()
SoftmaxParameter_Engine_descriptor = _gpudm.SoftmaxParameter_Engine_descriptor

def SoftmaxParameter_Engine_Name(value):
    return _gpudm.SoftmaxParameter_Engine_Name(value)
SoftmaxParameter_Engine_Name = _gpudm.SoftmaxParameter_Engine_Name

def SoftmaxParameter_Engine_Parse(name, value):
    return _gpudm.SoftmaxParameter_Engine_Parse(name, value)
SoftmaxParameter_Engine_Parse = _gpudm.SoftmaxParameter_Engine_Parse

_gpudm.TanHParameter_Engine_DEFAULT_swigconstant(_gpudm)
TanHParameter_Engine_DEFAULT = _gpudm.TanHParameter_Engine_DEFAULT

_gpudm.TanHParameter_Engine_CAFFE_swigconstant(_gpudm)
TanHParameter_Engine_CAFFE = _gpudm.TanHParameter_Engine_CAFFE

_gpudm.TanHParameter_Engine_CUDNN_swigconstant(_gpudm)
TanHParameter_Engine_CUDNN = _gpudm.TanHParameter_Engine_CUDNN

def TanHParameter_Engine_IsValid(value):
    return _gpudm.TanHParameter_Engine_IsValid(value)
TanHParameter_Engine_IsValid = _gpudm.TanHParameter_Engine_IsValid

def TanHParameter_Engine_descriptor():
    return _gpudm.TanHParameter_Engine_descriptor()
TanHParameter_Engine_descriptor = _gpudm.TanHParameter_Engine_descriptor

def TanHParameter_Engine_Name(value):
    return _gpudm.TanHParameter_Engine_Name(value)
TanHParameter_Engine_Name = _gpudm.TanHParameter_Engine_Name

def TanHParameter_Engine_Parse(name, value):
    return _gpudm.TanHParameter_Engine_Parse(name, value)
TanHParameter_Engine_Parse = _gpudm.TanHParameter_Engine_Parse

_gpudm.SPPParameter_PoolMethod_MAX_swigconstant(_gpudm)
SPPParameter_PoolMethod_MAX = _gpudm.SPPParameter_PoolMethod_MAX

_gpudm.SPPParameter_PoolMethod_AVE_swigconstant(_gpudm)
SPPParameter_PoolMethod_AVE = _gpudm.SPPParameter_PoolMethod_AVE

_gpudm.SPPParameter_PoolMethod_STOCHASTIC_swigconstant(_gpudm)
SPPParameter_PoolMethod_STOCHASTIC = _gpudm.SPPParameter_PoolMethod_STOCHASTIC

def SPPParameter_PoolMethod_IsValid(value):
    return _gpudm.SPPParameter_PoolMethod_IsValid(value)
SPPParameter_PoolMethod_IsValid = _gpudm.SPPParameter_PoolMethod_IsValid

def SPPParameter_PoolMethod_descriptor():
    return _gpudm.SPPParameter_PoolMethod_descriptor()
SPPParameter_PoolMethod_descriptor = _gpudm.SPPParameter_PoolMethod_descriptor

def SPPParameter_PoolMethod_Name(value):
    return _gpudm.SPPParameter_PoolMethod_Name(value)
SPPParameter_PoolMethod_Name = _gpudm.SPPParameter_PoolMethod_Name

def SPPParameter_PoolMethod_Parse(name, value):
    return _gpudm.SPPParameter_PoolMethod_Parse(name, value)
SPPParameter_PoolMethod_Parse = _gpudm.SPPParameter_PoolMethod_Parse

_gpudm.SPPParameter_Engine_DEFAULT_swigconstant(_gpudm)
SPPParameter_Engine_DEFAULT = _gpudm.SPPParameter_Engine_DEFAULT

_gpudm.SPPParameter_Engine_CAFFE_swigconstant(_gpudm)
SPPParameter_Engine_CAFFE = _gpudm.SPPParameter_Engine_CAFFE

_gpudm.SPPParameter_Engine_CUDNN_swigconstant(_gpudm)
SPPParameter_Engine_CUDNN = _gpudm.SPPParameter_Engine_CUDNN

def SPPParameter_Engine_IsValid(value):
    return _gpudm.SPPParameter_Engine_IsValid(value)
SPPParameter_Engine_IsValid = _gpudm.SPPParameter_Engine_IsValid

def SPPParameter_Engine_descriptor():
    return _gpudm.SPPParameter_Engine_descriptor()
SPPParameter_Engine_descriptor = _gpudm.SPPParameter_Engine_descriptor

def SPPParameter_Engine_Name(value):
    return _gpudm.SPPParameter_Engine_Name(value)
SPPParameter_Engine_Name = _gpudm.SPPParameter_Engine_Name

def SPPParameter_Engine_Parse(name, value):
    return _gpudm.SPPParameter_Engine_Parse(name, value)
SPPParameter_Engine_Parse = _gpudm.SPPParameter_Engine_Parse

_gpudm.V1LayerParameter_LayerType_NONE_swigconstant(_gpudm)
V1LayerParameter_LayerType_NONE = _gpudm.V1LayerParameter_LayerType_NONE

_gpudm.V1LayerParameter_LayerType_ABSVAL_swigconstant(_gpudm)
V1LayerParameter_LayerType_ABSVAL = _gpudm.V1LayerParameter_LayerType_ABSVAL

_gpudm.V1LayerParameter_LayerType_ACCURACY_swigconstant(_gpudm)
V1LayerParameter_LayerType_ACCURACY = _gpudm.V1LayerParameter_LayerType_ACCURACY

_gpudm.V1LayerParameter_LayerType_ARGMAX_swigconstant(_gpudm)
V1LayerParameter_LayerType_ARGMAX = _gpudm.V1LayerParameter_LayerType_ARGMAX

_gpudm.V1LayerParameter_LayerType_BNLL_swigconstant(_gpudm)
V1LayerParameter_LayerType_BNLL = _gpudm.V1LayerParameter_LayerType_BNLL

_gpudm.V1LayerParameter_LayerType_CONCAT_swigconstant(_gpudm)
V1LayerParameter_LayerType_CONCAT = _gpudm.V1LayerParameter_LayerType_CONCAT

_gpudm.V1LayerParameter_LayerType_CONTRASTIVE_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_CONTRASTIVE_LOSS = _gpudm.V1LayerParameter_LayerType_CONTRASTIVE_LOSS

_gpudm.V1LayerParameter_LayerType_CONVOLUTION_swigconstant(_gpudm)
V1LayerParameter_LayerType_CONVOLUTION = _gpudm.V1LayerParameter_LayerType_CONVOLUTION

_gpudm.V1LayerParameter_LayerType_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_DATA = _gpudm.V1LayerParameter_LayerType_DATA

_gpudm.V1LayerParameter_LayerType_DECONVOLUTION_swigconstant(_gpudm)
V1LayerParameter_LayerType_DECONVOLUTION = _gpudm.V1LayerParameter_LayerType_DECONVOLUTION

_gpudm.V1LayerParameter_LayerType_DROPOUT_swigconstant(_gpudm)
V1LayerParameter_LayerType_DROPOUT = _gpudm.V1LayerParameter_LayerType_DROPOUT

_gpudm.V1LayerParameter_LayerType_DUMMY_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_DUMMY_DATA = _gpudm.V1LayerParameter_LayerType_DUMMY_DATA

_gpudm.V1LayerParameter_LayerType_EUCLIDEAN_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_EUCLIDEAN_LOSS = _gpudm.V1LayerParameter_LayerType_EUCLIDEAN_LOSS

_gpudm.V1LayerParameter_LayerType_ELTWISE_swigconstant(_gpudm)
V1LayerParameter_LayerType_ELTWISE = _gpudm.V1LayerParameter_LayerType_ELTWISE

_gpudm.V1LayerParameter_LayerType_EXP_swigconstant(_gpudm)
V1LayerParameter_LayerType_EXP = _gpudm.V1LayerParameter_LayerType_EXP

_gpudm.V1LayerParameter_LayerType_FLATTEN_swigconstant(_gpudm)
V1LayerParameter_LayerType_FLATTEN = _gpudm.V1LayerParameter_LayerType_FLATTEN

_gpudm.V1LayerParameter_LayerType_HDF5_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_HDF5_DATA = _gpudm.V1LayerParameter_LayerType_HDF5_DATA

_gpudm.V1LayerParameter_LayerType_HDF5_OUTPUT_swigconstant(_gpudm)
V1LayerParameter_LayerType_HDF5_OUTPUT = _gpudm.V1LayerParameter_LayerType_HDF5_OUTPUT

_gpudm.V1LayerParameter_LayerType_HINGE_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_HINGE_LOSS = _gpudm.V1LayerParameter_LayerType_HINGE_LOSS

_gpudm.V1LayerParameter_LayerType_IM2COL_swigconstant(_gpudm)
V1LayerParameter_LayerType_IM2COL = _gpudm.V1LayerParameter_LayerType_IM2COL

_gpudm.V1LayerParameter_LayerType_IMAGE_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_IMAGE_DATA = _gpudm.V1LayerParameter_LayerType_IMAGE_DATA

_gpudm.V1LayerParameter_LayerType_INFOGAIN_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_INFOGAIN_LOSS = _gpudm.V1LayerParameter_LayerType_INFOGAIN_LOSS

_gpudm.V1LayerParameter_LayerType_INNER_PRODUCT_swigconstant(_gpudm)
V1LayerParameter_LayerType_INNER_PRODUCT = _gpudm.V1LayerParameter_LayerType_INNER_PRODUCT

_gpudm.V1LayerParameter_LayerType_LRN_swigconstant(_gpudm)
V1LayerParameter_LayerType_LRN = _gpudm.V1LayerParameter_LayerType_LRN

_gpudm.V1LayerParameter_LayerType_MEMORY_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_MEMORY_DATA = _gpudm.V1LayerParameter_LayerType_MEMORY_DATA

_gpudm.V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS = _gpudm.V1LayerParameter_LayerType_MULTINOMIAL_LOGISTIC_LOSS

_gpudm.V1LayerParameter_LayerType_MVN_swigconstant(_gpudm)
V1LayerParameter_LayerType_MVN = _gpudm.V1LayerParameter_LayerType_MVN

_gpudm.V1LayerParameter_LayerType_POOLING_swigconstant(_gpudm)
V1LayerParameter_LayerType_POOLING = _gpudm.V1LayerParameter_LayerType_POOLING

_gpudm.V1LayerParameter_LayerType_POWER_swigconstant(_gpudm)
V1LayerParameter_LayerType_POWER = _gpudm.V1LayerParameter_LayerType_POWER

_gpudm.V1LayerParameter_LayerType_RELU_swigconstant(_gpudm)
V1LayerParameter_LayerType_RELU = _gpudm.V1LayerParameter_LayerType_RELU

_gpudm.V1LayerParameter_LayerType_SIGMOID_swigconstant(_gpudm)
V1LayerParameter_LayerType_SIGMOID = _gpudm.V1LayerParameter_LayerType_SIGMOID

_gpudm.V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS = _gpudm.V1LayerParameter_LayerType_SIGMOID_CROSS_ENTROPY_LOSS

_gpudm.V1LayerParameter_LayerType_SILENCE_swigconstant(_gpudm)
V1LayerParameter_LayerType_SILENCE = _gpudm.V1LayerParameter_LayerType_SILENCE

_gpudm.V1LayerParameter_LayerType_SOFTMAX_swigconstant(_gpudm)
V1LayerParameter_LayerType_SOFTMAX = _gpudm.V1LayerParameter_LayerType_SOFTMAX

_gpudm.V1LayerParameter_LayerType_SOFTMAX_LOSS_swigconstant(_gpudm)
V1LayerParameter_LayerType_SOFTMAX_LOSS = _gpudm.V1LayerParameter_LayerType_SOFTMAX_LOSS

_gpudm.V1LayerParameter_LayerType_SPLIT_swigconstant(_gpudm)
V1LayerParameter_LayerType_SPLIT = _gpudm.V1LayerParameter_LayerType_SPLIT

_gpudm.V1LayerParameter_LayerType_SLICE_swigconstant(_gpudm)
V1LayerParameter_LayerType_SLICE = _gpudm.V1LayerParameter_LayerType_SLICE

_gpudm.V1LayerParameter_LayerType_TANH_swigconstant(_gpudm)
V1LayerParameter_LayerType_TANH = _gpudm.V1LayerParameter_LayerType_TANH

_gpudm.V1LayerParameter_LayerType_WINDOW_DATA_swigconstant(_gpudm)
V1LayerParameter_LayerType_WINDOW_DATA = _gpudm.V1LayerParameter_LayerType_WINDOW_DATA

_gpudm.V1LayerParameter_LayerType_THRESHOLD_swigconstant(_gpudm)
V1LayerParameter_LayerType_THRESHOLD = _gpudm.V1LayerParameter_LayerType_THRESHOLD

def V1LayerParameter_LayerType_IsValid(value):
    return _gpudm.V1LayerParameter_LayerType_IsValid(value)
V1LayerParameter_LayerType_IsValid = _gpudm.V1LayerParameter_LayerType_IsValid

def V1LayerParameter_LayerType_descriptor():
    return _gpudm.V1LayerParameter_LayerType_descriptor()
V1LayerParameter_LayerType_descriptor = _gpudm.V1LayerParameter_LayerType_descriptor

def V1LayerParameter_LayerType_Name(value):
    return _gpudm.V1LayerParameter_LayerType_Name(value)
V1LayerParameter_LayerType_Name = _gpudm.V1LayerParameter_LayerType_Name

def V1LayerParameter_LayerType_Parse(name, value):
    return _gpudm.V1LayerParameter_LayerType_Parse(name, value)
V1LayerParameter_LayerType_Parse = _gpudm.V1LayerParameter_LayerType_Parse

_gpudm.V1LayerParameter_DimCheckMode_STRICT_swigconstant(_gpudm)
V1LayerParameter_DimCheckMode_STRICT = _gpudm.V1LayerParameter_DimCheckMode_STRICT

_gpudm.V1LayerParameter_DimCheckMode_PERMISSIVE_swigconstant(_gpudm)
V1LayerParameter_DimCheckMode_PERMISSIVE = _gpudm.V1LayerParameter_DimCheckMode_PERMISSIVE

def V1LayerParameter_DimCheckMode_IsValid(value):
    return _gpudm.V1LayerParameter_DimCheckMode_IsValid(value)
V1LayerParameter_DimCheckMode_IsValid = _gpudm.V1LayerParameter_DimCheckMode_IsValid

def V1LayerParameter_DimCheckMode_descriptor():
    return _gpudm.V1LayerParameter_DimCheckMode_descriptor()
V1LayerParameter_DimCheckMode_descriptor = _gpudm.V1LayerParameter_DimCheckMode_descriptor

def V1LayerParameter_DimCheckMode_Name(value):
    return _gpudm.V1LayerParameter_DimCheckMode_Name(value)
V1LayerParameter_DimCheckMode_Name = _gpudm.V1LayerParameter_DimCheckMode_Name

def V1LayerParameter_DimCheckMode_Parse(name, value):
    return _gpudm.V1LayerParameter_DimCheckMode_Parse(name, value)
V1LayerParameter_DimCheckMode_Parse = _gpudm.V1LayerParameter_DimCheckMode_Parse

_gpudm.V0LayerParameter_PoolMethod_MAX_swigconstant(_gpudm)
V0LayerParameter_PoolMethod_MAX = _gpudm.V0LayerParameter_PoolMethod_MAX

_gpudm.V0LayerParameter_PoolMethod_AVE_swigconstant(_gpudm)
V0LayerParameter_PoolMethod_AVE = _gpudm.V0LayerParameter_PoolMethod_AVE

_gpudm.V0LayerParameter_PoolMethod_STOCHASTIC_swigconstant(_gpudm)
V0LayerParameter_PoolMethod_STOCHASTIC = _gpudm.V0LayerParameter_PoolMethod_STOCHASTIC

def V0LayerParameter_PoolMethod_IsValid(value):
    return _gpudm.V0LayerParameter_PoolMethod_IsValid(value)
V0LayerParameter_PoolMethod_IsValid = _gpudm.V0LayerParameter_PoolMethod_IsValid

def V0LayerParameter_PoolMethod_descriptor():
    return _gpudm.V0LayerParameter_PoolMethod_descriptor()
V0LayerParameter_PoolMethod_descriptor = _gpudm.V0LayerParameter_PoolMethod_descriptor

def V0LayerParameter_PoolMethod_Name(value):
    return _gpudm.V0LayerParameter_PoolMethod_Name(value)
V0LayerParameter_PoolMethod_Name = _gpudm.V0LayerParameter_PoolMethod_Name

def V0LayerParameter_PoolMethod_Parse(name, value):
    return _gpudm.V0LayerParameter_PoolMethod_Parse(name, value)
V0LayerParameter_PoolMethod_Parse = _gpudm.V0LayerParameter_PoolMethod_Parse

_gpudm.TRAIN_swigconstant(_gpudm)
TRAIN = _gpudm.TRAIN

_gpudm.TEST_swigconstant(_gpudm)
TEST = _gpudm.TEST

def Phase_IsValid(value):
    return _gpudm.Phase_IsValid(value)
Phase_IsValid = _gpudm.Phase_IsValid

def Phase_descriptor():
    return _gpudm.Phase_descriptor()
Phase_descriptor = _gpudm.Phase_descriptor

def Phase_Name(value):
    return _gpudm.Phase_Name(value)
Phase_Name = _gpudm.Phase_Name

def Phase_Parse(name, value):
    return _gpudm.Phase_Parse(name, value)
Phase_Parse = _gpudm.Phase_Parse
class BlobShape(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobShape, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BlobShape, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_BlobShape
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_BlobShape(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.BlobShape_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.BlobShape_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.BlobShape_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.BlobShape_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.BlobShape_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.BlobShape_default_instance)

    def Swap(self, other):
        return _gpudm.BlobShape_Swap(self, other)

    def New(self):
        return _gpudm.BlobShape_New(self)

    def CopyFrom(self, *args):
        return _gpudm.BlobShape_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.BlobShape_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.BlobShape_Clear(self)

    def IsInitialized(self):
        return _gpudm.BlobShape_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.BlobShape_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.BlobShape_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.BlobShape_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.BlobShape_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.BlobShape_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.BlobShape_GetMetadata(self)

    def dim_size(self):
        return _gpudm.BlobShape_dim_size(self)

    def clear_dim(self):
        return _gpudm.BlobShape_clear_dim(self)
    kDimFieldNumber = _gpudm.BlobShape_kDimFieldNumber

    def set_dim(self, index, value):
        return _gpudm.BlobShape_set_dim(self, index, value)

    def add_dim(self, value):
        return _gpudm.BlobShape_add_dim(self, value)

    def dim(self, *args):
        return _gpudm.BlobShape_dim(self, *args)

    def mutable_dim(self):
        return _gpudm.BlobShape_mutable_dim(self)
BlobShape_swigregister = _gpudm.BlobShape_swigregister
BlobShape_swigregister(BlobShape)
FillerParameter_VarianceNorm_VarianceNorm_MIN = cvar.FillerParameter_VarianceNorm_VarianceNorm_MIN
FillerParameter_VarianceNorm_VarianceNorm_MAX = cvar.FillerParameter_VarianceNorm_VarianceNorm_MAX
FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE = cvar.FillerParameter_VarianceNorm_VarianceNorm_ARRAYSIZE
SolverParameter_SnapshotFormat_SnapshotFormat_MIN = cvar.SolverParameter_SnapshotFormat_SnapshotFormat_MIN
SolverParameter_SnapshotFormat_SnapshotFormat_MAX = cvar.SolverParameter_SnapshotFormat_SnapshotFormat_MAX
SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE = cvar.SolverParameter_SnapshotFormat_SnapshotFormat_ARRAYSIZE
SolverParameter_SolverMode_SolverMode_MIN = cvar.SolverParameter_SolverMode_SolverMode_MIN
SolverParameter_SolverMode_SolverMode_MAX = cvar.SolverParameter_SolverMode_SolverMode_MAX
SolverParameter_SolverMode_SolverMode_ARRAYSIZE = cvar.SolverParameter_SolverMode_SolverMode_ARRAYSIZE
SolverParameter_SolverType_SolverType_MIN = cvar.SolverParameter_SolverType_SolverType_MIN
SolverParameter_SolverType_SolverType_MAX = cvar.SolverParameter_SolverType_SolverType_MAX
SolverParameter_SolverType_SolverType_ARRAYSIZE = cvar.SolverParameter_SolverType_SolverType_ARRAYSIZE
ParamSpec_DimCheckMode_DimCheckMode_MIN = cvar.ParamSpec_DimCheckMode_DimCheckMode_MIN
ParamSpec_DimCheckMode_DimCheckMode_MAX = cvar.ParamSpec_DimCheckMode_DimCheckMode_MAX
ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE = cvar.ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE
ConvolutionParameter_Engine_Engine_MIN = cvar.ConvolutionParameter_Engine_Engine_MIN
ConvolutionParameter_Engine_Engine_MAX = cvar.ConvolutionParameter_Engine_Engine_MAX
ConvolutionParameter_Engine_Engine_ARRAYSIZE = cvar.ConvolutionParameter_Engine_Engine_ARRAYSIZE
DataParameter_DB_DB_MIN = cvar.DataParameter_DB_DB_MIN
DataParameter_DB_DB_MAX = cvar.DataParameter_DB_DB_MAX
DataParameter_DB_DB_ARRAYSIZE = cvar.DataParameter_DB_DB_ARRAYSIZE
EltwiseParameter_EltwiseOp_EltwiseOp_MIN = cvar.EltwiseParameter_EltwiseOp_EltwiseOp_MIN
EltwiseParameter_EltwiseOp_EltwiseOp_MAX = cvar.EltwiseParameter_EltwiseOp_EltwiseOp_MAX
EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE = cvar.EltwiseParameter_EltwiseOp_EltwiseOp_ARRAYSIZE
HingeLossParameter_Norm_Norm_MIN = cvar.HingeLossParameter_Norm_Norm_MIN
HingeLossParameter_Norm_Norm_MAX = cvar.HingeLossParameter_Norm_Norm_MAX
HingeLossParameter_Norm_Norm_ARRAYSIZE = cvar.HingeLossParameter_Norm_Norm_ARRAYSIZE
LRNParameter_NormRegion_NormRegion_MIN = cvar.LRNParameter_NormRegion_NormRegion_MIN
LRNParameter_NormRegion_NormRegion_MAX = cvar.LRNParameter_NormRegion_NormRegion_MAX
LRNParameter_NormRegion_NormRegion_ARRAYSIZE = cvar.LRNParameter_NormRegion_NormRegion_ARRAYSIZE
LRNParameter_Engine_Engine_MIN = cvar.LRNParameter_Engine_Engine_MIN
LRNParameter_Engine_Engine_MAX = cvar.LRNParameter_Engine_Engine_MAX
LRNParameter_Engine_Engine_ARRAYSIZE = cvar.LRNParameter_Engine_Engine_ARRAYSIZE
PoolingParameter_PoolMethod_PoolMethod_MIN = cvar.PoolingParameter_PoolMethod_PoolMethod_MIN
PoolingParameter_PoolMethod_PoolMethod_MAX = cvar.PoolingParameter_PoolMethod_PoolMethod_MAX
PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE = cvar.PoolingParameter_PoolMethod_PoolMethod_ARRAYSIZE
PoolingParameter_Engine_Engine_MIN = cvar.PoolingParameter_Engine_Engine_MIN
PoolingParameter_Engine_Engine_MAX = cvar.PoolingParameter_Engine_Engine_MAX
PoolingParameter_Engine_Engine_ARRAYSIZE = cvar.PoolingParameter_Engine_Engine_ARRAYSIZE
ReductionParameter_ReductionOp_ReductionOp_MIN = cvar.ReductionParameter_ReductionOp_ReductionOp_MIN
ReductionParameter_ReductionOp_ReductionOp_MAX = cvar.ReductionParameter_ReductionOp_ReductionOp_MAX
ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE = cvar.ReductionParameter_ReductionOp_ReductionOp_ARRAYSIZE
ReLUParameter_Engine_Engine_MIN = cvar.ReLUParameter_Engine_Engine_MIN
ReLUParameter_Engine_Engine_MAX = cvar.ReLUParameter_Engine_Engine_MAX
ReLUParameter_Engine_Engine_ARRAYSIZE = cvar.ReLUParameter_Engine_Engine_ARRAYSIZE
SigmoidParameter_Engine_Engine_MIN = cvar.SigmoidParameter_Engine_Engine_MIN
SigmoidParameter_Engine_Engine_MAX = cvar.SigmoidParameter_Engine_Engine_MAX
SigmoidParameter_Engine_Engine_ARRAYSIZE = cvar.SigmoidParameter_Engine_Engine_ARRAYSIZE
SoftmaxParameter_Engine_Engine_MIN = cvar.SoftmaxParameter_Engine_Engine_MIN
SoftmaxParameter_Engine_Engine_MAX = cvar.SoftmaxParameter_Engine_Engine_MAX
SoftmaxParameter_Engine_Engine_ARRAYSIZE = cvar.SoftmaxParameter_Engine_Engine_ARRAYSIZE
TanHParameter_Engine_Engine_MIN = cvar.TanHParameter_Engine_Engine_MIN
TanHParameter_Engine_Engine_MAX = cvar.TanHParameter_Engine_Engine_MAX
TanHParameter_Engine_Engine_ARRAYSIZE = cvar.TanHParameter_Engine_Engine_ARRAYSIZE
SPPParameter_PoolMethod_PoolMethod_MIN = cvar.SPPParameter_PoolMethod_PoolMethod_MIN
SPPParameter_PoolMethod_PoolMethod_MAX = cvar.SPPParameter_PoolMethod_PoolMethod_MAX
SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE = cvar.SPPParameter_PoolMethod_PoolMethod_ARRAYSIZE
SPPParameter_Engine_Engine_MIN = cvar.SPPParameter_Engine_Engine_MIN
SPPParameter_Engine_Engine_MAX = cvar.SPPParameter_Engine_Engine_MAX
SPPParameter_Engine_Engine_ARRAYSIZE = cvar.SPPParameter_Engine_Engine_ARRAYSIZE
V1LayerParameter_LayerType_LayerType_MIN = cvar.V1LayerParameter_LayerType_LayerType_MIN
V1LayerParameter_LayerType_LayerType_MAX = cvar.V1LayerParameter_LayerType_LayerType_MAX
V1LayerParameter_LayerType_LayerType_ARRAYSIZE = cvar.V1LayerParameter_LayerType_LayerType_ARRAYSIZE
V1LayerParameter_DimCheckMode_DimCheckMode_MIN = cvar.V1LayerParameter_DimCheckMode_DimCheckMode_MIN
V1LayerParameter_DimCheckMode_DimCheckMode_MAX = cvar.V1LayerParameter_DimCheckMode_DimCheckMode_MAX
V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE = cvar.V1LayerParameter_DimCheckMode_DimCheckMode_ARRAYSIZE
V0LayerParameter_PoolMethod_PoolMethod_MIN = cvar.V0LayerParameter_PoolMethod_PoolMethod_MIN
V0LayerParameter_PoolMethod_PoolMethod_MAX = cvar.V0LayerParameter_PoolMethod_PoolMethod_MAX
V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE = cvar.V0LayerParameter_PoolMethod_PoolMethod_ARRAYSIZE
Phase_MIN = cvar.Phase_MIN
Phase_MAX = cvar.Phase_MAX
Phase_ARRAYSIZE = cvar.Phase_ARRAYSIZE

def BlobShape_descriptor():
    return _gpudm.BlobShape_descriptor()
BlobShape_descriptor = _gpudm.BlobShape_descriptor

def BlobShape_default_instance():
    return _gpudm.BlobShape_default_instance()
BlobShape_default_instance = _gpudm.BlobShape_default_instance

class BlobProto(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobProto, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BlobProto, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_BlobProto
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_BlobProto(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.BlobProto_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.BlobProto_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.BlobProto_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.BlobProto_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.BlobProto_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.BlobProto_default_instance)

    def Swap(self, other):
        return _gpudm.BlobProto_Swap(self, other)

    def New(self):
        return _gpudm.BlobProto_New(self)

    def CopyFrom(self, *args):
        return _gpudm.BlobProto_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.BlobProto_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.BlobProto_Clear(self)

    def IsInitialized(self):
        return _gpudm.BlobProto_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.BlobProto_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.BlobProto_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.BlobProto_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.BlobProto_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.BlobProto_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.BlobProto_GetMetadata(self)

    def has_shape(self):
        return _gpudm.BlobProto_has_shape(self)

    def clear_shape(self):
        return _gpudm.BlobProto_clear_shape(self)
    kShapeFieldNumber = _gpudm.BlobProto_kShapeFieldNumber

    def shape(self):
        return _gpudm.BlobProto_shape(self)

    def mutable_shape(self):
        return _gpudm.BlobProto_mutable_shape(self)

    def release_shape(self):
        return _gpudm.BlobProto_release_shape(self)

    def set_allocated_shape(self, shape):
        return _gpudm.BlobProto_set_allocated_shape(self, shape)

    def data_size(self):
        return _gpudm.BlobProto_data_size(self)

    def clear_data(self):
        return _gpudm.BlobProto_clear_data(self)
    kDataFieldNumber = _gpudm.BlobProto_kDataFieldNumber

    def set_data(self, index, value):
        return _gpudm.BlobProto_set_data(self, index, value)

    def add_data(self, value):
        return _gpudm.BlobProto_add_data(self, value)

    def data(self, *args):
        return _gpudm.BlobProto_data(self, *args)

    def mutable_data(self):
        return _gpudm.BlobProto_mutable_data(self)

    def diff_size(self):
        return _gpudm.BlobProto_diff_size(self)

    def clear_diff(self):
        return _gpudm.BlobProto_clear_diff(self)
    kDiffFieldNumber = _gpudm.BlobProto_kDiffFieldNumber

    def set_diff(self, index, value):
        return _gpudm.BlobProto_set_diff(self, index, value)

    def add_diff(self, value):
        return _gpudm.BlobProto_add_diff(self, value)

    def diff(self, *args):
        return _gpudm.BlobProto_diff(self, *args)

    def mutable_diff(self):
        return _gpudm.BlobProto_mutable_diff(self)

    def double_data_size(self):
        return _gpudm.BlobProto_double_data_size(self)

    def clear_double_data(self):
        return _gpudm.BlobProto_clear_double_data(self)
    kDoubleDataFieldNumber = _gpudm.BlobProto_kDoubleDataFieldNumber

    def set_double_data(self, index, value):
        return _gpudm.BlobProto_set_double_data(self, index, value)

    def add_double_data(self, value):
        return _gpudm.BlobProto_add_double_data(self, value)

    def double_data(self, *args):
        return _gpudm.BlobProto_double_data(self, *args)

    def mutable_double_data(self):
        return _gpudm.BlobProto_mutable_double_data(self)

    def double_diff_size(self):
        return _gpudm.BlobProto_double_diff_size(self)

    def clear_double_diff(self):
        return _gpudm.BlobProto_clear_double_diff(self)
    kDoubleDiffFieldNumber = _gpudm.BlobProto_kDoubleDiffFieldNumber

    def set_double_diff(self, index, value):
        return _gpudm.BlobProto_set_double_diff(self, index, value)

    def add_double_diff(self, value):
        return _gpudm.BlobProto_add_double_diff(self, value)

    def double_diff(self, *args):
        return _gpudm.BlobProto_double_diff(self, *args)

    def mutable_double_diff(self):
        return _gpudm.BlobProto_mutable_double_diff(self)

    def has_num(self):
        return _gpudm.BlobProto_has_num(self)

    def clear_num(self):
        return _gpudm.BlobProto_clear_num(self)
    kNumFieldNumber = _gpudm.BlobProto_kNumFieldNumber

    def num(self):
        return _gpudm.BlobProto_num(self)

    def set_num(self, value):
        return _gpudm.BlobProto_set_num(self, value)

    def has_channels(self):
        return _gpudm.BlobProto_has_channels(self)

    def clear_channels(self):
        return _gpudm.BlobProto_clear_channels(self)
    kChannelsFieldNumber = _gpudm.BlobProto_kChannelsFieldNumber

    def channels(self):
        return _gpudm.BlobProto_channels(self)

    def set_channels(self, value):
        return _gpudm.BlobProto_set_channels(self, value)

    def has_height(self):
        return _gpudm.BlobProto_has_height(self)

    def clear_height(self):
        return _gpudm.BlobProto_clear_height(self)
    kHeightFieldNumber = _gpudm.BlobProto_kHeightFieldNumber

    def height(self):
        return _gpudm.BlobProto_height(self)

    def set_height(self, value):
        return _gpudm.BlobProto_set_height(self, value)

    def has_width(self):
        return _gpudm.BlobProto_has_width(self)

    def clear_width(self):
        return _gpudm.BlobProto_clear_width(self)
    kWidthFieldNumber = _gpudm.BlobProto_kWidthFieldNumber

    def width(self):
        return _gpudm.BlobProto_width(self)

    def set_width(self, value):
        return _gpudm.BlobProto_set_width(self, value)
BlobProto_swigregister = _gpudm.BlobProto_swigregister
BlobProto_swigregister(BlobProto)

def BlobProto_descriptor():
    return _gpudm.BlobProto_descriptor()
BlobProto_descriptor = _gpudm.BlobProto_descriptor

def BlobProto_default_instance():
    return _gpudm.BlobProto_default_instance()
BlobProto_default_instance = _gpudm.BlobProto_default_instance

class BlobProtoVector(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobProtoVector, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BlobProtoVector, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_BlobProtoVector
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_BlobProtoVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.BlobProtoVector_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.BlobProtoVector_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.BlobProtoVector_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.BlobProtoVector_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.BlobProtoVector_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.BlobProtoVector_default_instance)

    def Swap(self, other):
        return _gpudm.BlobProtoVector_Swap(self, other)

    def New(self):
        return _gpudm.BlobProtoVector_New(self)

    def CopyFrom(self, *args):
        return _gpudm.BlobProtoVector_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.BlobProtoVector_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.BlobProtoVector_Clear(self)

    def IsInitialized(self):
        return _gpudm.BlobProtoVector_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.BlobProtoVector_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.BlobProtoVector_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.BlobProtoVector_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.BlobProtoVector_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.BlobProtoVector_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.BlobProtoVector_GetMetadata(self)

    def blobs_size(self):
        return _gpudm.BlobProtoVector_blobs_size(self)

    def clear_blobs(self):
        return _gpudm.BlobProtoVector_clear_blobs(self)
    kBlobsFieldNumber = _gpudm.BlobProtoVector_kBlobsFieldNumber

    def add_blobs(self):
        return _gpudm.BlobProtoVector_add_blobs(self)

    def blobs(self, *args):
        return _gpudm.BlobProtoVector_blobs(self, *args)

    def mutable_blobs(self, *args):
        return _gpudm.BlobProtoVector_mutable_blobs(self, *args)
BlobProtoVector_swigregister = _gpudm.BlobProtoVector_swigregister
BlobProtoVector_swigregister(BlobProtoVector)

def BlobProtoVector_descriptor():
    return _gpudm.BlobProtoVector_descriptor()
BlobProtoVector_descriptor = _gpudm.BlobProtoVector_descriptor

def BlobProtoVector_default_instance():
    return _gpudm.BlobProtoVector_default_instance()
BlobProtoVector_default_instance = _gpudm.BlobProtoVector_default_instance

class Datum(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Datum, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Datum, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_Datum
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_Datum(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.Datum_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.Datum_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.Datum_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.Datum_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.Datum_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.Datum_default_instance)

    def Swap(self, other):
        return _gpudm.Datum_Swap(self, other)

    def New(self):
        return _gpudm.Datum_New(self)

    def CopyFrom(self, *args):
        return _gpudm.Datum_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.Datum_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.Datum_Clear(self)

    def IsInitialized(self):
        return _gpudm.Datum_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.Datum_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.Datum_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.Datum_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.Datum_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.Datum_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.Datum_GetMetadata(self)

    def has_channels(self):
        return _gpudm.Datum_has_channels(self)

    def clear_channels(self):
        return _gpudm.Datum_clear_channels(self)
    kChannelsFieldNumber = _gpudm.Datum_kChannelsFieldNumber

    def channels(self):
        return _gpudm.Datum_channels(self)

    def set_channels(self, value):
        return _gpudm.Datum_set_channels(self, value)

    def has_height(self):
        return _gpudm.Datum_has_height(self)

    def clear_height(self):
        return _gpudm.Datum_clear_height(self)
    kHeightFieldNumber = _gpudm.Datum_kHeightFieldNumber

    def height(self):
        return _gpudm.Datum_height(self)

    def set_height(self, value):
        return _gpudm.Datum_set_height(self, value)

    def has_width(self):
        return _gpudm.Datum_has_width(self)

    def clear_width(self):
        return _gpudm.Datum_clear_width(self)
    kWidthFieldNumber = _gpudm.Datum_kWidthFieldNumber

    def width(self):
        return _gpudm.Datum_width(self)

    def set_width(self, value):
        return _gpudm.Datum_set_width(self, value)

    def has_data(self):
        return _gpudm.Datum_has_data(self)

    def clear_data(self):
        return _gpudm.Datum_clear_data(self)
    kDataFieldNumber = _gpudm.Datum_kDataFieldNumber

    def data(self):
        return _gpudm.Datum_data(self)

    def set_data(self, *args):
        return _gpudm.Datum_set_data(self, *args)

    def mutable_data(self):
        return _gpudm.Datum_mutable_data(self)

    def release_data(self):
        return _gpudm.Datum_release_data(self)

    def set_allocated_data(self, data):
        return _gpudm.Datum_set_allocated_data(self, data)

    def has_label(self):
        return _gpudm.Datum_has_label(self)

    def clear_label(self):
        return _gpudm.Datum_clear_label(self)
    kLabelFieldNumber = _gpudm.Datum_kLabelFieldNumber

    def label(self):
        return _gpudm.Datum_label(self)

    def set_label(self, value):
        return _gpudm.Datum_set_label(self, value)

    def float_data_size(self):
        return _gpudm.Datum_float_data_size(self)

    def clear_float_data(self):
        return _gpudm.Datum_clear_float_data(self)
    kFloatDataFieldNumber = _gpudm.Datum_kFloatDataFieldNumber

    def set_float_data(self, index, value):
        return _gpudm.Datum_set_float_data(self, index, value)

    def add_float_data(self, value):
        return _gpudm.Datum_add_float_data(self, value)

    def float_data(self, *args):
        return _gpudm.Datum_float_data(self, *args)

    def mutable_float_data(self):
        return _gpudm.Datum_mutable_float_data(self)

    def has_encoded(self):
        return _gpudm.Datum_has_encoded(self)

    def clear_encoded(self):
        return _gpudm.Datum_clear_encoded(self)
    kEncodedFieldNumber = _gpudm.Datum_kEncodedFieldNumber

    def encoded(self):
        return _gpudm.Datum_encoded(self)

    def set_encoded(self, value):
        return _gpudm.Datum_set_encoded(self, value)
Datum_swigregister = _gpudm.Datum_swigregister
Datum_swigregister(Datum)

def Datum_descriptor():
    return _gpudm.Datum_descriptor()
Datum_descriptor = _gpudm.Datum_descriptor

def Datum_default_instance():
    return _gpudm.Datum_default_instance()
Datum_default_instance = _gpudm.Datum_default_instance

class FillerParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FillerParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FillerParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_FillerParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_FillerParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.FillerParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.FillerParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.FillerParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.FillerParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.FillerParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.FillerParameter_default_instance)

    def Swap(self, other):
        return _gpudm.FillerParameter_Swap(self, other)

    def New(self):
        return _gpudm.FillerParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.FillerParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.FillerParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.FillerParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.FillerParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.FillerParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.FillerParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.FillerParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.FillerParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.FillerParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.FillerParameter_GetMetadata(self)
    FAN_IN = _gpudm.FillerParameter_FAN_IN
    FAN_OUT = _gpudm.FillerParameter_FAN_OUT
    AVERAGE = _gpudm.FillerParameter_AVERAGE
    __swig_getmethods__["VarianceNorm_IsValid"] = lambda x: _gpudm.FillerParameter_VarianceNorm_IsValid
    if _newclass:
        VarianceNorm_IsValid = staticmethod(_gpudm.FillerParameter_VarianceNorm_IsValid)
    VarianceNorm_MIN = _gpudm.FillerParameter_VarianceNorm_MIN
    VarianceNorm_MAX = _gpudm.FillerParameter_VarianceNorm_MAX
    VarianceNorm_ARRAYSIZE = _gpudm.FillerParameter_VarianceNorm_ARRAYSIZE
    __swig_getmethods__["VarianceNorm_descriptor"] = lambda x: _gpudm.FillerParameter_VarianceNorm_descriptor
    if _newclass:
        VarianceNorm_descriptor = staticmethod(_gpudm.FillerParameter_VarianceNorm_descriptor)
    __swig_getmethods__["VarianceNorm_Name"] = lambda x: _gpudm.FillerParameter_VarianceNorm_Name
    if _newclass:
        VarianceNorm_Name = staticmethod(_gpudm.FillerParameter_VarianceNorm_Name)
    __swig_getmethods__["VarianceNorm_Parse"] = lambda x: _gpudm.FillerParameter_VarianceNorm_Parse
    if _newclass:
        VarianceNorm_Parse = staticmethod(_gpudm.FillerParameter_VarianceNorm_Parse)

    def has_type(self):
        return _gpudm.FillerParameter_has_type(self)

    def clear_type(self):
        return _gpudm.FillerParameter_clear_type(self)
    kTypeFieldNumber = _gpudm.FillerParameter_kTypeFieldNumber

    def type(self):
        return _gpudm.FillerParameter_type(self)

    def set_type(self, *args):
        return _gpudm.FillerParameter_set_type(self, *args)

    def mutable_type(self):
        return _gpudm.FillerParameter_mutable_type(self)

    def release_type(self):
        return _gpudm.FillerParameter_release_type(self)

    def set_allocated_type(self, type):
        return _gpudm.FillerParameter_set_allocated_type(self, type)

    def has_value(self):
        return _gpudm.FillerParameter_has_value(self)

    def clear_value(self):
        return _gpudm.FillerParameter_clear_value(self)
    kValueFieldNumber = _gpudm.FillerParameter_kValueFieldNumber

    def value(self):
        return _gpudm.FillerParameter_value(self)

    def set_value(self, value):
        return _gpudm.FillerParameter_set_value(self, value)

    def has_min(self):
        return _gpudm.FillerParameter_has_min(self)

    def clear_min(self):
        return _gpudm.FillerParameter_clear_min(self)
    kMinFieldNumber = _gpudm.FillerParameter_kMinFieldNumber

    def min(self):
        return _gpudm.FillerParameter_min(self)

    def set_min(self, value):
        return _gpudm.FillerParameter_set_min(self, value)

    def has_max(self):
        return _gpudm.FillerParameter_has_max(self)

    def clear_max(self):
        return _gpudm.FillerParameter_clear_max(self)
    kMaxFieldNumber = _gpudm.FillerParameter_kMaxFieldNumber

    def max(self):
        return _gpudm.FillerParameter_max(self)

    def set_max(self, value):
        return _gpudm.FillerParameter_set_max(self, value)

    def has_mean(self):
        return _gpudm.FillerParameter_has_mean(self)

    def clear_mean(self):
        return _gpudm.FillerParameter_clear_mean(self)
    kMeanFieldNumber = _gpudm.FillerParameter_kMeanFieldNumber

    def mean(self):
        return _gpudm.FillerParameter_mean(self)

    def set_mean(self, value):
        return _gpudm.FillerParameter_set_mean(self, value)

    def has_std(self):
        return _gpudm.FillerParameter_has_std(self)

    def clear_std(self):
        return _gpudm.FillerParameter_clear_std(self)
    kStdFieldNumber = _gpudm.FillerParameter_kStdFieldNumber

    def std(self):
        return _gpudm.FillerParameter_std(self)

    def set_std(self, value):
        return _gpudm.FillerParameter_set_std(self, value)

    def has_sparse(self):
        return _gpudm.FillerParameter_has_sparse(self)

    def clear_sparse(self):
        return _gpudm.FillerParameter_clear_sparse(self)
    kSparseFieldNumber = _gpudm.FillerParameter_kSparseFieldNumber

    def sparse(self):
        return _gpudm.FillerParameter_sparse(self)

    def set_sparse(self, value):
        return _gpudm.FillerParameter_set_sparse(self, value)

    def has_variance_norm(self):
        return _gpudm.FillerParameter_has_variance_norm(self)

    def clear_variance_norm(self):
        return _gpudm.FillerParameter_clear_variance_norm(self)
    kVarianceNormFieldNumber = _gpudm.FillerParameter_kVarianceNormFieldNumber

    def variance_norm(self):
        return _gpudm.FillerParameter_variance_norm(self)

    def set_variance_norm(self, value):
        return _gpudm.FillerParameter_set_variance_norm(self, value)
FillerParameter_swigregister = _gpudm.FillerParameter_swigregister
FillerParameter_swigregister(FillerParameter)

def FillerParameter_descriptor():
    return _gpudm.FillerParameter_descriptor()
FillerParameter_descriptor = _gpudm.FillerParameter_descriptor

def FillerParameter_default_instance():
    return _gpudm.FillerParameter_default_instance()
FillerParameter_default_instance = _gpudm.FillerParameter_default_instance

class NetParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, NetParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_NetParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_NetParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.NetParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.NetParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.NetParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.NetParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.NetParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.NetParameter_default_instance)

    def Swap(self, other):
        return _gpudm.NetParameter_Swap(self, other)

    def New(self):
        return _gpudm.NetParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.NetParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.NetParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.NetParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.NetParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.NetParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.NetParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.NetParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.NetParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.NetParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.NetParameter_GetMetadata(self)

    def has_name(self):
        return _gpudm.NetParameter_has_name(self)

    def clear_name(self):
        return _gpudm.NetParameter_clear_name(self)
    kNameFieldNumber = _gpudm.NetParameter_kNameFieldNumber

    def name(self):
        return _gpudm.NetParameter_name(self)

    def set_name(self, *args):
        return _gpudm.NetParameter_set_name(self, *args)

    def mutable_name(self):
        return _gpudm.NetParameter_mutable_name(self)

    def release_name(self):
        return _gpudm.NetParameter_release_name(self)

    def set_allocated_name(self, name):
        return _gpudm.NetParameter_set_allocated_name(self, name)

    def input_size(self):
        return _gpudm.NetParameter_input_size(self)

    def clear_input(self):
        return _gpudm.NetParameter_clear_input(self)
    kInputFieldNumber = _gpudm.NetParameter_kInputFieldNumber

    def set_input(self, *args):
        return _gpudm.NetParameter_set_input(self, *args)

    def add_input(self, *args):
        return _gpudm.NetParameter_add_input(self, *args)

    def input(self, *args):
        return _gpudm.NetParameter_input(self, *args)

    def mutable_input(self, *args):
        return _gpudm.NetParameter_mutable_input(self, *args)

    def input_shape_size(self):
        return _gpudm.NetParameter_input_shape_size(self)

    def clear_input_shape(self):
        return _gpudm.NetParameter_clear_input_shape(self)
    kInputShapeFieldNumber = _gpudm.NetParameter_kInputShapeFieldNumber

    def add_input_shape(self):
        return _gpudm.NetParameter_add_input_shape(self)

    def input_shape(self, *args):
        return _gpudm.NetParameter_input_shape(self, *args)

    def mutable_input_shape(self, *args):
        return _gpudm.NetParameter_mutable_input_shape(self, *args)

    def input_dim_size(self):
        return _gpudm.NetParameter_input_dim_size(self)

    def clear_input_dim(self):
        return _gpudm.NetParameter_clear_input_dim(self)
    kInputDimFieldNumber = _gpudm.NetParameter_kInputDimFieldNumber

    def set_input_dim(self, index, value):
        return _gpudm.NetParameter_set_input_dim(self, index, value)

    def add_input_dim(self, value):
        return _gpudm.NetParameter_add_input_dim(self, value)

    def input_dim(self, *args):
        return _gpudm.NetParameter_input_dim(self, *args)

    def mutable_input_dim(self):
        return _gpudm.NetParameter_mutable_input_dim(self)

    def has_force_backward(self):
        return _gpudm.NetParameter_has_force_backward(self)

    def clear_force_backward(self):
        return _gpudm.NetParameter_clear_force_backward(self)
    kForceBackwardFieldNumber = _gpudm.NetParameter_kForceBackwardFieldNumber

    def force_backward(self):
        return _gpudm.NetParameter_force_backward(self)

    def set_force_backward(self, value):
        return _gpudm.NetParameter_set_force_backward(self, value)

    def has_state(self):
        return _gpudm.NetParameter_has_state(self)

    def clear_state(self):
        return _gpudm.NetParameter_clear_state(self)
    kStateFieldNumber = _gpudm.NetParameter_kStateFieldNumber

    def state(self):
        return _gpudm.NetParameter_state(self)

    def mutable_state(self):
        return _gpudm.NetParameter_mutable_state(self)

    def release_state(self):
        return _gpudm.NetParameter_release_state(self)

    def set_allocated_state(self, state):
        return _gpudm.NetParameter_set_allocated_state(self, state)

    def has_debug_info(self):
        return _gpudm.NetParameter_has_debug_info(self)

    def clear_debug_info(self):
        return _gpudm.NetParameter_clear_debug_info(self)
    kDebugInfoFieldNumber = _gpudm.NetParameter_kDebugInfoFieldNumber

    def debug_info(self):
        return _gpudm.NetParameter_debug_info(self)

    def set_debug_info(self, value):
        return _gpudm.NetParameter_set_debug_info(self, value)

    def layer_size(self):
        return _gpudm.NetParameter_layer_size(self)

    def clear_layer(self):
        return _gpudm.NetParameter_clear_layer(self)
    kLayerFieldNumber = _gpudm.NetParameter_kLayerFieldNumber

    def add_layer(self):
        return _gpudm.NetParameter_add_layer(self)

    def layer(self, *args):
        return _gpudm.NetParameter_layer(self, *args)

    def mutable_layer(self, *args):
        return _gpudm.NetParameter_mutable_layer(self, *args)

    def layers_size(self):
        return _gpudm.NetParameter_layers_size(self)

    def clear_layers(self):
        return _gpudm.NetParameter_clear_layers(self)
    kLayersFieldNumber = _gpudm.NetParameter_kLayersFieldNumber

    def add_layers(self):
        return _gpudm.NetParameter_add_layers(self)

    def layers(self, *args):
        return _gpudm.NetParameter_layers(self, *args)

    def mutable_layers(self, *args):
        return _gpudm.NetParameter_mutable_layers(self, *args)
NetParameter_swigregister = _gpudm.NetParameter_swigregister
NetParameter_swigregister(NetParameter)

def NetParameter_descriptor():
    return _gpudm.NetParameter_descriptor()
NetParameter_descriptor = _gpudm.NetParameter_descriptor

def NetParameter_default_instance():
    return _gpudm.NetParameter_default_instance()
NetParameter_default_instance = _gpudm.NetParameter_default_instance

class SolverParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SolverParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SolverParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SolverParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SolverParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SolverParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SolverParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SolverParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SolverParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SolverParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SolverParameter_default_instance)

    def Swap(self, other):
        return _gpudm.SolverParameter_Swap(self, other)

    def New(self):
        return _gpudm.SolverParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SolverParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SolverParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SolverParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.SolverParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SolverParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SolverParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SolverParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SolverParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SolverParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SolverParameter_GetMetadata(self)
    HDF5 = _gpudm.SolverParameter_HDF5
    BINARYPROTO = _gpudm.SolverParameter_BINARYPROTO
    __swig_getmethods__["SnapshotFormat_IsValid"] = lambda x: _gpudm.SolverParameter_SnapshotFormat_IsValid
    if _newclass:
        SnapshotFormat_IsValid = staticmethod(_gpudm.SolverParameter_SnapshotFormat_IsValid)
    SnapshotFormat_MIN = _gpudm.SolverParameter_SnapshotFormat_MIN
    SnapshotFormat_MAX = _gpudm.SolverParameter_SnapshotFormat_MAX
    SnapshotFormat_ARRAYSIZE = _gpudm.SolverParameter_SnapshotFormat_ARRAYSIZE
    __swig_getmethods__["SnapshotFormat_descriptor"] = lambda x: _gpudm.SolverParameter_SnapshotFormat_descriptor
    if _newclass:
        SnapshotFormat_descriptor = staticmethod(_gpudm.SolverParameter_SnapshotFormat_descriptor)
    __swig_getmethods__["SnapshotFormat_Name"] = lambda x: _gpudm.SolverParameter_SnapshotFormat_Name
    if _newclass:
        SnapshotFormat_Name = staticmethod(_gpudm.SolverParameter_SnapshotFormat_Name)
    __swig_getmethods__["SnapshotFormat_Parse"] = lambda x: _gpudm.SolverParameter_SnapshotFormat_Parse
    if _newclass:
        SnapshotFormat_Parse = staticmethod(_gpudm.SolverParameter_SnapshotFormat_Parse)
    CPU = _gpudm.SolverParameter_CPU
    GPU = _gpudm.SolverParameter_GPU
    __swig_getmethods__["SolverMode_IsValid"] = lambda x: _gpudm.SolverParameter_SolverMode_IsValid
    if _newclass:
        SolverMode_IsValid = staticmethod(_gpudm.SolverParameter_SolverMode_IsValid)
    SolverMode_MIN = _gpudm.SolverParameter_SolverMode_MIN
    SolverMode_MAX = _gpudm.SolverParameter_SolverMode_MAX
    SolverMode_ARRAYSIZE = _gpudm.SolverParameter_SolverMode_ARRAYSIZE
    __swig_getmethods__["SolverMode_descriptor"] = lambda x: _gpudm.SolverParameter_SolverMode_descriptor
    if _newclass:
        SolverMode_descriptor = staticmethod(_gpudm.SolverParameter_SolverMode_descriptor)
    __swig_getmethods__["SolverMode_Name"] = lambda x: _gpudm.SolverParameter_SolverMode_Name
    if _newclass:
        SolverMode_Name = staticmethod(_gpudm.SolverParameter_SolverMode_Name)
    __swig_getmethods__["SolverMode_Parse"] = lambda x: _gpudm.SolverParameter_SolverMode_Parse
    if _newclass:
        SolverMode_Parse = staticmethod(_gpudm.SolverParameter_SolverMode_Parse)
    SGD = _gpudm.SolverParameter_SGD
    NESTEROV = _gpudm.SolverParameter_NESTEROV
    ADAGRAD = _gpudm.SolverParameter_ADAGRAD
    RMSPROP = _gpudm.SolverParameter_RMSPROP
    ADADELTA = _gpudm.SolverParameter_ADADELTA
    ADAM = _gpudm.SolverParameter_ADAM
    __swig_getmethods__["SolverType_IsValid"] = lambda x: _gpudm.SolverParameter_SolverType_IsValid
    if _newclass:
        SolverType_IsValid = staticmethod(_gpudm.SolverParameter_SolverType_IsValid)
    SolverType_MIN = _gpudm.SolverParameter_SolverType_MIN
    SolverType_MAX = _gpudm.SolverParameter_SolverType_MAX
    SolverType_ARRAYSIZE = _gpudm.SolverParameter_SolverType_ARRAYSIZE
    __swig_getmethods__["SolverType_descriptor"] = lambda x: _gpudm.SolverParameter_SolverType_descriptor
    if _newclass:
        SolverType_descriptor = staticmethod(_gpudm.SolverParameter_SolverType_descriptor)
    __swig_getmethods__["SolverType_Name"] = lambda x: _gpudm.SolverParameter_SolverType_Name
    if _newclass:
        SolverType_Name = staticmethod(_gpudm.SolverParameter_SolverType_Name)
    __swig_getmethods__["SolverType_Parse"] = lambda x: _gpudm.SolverParameter_SolverType_Parse
    if _newclass:
        SolverType_Parse = staticmethod(_gpudm.SolverParameter_SolverType_Parse)

    def has_net(self):
        return _gpudm.SolverParameter_has_net(self)

    def clear_net(self):
        return _gpudm.SolverParameter_clear_net(self)
    kNetFieldNumber = _gpudm.SolverParameter_kNetFieldNumber

    def net(self):
        return _gpudm.SolverParameter_net(self)

    def set_net(self, *args):
        return _gpudm.SolverParameter_set_net(self, *args)

    def mutable_net(self):
        return _gpudm.SolverParameter_mutable_net(self)

    def release_net(self):
        return _gpudm.SolverParameter_release_net(self)

    def set_allocated_net(self, net):
        return _gpudm.SolverParameter_set_allocated_net(self, net)

    def has_net_param(self):
        return _gpudm.SolverParameter_has_net_param(self)

    def clear_net_param(self):
        return _gpudm.SolverParameter_clear_net_param(self)
    kNetParamFieldNumber = _gpudm.SolverParameter_kNetParamFieldNumber

    def net_param(self):
        return _gpudm.SolverParameter_net_param(self)

    def mutable_net_param(self):
        return _gpudm.SolverParameter_mutable_net_param(self)

    def release_net_param(self):
        return _gpudm.SolverParameter_release_net_param(self)

    def set_allocated_net_param(self, net_param):
        return _gpudm.SolverParameter_set_allocated_net_param(self, net_param)

    def has_train_net(self):
        return _gpudm.SolverParameter_has_train_net(self)

    def clear_train_net(self):
        return _gpudm.SolverParameter_clear_train_net(self)
    kTrainNetFieldNumber = _gpudm.SolverParameter_kTrainNetFieldNumber

    def train_net(self):
        return _gpudm.SolverParameter_train_net(self)

    def set_train_net(self, *args):
        return _gpudm.SolverParameter_set_train_net(self, *args)

    def mutable_train_net(self):
        return _gpudm.SolverParameter_mutable_train_net(self)

    def release_train_net(self):
        return _gpudm.SolverParameter_release_train_net(self)

    def set_allocated_train_net(self, train_net):
        return _gpudm.SolverParameter_set_allocated_train_net(self, train_net)

    def test_net_size(self):
        return _gpudm.SolverParameter_test_net_size(self)

    def clear_test_net(self):
        return _gpudm.SolverParameter_clear_test_net(self)
    kTestNetFieldNumber = _gpudm.SolverParameter_kTestNetFieldNumber

    def set_test_net(self, *args):
        return _gpudm.SolverParameter_set_test_net(self, *args)

    def add_test_net(self, *args):
        return _gpudm.SolverParameter_add_test_net(self, *args)

    def test_net(self, *args):
        return _gpudm.SolverParameter_test_net(self, *args)

    def mutable_test_net(self, *args):
        return _gpudm.SolverParameter_mutable_test_net(self, *args)

    def has_train_net_param(self):
        return _gpudm.SolverParameter_has_train_net_param(self)

    def clear_train_net_param(self):
        return _gpudm.SolverParameter_clear_train_net_param(self)
    kTrainNetParamFieldNumber = _gpudm.SolverParameter_kTrainNetParamFieldNumber

    def train_net_param(self):
        return _gpudm.SolverParameter_train_net_param(self)

    def mutable_train_net_param(self):
        return _gpudm.SolverParameter_mutable_train_net_param(self)

    def release_train_net_param(self):
        return _gpudm.SolverParameter_release_train_net_param(self)

    def set_allocated_train_net_param(self, train_net_param):
        return _gpudm.SolverParameter_set_allocated_train_net_param(self, train_net_param)

    def test_net_param_size(self):
        return _gpudm.SolverParameter_test_net_param_size(self)

    def clear_test_net_param(self):
        return _gpudm.SolverParameter_clear_test_net_param(self)
    kTestNetParamFieldNumber = _gpudm.SolverParameter_kTestNetParamFieldNumber

    def add_test_net_param(self):
        return _gpudm.SolverParameter_add_test_net_param(self)

    def test_net_param(self, *args):
        return _gpudm.SolverParameter_test_net_param(self, *args)

    def mutable_test_net_param(self, *args):
        return _gpudm.SolverParameter_mutable_test_net_param(self, *args)

    def has_train_state(self):
        return _gpudm.SolverParameter_has_train_state(self)

    def clear_train_state(self):
        return _gpudm.SolverParameter_clear_train_state(self)
    kTrainStateFieldNumber = _gpudm.SolverParameter_kTrainStateFieldNumber

    def train_state(self):
        return _gpudm.SolverParameter_train_state(self)

    def mutable_train_state(self):
        return _gpudm.SolverParameter_mutable_train_state(self)

    def release_train_state(self):
        return _gpudm.SolverParameter_release_train_state(self)

    def set_allocated_train_state(self, train_state):
        return _gpudm.SolverParameter_set_allocated_train_state(self, train_state)

    def test_state_size(self):
        return _gpudm.SolverParameter_test_state_size(self)

    def clear_test_state(self):
        return _gpudm.SolverParameter_clear_test_state(self)
    kTestStateFieldNumber = _gpudm.SolverParameter_kTestStateFieldNumber

    def add_test_state(self):
        return _gpudm.SolverParameter_add_test_state(self)

    def test_state(self, *args):
        return _gpudm.SolverParameter_test_state(self, *args)

    def mutable_test_state(self, *args):
        return _gpudm.SolverParameter_mutable_test_state(self, *args)

    def test_iter_size(self):
        return _gpudm.SolverParameter_test_iter_size(self)

    def clear_test_iter(self):
        return _gpudm.SolverParameter_clear_test_iter(self)
    kTestIterFieldNumber = _gpudm.SolverParameter_kTestIterFieldNumber

    def set_test_iter(self, index, value):
        return _gpudm.SolverParameter_set_test_iter(self, index, value)

    def add_test_iter(self, value):
        return _gpudm.SolverParameter_add_test_iter(self, value)

    def test_iter(self, *args):
        return _gpudm.SolverParameter_test_iter(self, *args)

    def mutable_test_iter(self):
        return _gpudm.SolverParameter_mutable_test_iter(self)

    def has_test_interval(self):
        return _gpudm.SolverParameter_has_test_interval(self)

    def clear_test_interval(self):
        return _gpudm.SolverParameter_clear_test_interval(self)
    kTestIntervalFieldNumber = _gpudm.SolverParameter_kTestIntervalFieldNumber

    def test_interval(self):
        return _gpudm.SolverParameter_test_interval(self)

    def set_test_interval(self, value):
        return _gpudm.SolverParameter_set_test_interval(self, value)

    def has_test_compute_loss(self):
        return _gpudm.SolverParameter_has_test_compute_loss(self)

    def clear_test_compute_loss(self):
        return _gpudm.SolverParameter_clear_test_compute_loss(self)
    kTestComputeLossFieldNumber = _gpudm.SolverParameter_kTestComputeLossFieldNumber

    def test_compute_loss(self):
        return _gpudm.SolverParameter_test_compute_loss(self)

    def set_test_compute_loss(self, value):
        return _gpudm.SolverParameter_set_test_compute_loss(self, value)

    def has_test_initialization(self):
        return _gpudm.SolverParameter_has_test_initialization(self)

    def clear_test_initialization(self):
        return _gpudm.SolverParameter_clear_test_initialization(self)
    kTestInitializationFieldNumber = _gpudm.SolverParameter_kTestInitializationFieldNumber

    def test_initialization(self):
        return _gpudm.SolverParameter_test_initialization(self)

    def set_test_initialization(self, value):
        return _gpudm.SolverParameter_set_test_initialization(self, value)

    def has_base_lr(self):
        return _gpudm.SolverParameter_has_base_lr(self)

    def clear_base_lr(self):
        return _gpudm.SolverParameter_clear_base_lr(self)
    kBaseLrFieldNumber = _gpudm.SolverParameter_kBaseLrFieldNumber

    def base_lr(self):
        return _gpudm.SolverParameter_base_lr(self)

    def set_base_lr(self, value):
        return _gpudm.SolverParameter_set_base_lr(self, value)

    def has_display(self):
        return _gpudm.SolverParameter_has_display(self)

    def clear_display(self):
        return _gpudm.SolverParameter_clear_display(self)
    kDisplayFieldNumber = _gpudm.SolverParameter_kDisplayFieldNumber

    def display(self):
        return _gpudm.SolverParameter_display(self)

    def set_display(self, value):
        return _gpudm.SolverParameter_set_display(self, value)

    def has_average_loss(self):
        return _gpudm.SolverParameter_has_average_loss(self)

    def clear_average_loss(self):
        return _gpudm.SolverParameter_clear_average_loss(self)
    kAverageLossFieldNumber = _gpudm.SolverParameter_kAverageLossFieldNumber

    def average_loss(self):
        return _gpudm.SolverParameter_average_loss(self)

    def set_average_loss(self, value):
        return _gpudm.SolverParameter_set_average_loss(self, value)

    def has_max_iter(self):
        return _gpudm.SolverParameter_has_max_iter(self)

    def clear_max_iter(self):
        return _gpudm.SolverParameter_clear_max_iter(self)
    kMaxIterFieldNumber = _gpudm.SolverParameter_kMaxIterFieldNumber

    def max_iter(self):
        return _gpudm.SolverParameter_max_iter(self)

    def set_max_iter(self, value):
        return _gpudm.SolverParameter_set_max_iter(self, value)

    def has_iter_size(self):
        return _gpudm.SolverParameter_has_iter_size(self)

    def clear_iter_size(self):
        return _gpudm.SolverParameter_clear_iter_size(self)
    kIterSizeFieldNumber = _gpudm.SolverParameter_kIterSizeFieldNumber

    def iter_size(self):
        return _gpudm.SolverParameter_iter_size(self)

    def set_iter_size(self, value):
        return _gpudm.SolverParameter_set_iter_size(self, value)

    def has_lr_policy(self):
        return _gpudm.SolverParameter_has_lr_policy(self)

    def clear_lr_policy(self):
        return _gpudm.SolverParameter_clear_lr_policy(self)
    kLrPolicyFieldNumber = _gpudm.SolverParameter_kLrPolicyFieldNumber

    def lr_policy(self):
        return _gpudm.SolverParameter_lr_policy(self)

    def set_lr_policy(self, *args):
        return _gpudm.SolverParameter_set_lr_policy(self, *args)

    def mutable_lr_policy(self):
        return _gpudm.SolverParameter_mutable_lr_policy(self)

    def release_lr_policy(self):
        return _gpudm.SolverParameter_release_lr_policy(self)

    def set_allocated_lr_policy(self, lr_policy):
        return _gpudm.SolverParameter_set_allocated_lr_policy(self, lr_policy)

    def has_gamma(self):
        return _gpudm.SolverParameter_has_gamma(self)

    def clear_gamma(self):
        return _gpudm.SolverParameter_clear_gamma(self)
    kGammaFieldNumber = _gpudm.SolverParameter_kGammaFieldNumber

    def gamma(self):
        return _gpudm.SolverParameter_gamma(self)

    def set_gamma(self, value):
        return _gpudm.SolverParameter_set_gamma(self, value)

    def has_power(self):
        return _gpudm.SolverParameter_has_power(self)

    def clear_power(self):
        return _gpudm.SolverParameter_clear_power(self)
    kPowerFieldNumber = _gpudm.SolverParameter_kPowerFieldNumber

    def power(self):
        return _gpudm.SolverParameter_power(self)

    def set_power(self, value):
        return _gpudm.SolverParameter_set_power(self, value)

    def has_momentum(self):
        return _gpudm.SolverParameter_has_momentum(self)

    def clear_momentum(self):
        return _gpudm.SolverParameter_clear_momentum(self)
    kMomentumFieldNumber = _gpudm.SolverParameter_kMomentumFieldNumber

    def momentum(self):
        return _gpudm.SolverParameter_momentum(self)

    def set_momentum(self, value):
        return _gpudm.SolverParameter_set_momentum(self, value)

    def has_weight_decay(self):
        return _gpudm.SolverParameter_has_weight_decay(self)

    def clear_weight_decay(self):
        return _gpudm.SolverParameter_clear_weight_decay(self)
    kWeightDecayFieldNumber = _gpudm.SolverParameter_kWeightDecayFieldNumber

    def weight_decay(self):
        return _gpudm.SolverParameter_weight_decay(self)

    def set_weight_decay(self, value):
        return _gpudm.SolverParameter_set_weight_decay(self, value)

    def has_regularization_type(self):
        return _gpudm.SolverParameter_has_regularization_type(self)

    def clear_regularization_type(self):
        return _gpudm.SolverParameter_clear_regularization_type(self)
    kRegularizationTypeFieldNumber = _gpudm.SolverParameter_kRegularizationTypeFieldNumber

    def regularization_type(self):
        return _gpudm.SolverParameter_regularization_type(self)

    def set_regularization_type(self, *args):
        return _gpudm.SolverParameter_set_regularization_type(self, *args)

    def mutable_regularization_type(self):
        return _gpudm.SolverParameter_mutable_regularization_type(self)

    def release_regularization_type(self):
        return _gpudm.SolverParameter_release_regularization_type(self)

    def set_allocated_regularization_type(self, regularization_type):
        return _gpudm.SolverParameter_set_allocated_regularization_type(self, regularization_type)

    def has_stepsize(self):
        return _gpudm.SolverParameter_has_stepsize(self)

    def clear_stepsize(self):
        return _gpudm.SolverParameter_clear_stepsize(self)
    kStepsizeFieldNumber = _gpudm.SolverParameter_kStepsizeFieldNumber

    def stepsize(self):
        return _gpudm.SolverParameter_stepsize(self)

    def set_stepsize(self, value):
        return _gpudm.SolverParameter_set_stepsize(self, value)

    def stepvalue_size(self):
        return _gpudm.SolverParameter_stepvalue_size(self)

    def clear_stepvalue(self):
        return _gpudm.SolverParameter_clear_stepvalue(self)
    kStepvalueFieldNumber = _gpudm.SolverParameter_kStepvalueFieldNumber

    def set_stepvalue(self, index, value):
        return _gpudm.SolverParameter_set_stepvalue(self, index, value)

    def add_stepvalue(self, value):
        return _gpudm.SolverParameter_add_stepvalue(self, value)

    def stepvalue(self, *args):
        return _gpudm.SolverParameter_stepvalue(self, *args)

    def mutable_stepvalue(self):
        return _gpudm.SolverParameter_mutable_stepvalue(self)

    def has_clip_gradients(self):
        return _gpudm.SolverParameter_has_clip_gradients(self)

    def clear_clip_gradients(self):
        return _gpudm.SolverParameter_clear_clip_gradients(self)
    kClipGradientsFieldNumber = _gpudm.SolverParameter_kClipGradientsFieldNumber

    def clip_gradients(self):
        return _gpudm.SolverParameter_clip_gradients(self)

    def set_clip_gradients(self, value):
        return _gpudm.SolverParameter_set_clip_gradients(self, value)

    def has_snapshot(self):
        return _gpudm.SolverParameter_has_snapshot(self)

    def clear_snapshot(self):
        return _gpudm.SolverParameter_clear_snapshot(self)
    kSnapshotFieldNumber = _gpudm.SolverParameter_kSnapshotFieldNumber

    def snapshot(self):
        return _gpudm.SolverParameter_snapshot(self)

    def set_snapshot(self, value):
        return _gpudm.SolverParameter_set_snapshot(self, value)

    def has_snapshot_prefix(self):
        return _gpudm.SolverParameter_has_snapshot_prefix(self)

    def clear_snapshot_prefix(self):
        return _gpudm.SolverParameter_clear_snapshot_prefix(self)
    kSnapshotPrefixFieldNumber = _gpudm.SolverParameter_kSnapshotPrefixFieldNumber

    def snapshot_prefix(self):
        return _gpudm.SolverParameter_snapshot_prefix(self)

    def set_snapshot_prefix(self, *args):
        return _gpudm.SolverParameter_set_snapshot_prefix(self, *args)

    def mutable_snapshot_prefix(self):
        return _gpudm.SolverParameter_mutable_snapshot_prefix(self)

    def release_snapshot_prefix(self):
        return _gpudm.SolverParameter_release_snapshot_prefix(self)

    def set_allocated_snapshot_prefix(self, snapshot_prefix):
        return _gpudm.SolverParameter_set_allocated_snapshot_prefix(self, snapshot_prefix)

    def has_snapshot_diff(self):
        return _gpudm.SolverParameter_has_snapshot_diff(self)

    def clear_snapshot_diff(self):
        return _gpudm.SolverParameter_clear_snapshot_diff(self)
    kSnapshotDiffFieldNumber = _gpudm.SolverParameter_kSnapshotDiffFieldNumber

    def snapshot_diff(self):
        return _gpudm.SolverParameter_snapshot_diff(self)

    def set_snapshot_diff(self, value):
        return _gpudm.SolverParameter_set_snapshot_diff(self, value)

    def has_snapshot_format(self):
        return _gpudm.SolverParameter_has_snapshot_format(self)

    def clear_snapshot_format(self):
        return _gpudm.SolverParameter_clear_snapshot_format(self)
    kSnapshotFormatFieldNumber = _gpudm.SolverParameter_kSnapshotFormatFieldNumber

    def snapshot_format(self):
        return _gpudm.SolverParameter_snapshot_format(self)

    def set_snapshot_format(self, value):
        return _gpudm.SolverParameter_set_snapshot_format(self, value)

    def has_solver_mode(self):
        return _gpudm.SolverParameter_has_solver_mode(self)

    def clear_solver_mode(self):
        return _gpudm.SolverParameter_clear_solver_mode(self)
    kSolverModeFieldNumber = _gpudm.SolverParameter_kSolverModeFieldNumber

    def solver_mode(self):
        return _gpudm.SolverParameter_solver_mode(self)

    def set_solver_mode(self, value):
        return _gpudm.SolverParameter_set_solver_mode(self, value)

    def has_device_id(self):
        return _gpudm.SolverParameter_has_device_id(self)

    def clear_device_id(self):
        return _gpudm.SolverParameter_clear_device_id(self)
    kDeviceIdFieldNumber = _gpudm.SolverParameter_kDeviceIdFieldNumber

    def device_id(self):
        return _gpudm.SolverParameter_device_id(self)

    def set_device_id(self, value):
        return _gpudm.SolverParameter_set_device_id(self, value)

    def has_random_seed(self):
        return _gpudm.SolverParameter_has_random_seed(self)

    def clear_random_seed(self):
        return _gpudm.SolverParameter_clear_random_seed(self)
    kRandomSeedFieldNumber = _gpudm.SolverParameter_kRandomSeedFieldNumber

    def random_seed(self):
        return _gpudm.SolverParameter_random_seed(self)

    def set_random_seed(self, value):
        return _gpudm.SolverParameter_set_random_seed(self, value)

    def has_type(self):
        return _gpudm.SolverParameter_has_type(self)

    def clear_type(self):
        return _gpudm.SolverParameter_clear_type(self)
    kTypeFieldNumber = _gpudm.SolverParameter_kTypeFieldNumber

    def type(self):
        return _gpudm.SolverParameter_type(self)

    def set_type(self, *args):
        return _gpudm.SolverParameter_set_type(self, *args)

    def mutable_type(self):
        return _gpudm.SolverParameter_mutable_type(self)

    def release_type(self):
        return _gpudm.SolverParameter_release_type(self)

    def set_allocated_type(self, type):
        return _gpudm.SolverParameter_set_allocated_type(self, type)

    def has_delta(self):
        return _gpudm.SolverParameter_has_delta(self)

    def clear_delta(self):
        return _gpudm.SolverParameter_clear_delta(self)
    kDeltaFieldNumber = _gpudm.SolverParameter_kDeltaFieldNumber

    def delta(self):
        return _gpudm.SolverParameter_delta(self)

    def set_delta(self, value):
        return _gpudm.SolverParameter_set_delta(self, value)

    def has_momentum2(self):
        return _gpudm.SolverParameter_has_momentum2(self)

    def clear_momentum2(self):
        return _gpudm.SolverParameter_clear_momentum2(self)
    kMomentum2FieldNumber = _gpudm.SolverParameter_kMomentum2FieldNumber

    def momentum2(self):
        return _gpudm.SolverParameter_momentum2(self)

    def set_momentum2(self, value):
        return _gpudm.SolverParameter_set_momentum2(self, value)

    def has_rms_decay(self):
        return _gpudm.SolverParameter_has_rms_decay(self)

    def clear_rms_decay(self):
        return _gpudm.SolverParameter_clear_rms_decay(self)
    kRmsDecayFieldNumber = _gpudm.SolverParameter_kRmsDecayFieldNumber

    def rms_decay(self):
        return _gpudm.SolverParameter_rms_decay(self)

    def set_rms_decay(self, value):
        return _gpudm.SolverParameter_set_rms_decay(self, value)

    def has_debug_info(self):
        return _gpudm.SolverParameter_has_debug_info(self)

    def clear_debug_info(self):
        return _gpudm.SolverParameter_clear_debug_info(self)
    kDebugInfoFieldNumber = _gpudm.SolverParameter_kDebugInfoFieldNumber

    def debug_info(self):
        return _gpudm.SolverParameter_debug_info(self)

    def set_debug_info(self, value):
        return _gpudm.SolverParameter_set_debug_info(self, value)

    def has_snapshot_after_train(self):
        return _gpudm.SolverParameter_has_snapshot_after_train(self)

    def clear_snapshot_after_train(self):
        return _gpudm.SolverParameter_clear_snapshot_after_train(self)
    kSnapshotAfterTrainFieldNumber = _gpudm.SolverParameter_kSnapshotAfterTrainFieldNumber

    def snapshot_after_train(self):
        return _gpudm.SolverParameter_snapshot_after_train(self)

    def set_snapshot_after_train(self, value):
        return _gpudm.SolverParameter_set_snapshot_after_train(self, value)

    def has_solver_type(self):
        return _gpudm.SolverParameter_has_solver_type(self)

    def clear_solver_type(self):
        return _gpudm.SolverParameter_clear_solver_type(self)
    kSolverTypeFieldNumber = _gpudm.SolverParameter_kSolverTypeFieldNumber

    def solver_type(self):
        return _gpudm.SolverParameter_solver_type(self)

    def set_solver_type(self, value):
        return _gpudm.SolverParameter_set_solver_type(self, value)
SolverParameter_swigregister = _gpudm.SolverParameter_swigregister
SolverParameter_swigregister(SolverParameter)

def SolverParameter_descriptor():
    return _gpudm.SolverParameter_descriptor()
SolverParameter_descriptor = _gpudm.SolverParameter_descriptor

def SolverParameter_default_instance():
    return _gpudm.SolverParameter_default_instance()
SolverParameter_default_instance = _gpudm.SolverParameter_default_instance

class SolverState(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SolverState, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SolverState, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SolverState
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SolverState(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SolverState_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SolverState_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SolverState_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SolverState_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SolverState_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SolverState_default_instance)

    def Swap(self, other):
        return _gpudm.SolverState_Swap(self, other)

    def New(self):
        return _gpudm.SolverState_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SolverState_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SolverState_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SolverState_Clear(self)

    def IsInitialized(self):
        return _gpudm.SolverState_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SolverState_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SolverState_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SolverState_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SolverState_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SolverState_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SolverState_GetMetadata(self)

    def has_iter(self):
        return _gpudm.SolverState_has_iter(self)

    def clear_iter(self):
        return _gpudm.SolverState_clear_iter(self)
    kIterFieldNumber = _gpudm.SolverState_kIterFieldNumber

    def iter(self):
        return _gpudm.SolverState_iter(self)

    def set_iter(self, value):
        return _gpudm.SolverState_set_iter(self, value)

    def has_learned_net(self):
        return _gpudm.SolverState_has_learned_net(self)

    def clear_learned_net(self):
        return _gpudm.SolverState_clear_learned_net(self)
    kLearnedNetFieldNumber = _gpudm.SolverState_kLearnedNetFieldNumber

    def learned_net(self):
        return _gpudm.SolverState_learned_net(self)

    def set_learned_net(self, *args):
        return _gpudm.SolverState_set_learned_net(self, *args)

    def mutable_learned_net(self):
        return _gpudm.SolverState_mutable_learned_net(self)

    def release_learned_net(self):
        return _gpudm.SolverState_release_learned_net(self)

    def set_allocated_learned_net(self, learned_net):
        return _gpudm.SolverState_set_allocated_learned_net(self, learned_net)

    def history_size(self):
        return _gpudm.SolverState_history_size(self)

    def clear_history(self):
        return _gpudm.SolverState_clear_history(self)
    kHistoryFieldNumber = _gpudm.SolverState_kHistoryFieldNumber

    def add_history(self):
        return _gpudm.SolverState_add_history(self)

    def history(self, *args):
        return _gpudm.SolverState_history(self, *args)

    def mutable_history(self, *args):
        return _gpudm.SolverState_mutable_history(self, *args)

    def has_current_step(self):
        return _gpudm.SolverState_has_current_step(self)

    def clear_current_step(self):
        return _gpudm.SolverState_clear_current_step(self)
    kCurrentStepFieldNumber = _gpudm.SolverState_kCurrentStepFieldNumber

    def current_step(self):
        return _gpudm.SolverState_current_step(self)

    def set_current_step(self, value):
        return _gpudm.SolverState_set_current_step(self, value)
SolverState_swigregister = _gpudm.SolverState_swigregister
SolverState_swigregister(SolverState)

def SolverState_descriptor():
    return _gpudm.SolverState_descriptor()
SolverState_descriptor = _gpudm.SolverState_descriptor

def SolverState_default_instance():
    return _gpudm.SolverState_default_instance()
SolverState_default_instance = _gpudm.SolverState_default_instance

class NetState(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetState, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, NetState, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_NetState
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_NetState(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.NetState_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.NetState_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.NetState_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.NetState_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.NetState_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.NetState_default_instance)

    def Swap(self, other):
        return _gpudm.NetState_Swap(self, other)

    def New(self):
        return _gpudm.NetState_New(self)

    def CopyFrom(self, *args):
        return _gpudm.NetState_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.NetState_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.NetState_Clear(self)

    def IsInitialized(self):
        return _gpudm.NetState_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.NetState_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.NetState_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.NetState_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.NetState_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.NetState_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.NetState_GetMetadata(self)

    def has_phase(self):
        return _gpudm.NetState_has_phase(self)

    def clear_phase(self):
        return _gpudm.NetState_clear_phase(self)
    kPhaseFieldNumber = _gpudm.NetState_kPhaseFieldNumber

    def phase(self):
        return _gpudm.NetState_phase(self)

    def set_phase(self, value):
        return _gpudm.NetState_set_phase(self, value)

    def has_level(self):
        return _gpudm.NetState_has_level(self)

    def clear_level(self):
        return _gpudm.NetState_clear_level(self)
    kLevelFieldNumber = _gpudm.NetState_kLevelFieldNumber

    def level(self):
        return _gpudm.NetState_level(self)

    def set_level(self, value):
        return _gpudm.NetState_set_level(self, value)

    def stage_size(self):
        return _gpudm.NetState_stage_size(self)

    def clear_stage(self):
        return _gpudm.NetState_clear_stage(self)
    kStageFieldNumber = _gpudm.NetState_kStageFieldNumber

    def set_stage(self, *args):
        return _gpudm.NetState_set_stage(self, *args)

    def add_stage(self, *args):
        return _gpudm.NetState_add_stage(self, *args)

    def stage(self, *args):
        return _gpudm.NetState_stage(self, *args)

    def mutable_stage(self, *args):
        return _gpudm.NetState_mutable_stage(self, *args)
NetState_swigregister = _gpudm.NetState_swigregister
NetState_swigregister(NetState)

def NetState_descriptor():
    return _gpudm.NetState_descriptor()
NetState_descriptor = _gpudm.NetState_descriptor

def NetState_default_instance():
    return _gpudm.NetState_default_instance()
NetState_default_instance = _gpudm.NetState_default_instance

class NetStateRule(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetStateRule, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, NetStateRule, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_NetStateRule
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_NetStateRule(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.NetStateRule_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.NetStateRule_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.NetStateRule_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.NetStateRule_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.NetStateRule_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.NetStateRule_default_instance)

    def Swap(self, other):
        return _gpudm.NetStateRule_Swap(self, other)

    def New(self):
        return _gpudm.NetStateRule_New(self)

    def CopyFrom(self, *args):
        return _gpudm.NetStateRule_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.NetStateRule_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.NetStateRule_Clear(self)

    def IsInitialized(self):
        return _gpudm.NetStateRule_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.NetStateRule_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.NetStateRule_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.NetStateRule_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.NetStateRule_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.NetStateRule_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.NetStateRule_GetMetadata(self)

    def has_phase(self):
        return _gpudm.NetStateRule_has_phase(self)

    def clear_phase(self):
        return _gpudm.NetStateRule_clear_phase(self)
    kPhaseFieldNumber = _gpudm.NetStateRule_kPhaseFieldNumber

    def phase(self):
        return _gpudm.NetStateRule_phase(self)

    def set_phase(self, value):
        return _gpudm.NetStateRule_set_phase(self, value)

    def has_min_level(self):
        return _gpudm.NetStateRule_has_min_level(self)

    def clear_min_level(self):
        return _gpudm.NetStateRule_clear_min_level(self)
    kMinLevelFieldNumber = _gpudm.NetStateRule_kMinLevelFieldNumber

    def min_level(self):
        return _gpudm.NetStateRule_min_level(self)

    def set_min_level(self, value):
        return _gpudm.NetStateRule_set_min_level(self, value)

    def has_max_level(self):
        return _gpudm.NetStateRule_has_max_level(self)

    def clear_max_level(self):
        return _gpudm.NetStateRule_clear_max_level(self)
    kMaxLevelFieldNumber = _gpudm.NetStateRule_kMaxLevelFieldNumber

    def max_level(self):
        return _gpudm.NetStateRule_max_level(self)

    def set_max_level(self, value):
        return _gpudm.NetStateRule_set_max_level(self, value)

    def stage_size(self):
        return _gpudm.NetStateRule_stage_size(self)

    def clear_stage(self):
        return _gpudm.NetStateRule_clear_stage(self)
    kStageFieldNumber = _gpudm.NetStateRule_kStageFieldNumber

    def set_stage(self, *args):
        return _gpudm.NetStateRule_set_stage(self, *args)

    def add_stage(self, *args):
        return _gpudm.NetStateRule_add_stage(self, *args)

    def stage(self, *args):
        return _gpudm.NetStateRule_stage(self, *args)

    def mutable_stage(self, *args):
        return _gpudm.NetStateRule_mutable_stage(self, *args)

    def not_stage_size(self):
        return _gpudm.NetStateRule_not_stage_size(self)

    def clear_not_stage(self):
        return _gpudm.NetStateRule_clear_not_stage(self)
    kNotStageFieldNumber = _gpudm.NetStateRule_kNotStageFieldNumber

    def set_not_stage(self, *args):
        return _gpudm.NetStateRule_set_not_stage(self, *args)

    def add_not_stage(self, *args):
        return _gpudm.NetStateRule_add_not_stage(self, *args)

    def not_stage(self, *args):
        return _gpudm.NetStateRule_not_stage(self, *args)

    def mutable_not_stage(self, *args):
        return _gpudm.NetStateRule_mutable_not_stage(self, *args)
NetStateRule_swigregister = _gpudm.NetStateRule_swigregister
NetStateRule_swigregister(NetStateRule)

def NetStateRule_descriptor():
    return _gpudm.NetStateRule_descriptor()
NetStateRule_descriptor = _gpudm.NetStateRule_descriptor

def NetStateRule_default_instance():
    return _gpudm.NetStateRule_default_instance()
NetStateRule_default_instance = _gpudm.NetStateRule_default_instance

class ParamSpec(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ParamSpec, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ParamSpec, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ParamSpec
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ParamSpec(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ParamSpec_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ParamSpec_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ParamSpec_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ParamSpec_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ParamSpec_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ParamSpec_default_instance)

    def Swap(self, other):
        return _gpudm.ParamSpec_Swap(self, other)

    def New(self):
        return _gpudm.ParamSpec_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ParamSpec_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ParamSpec_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ParamSpec_Clear(self)

    def IsInitialized(self):
        return _gpudm.ParamSpec_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ParamSpec_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ParamSpec_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ParamSpec_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ParamSpec_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ParamSpec_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ParamSpec_GetMetadata(self)
    STRICT = _gpudm.ParamSpec_STRICT
    PERMISSIVE = _gpudm.ParamSpec_PERMISSIVE
    __swig_getmethods__["DimCheckMode_IsValid"] = lambda x: _gpudm.ParamSpec_DimCheckMode_IsValid
    if _newclass:
        DimCheckMode_IsValid = staticmethod(_gpudm.ParamSpec_DimCheckMode_IsValid)
    DimCheckMode_MIN = _gpudm.ParamSpec_DimCheckMode_MIN
    DimCheckMode_MAX = _gpudm.ParamSpec_DimCheckMode_MAX
    DimCheckMode_ARRAYSIZE = _gpudm.ParamSpec_DimCheckMode_ARRAYSIZE
    __swig_getmethods__["DimCheckMode_descriptor"] = lambda x: _gpudm.ParamSpec_DimCheckMode_descriptor
    if _newclass:
        DimCheckMode_descriptor = staticmethod(_gpudm.ParamSpec_DimCheckMode_descriptor)
    __swig_getmethods__["DimCheckMode_Name"] = lambda x: _gpudm.ParamSpec_DimCheckMode_Name
    if _newclass:
        DimCheckMode_Name = staticmethod(_gpudm.ParamSpec_DimCheckMode_Name)
    __swig_getmethods__["DimCheckMode_Parse"] = lambda x: _gpudm.ParamSpec_DimCheckMode_Parse
    if _newclass:
        DimCheckMode_Parse = staticmethod(_gpudm.ParamSpec_DimCheckMode_Parse)

    def has_name(self):
        return _gpudm.ParamSpec_has_name(self)

    def clear_name(self):
        return _gpudm.ParamSpec_clear_name(self)
    kNameFieldNumber = _gpudm.ParamSpec_kNameFieldNumber

    def name(self):
        return _gpudm.ParamSpec_name(self)

    def set_name(self, *args):
        return _gpudm.ParamSpec_set_name(self, *args)

    def mutable_name(self):
        return _gpudm.ParamSpec_mutable_name(self)

    def release_name(self):
        return _gpudm.ParamSpec_release_name(self)

    def set_allocated_name(self, name):
        return _gpudm.ParamSpec_set_allocated_name(self, name)

    def has_share_mode(self):
        return _gpudm.ParamSpec_has_share_mode(self)

    def clear_share_mode(self):
        return _gpudm.ParamSpec_clear_share_mode(self)
    kShareModeFieldNumber = _gpudm.ParamSpec_kShareModeFieldNumber

    def share_mode(self):
        return _gpudm.ParamSpec_share_mode(self)

    def set_share_mode(self, value):
        return _gpudm.ParamSpec_set_share_mode(self, value)

    def has_lr_mult(self):
        return _gpudm.ParamSpec_has_lr_mult(self)

    def clear_lr_mult(self):
        return _gpudm.ParamSpec_clear_lr_mult(self)
    kLrMultFieldNumber = _gpudm.ParamSpec_kLrMultFieldNumber

    def lr_mult(self):
        return _gpudm.ParamSpec_lr_mult(self)

    def set_lr_mult(self, value):
        return _gpudm.ParamSpec_set_lr_mult(self, value)

    def has_decay_mult(self):
        return _gpudm.ParamSpec_has_decay_mult(self)

    def clear_decay_mult(self):
        return _gpudm.ParamSpec_clear_decay_mult(self)
    kDecayMultFieldNumber = _gpudm.ParamSpec_kDecayMultFieldNumber

    def decay_mult(self):
        return _gpudm.ParamSpec_decay_mult(self)

    def set_decay_mult(self, value):
        return _gpudm.ParamSpec_set_decay_mult(self, value)
ParamSpec_swigregister = _gpudm.ParamSpec_swigregister
ParamSpec_swigregister(ParamSpec)

def ParamSpec_descriptor():
    return _gpudm.ParamSpec_descriptor()
ParamSpec_descriptor = _gpudm.ParamSpec_descriptor

def ParamSpec_default_instance():
    return _gpudm.ParamSpec_default_instance()
ParamSpec_default_instance = _gpudm.ParamSpec_default_instance

class LayerParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LayerParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LayerParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_LayerParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_LayerParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.LayerParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.LayerParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.LayerParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.LayerParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.LayerParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.LayerParameter_default_instance)

    def Swap(self, other):
        return _gpudm.LayerParameter_Swap(self, other)

    def New(self):
        return _gpudm.LayerParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.LayerParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.LayerParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.LayerParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.LayerParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.LayerParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.LayerParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.LayerParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.LayerParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.LayerParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.LayerParameter_GetMetadata(self)

    def has_name(self):
        return _gpudm.LayerParameter_has_name(self)

    def clear_name(self):
        return _gpudm.LayerParameter_clear_name(self)
    kNameFieldNumber = _gpudm.LayerParameter_kNameFieldNumber

    def name(self):
        return _gpudm.LayerParameter_name(self)

    def set_name(self, *args):
        return _gpudm.LayerParameter_set_name(self, *args)

    def mutable_name(self):
        return _gpudm.LayerParameter_mutable_name(self)

    def release_name(self):
        return _gpudm.LayerParameter_release_name(self)

    def set_allocated_name(self, name):
        return _gpudm.LayerParameter_set_allocated_name(self, name)

    def has_type(self):
        return _gpudm.LayerParameter_has_type(self)

    def clear_type(self):
        return _gpudm.LayerParameter_clear_type(self)
    kTypeFieldNumber = _gpudm.LayerParameter_kTypeFieldNumber

    def type(self):
        return _gpudm.LayerParameter_type(self)

    def set_type(self, *args):
        return _gpudm.LayerParameter_set_type(self, *args)

    def mutable_type(self):
        return _gpudm.LayerParameter_mutable_type(self)

    def release_type(self):
        return _gpudm.LayerParameter_release_type(self)

    def set_allocated_type(self, type):
        return _gpudm.LayerParameter_set_allocated_type(self, type)

    def bottom_size(self):
        return _gpudm.LayerParameter_bottom_size(self)

    def clear_bottom(self):
        return _gpudm.LayerParameter_clear_bottom(self)
    kBottomFieldNumber = _gpudm.LayerParameter_kBottomFieldNumber

    def set_bottom(self, *args):
        return _gpudm.LayerParameter_set_bottom(self, *args)

    def add_bottom(self, *args):
        return _gpudm.LayerParameter_add_bottom(self, *args)

    def bottom(self, *args):
        return _gpudm.LayerParameter_bottom(self, *args)

    def mutable_bottom(self, *args):
        return _gpudm.LayerParameter_mutable_bottom(self, *args)

    def top_size(self):
        return _gpudm.LayerParameter_top_size(self)

    def clear_top(self):
        return _gpudm.LayerParameter_clear_top(self)
    kTopFieldNumber = _gpudm.LayerParameter_kTopFieldNumber

    def set_top(self, *args):
        return _gpudm.LayerParameter_set_top(self, *args)

    def add_top(self, *args):
        return _gpudm.LayerParameter_add_top(self, *args)

    def top(self, *args):
        return _gpudm.LayerParameter_top(self, *args)

    def mutable_top(self, *args):
        return _gpudm.LayerParameter_mutable_top(self, *args)

    def has_phase(self):
        return _gpudm.LayerParameter_has_phase(self)

    def clear_phase(self):
        return _gpudm.LayerParameter_clear_phase(self)
    kPhaseFieldNumber = _gpudm.LayerParameter_kPhaseFieldNumber

    def phase(self):
        return _gpudm.LayerParameter_phase(self)

    def set_phase(self, value):
        return _gpudm.LayerParameter_set_phase(self, value)

    def loss_weight_size(self):
        return _gpudm.LayerParameter_loss_weight_size(self)

    def clear_loss_weight(self):
        return _gpudm.LayerParameter_clear_loss_weight(self)
    kLossWeightFieldNumber = _gpudm.LayerParameter_kLossWeightFieldNumber

    def set_loss_weight(self, index, value):
        return _gpudm.LayerParameter_set_loss_weight(self, index, value)

    def add_loss_weight(self, value):
        return _gpudm.LayerParameter_add_loss_weight(self, value)

    def loss_weight(self, *args):
        return _gpudm.LayerParameter_loss_weight(self, *args)

    def mutable_loss_weight(self):
        return _gpudm.LayerParameter_mutable_loss_weight(self)

    def param_size(self):
        return _gpudm.LayerParameter_param_size(self)

    def clear_param(self):
        return _gpudm.LayerParameter_clear_param(self)
    kParamFieldNumber = _gpudm.LayerParameter_kParamFieldNumber

    def add_param(self):
        return _gpudm.LayerParameter_add_param(self)

    def param(self, *args):
        return _gpudm.LayerParameter_param(self, *args)

    def mutable_param(self, *args):
        return _gpudm.LayerParameter_mutable_param(self, *args)

    def blobs_size(self):
        return _gpudm.LayerParameter_blobs_size(self)

    def clear_blobs(self):
        return _gpudm.LayerParameter_clear_blobs(self)
    kBlobsFieldNumber = _gpudm.LayerParameter_kBlobsFieldNumber

    def add_blobs(self):
        return _gpudm.LayerParameter_add_blobs(self)

    def blobs(self, *args):
        return _gpudm.LayerParameter_blobs(self, *args)

    def mutable_blobs(self, *args):
        return _gpudm.LayerParameter_mutable_blobs(self, *args)

    def propagate_down_size(self):
        return _gpudm.LayerParameter_propagate_down_size(self)

    def clear_propagate_down(self):
        return _gpudm.LayerParameter_clear_propagate_down(self)
    kPropagateDownFieldNumber = _gpudm.LayerParameter_kPropagateDownFieldNumber

    def set_propagate_down(self, index, value):
        return _gpudm.LayerParameter_set_propagate_down(self, index, value)

    def add_propagate_down(self, value):
        return _gpudm.LayerParameter_add_propagate_down(self, value)

    def propagate_down(self, *args):
        return _gpudm.LayerParameter_propagate_down(self, *args)

    def mutable_propagate_down(self):
        return _gpudm.LayerParameter_mutable_propagate_down(self)

    def include_size(self):
        return _gpudm.LayerParameter_include_size(self)

    def clear_include(self):
        return _gpudm.LayerParameter_clear_include(self)
    kIncludeFieldNumber = _gpudm.LayerParameter_kIncludeFieldNumber

    def add_include(self):
        return _gpudm.LayerParameter_add_include(self)

    def include(self, *args):
        return _gpudm.LayerParameter_include(self, *args)

    def mutable_include(self, *args):
        return _gpudm.LayerParameter_mutable_include(self, *args)

    def exclude_size(self):
        return _gpudm.LayerParameter_exclude_size(self)

    def clear_exclude(self):
        return _gpudm.LayerParameter_clear_exclude(self)
    kExcludeFieldNumber = _gpudm.LayerParameter_kExcludeFieldNumber

    def add_exclude(self):
        return _gpudm.LayerParameter_add_exclude(self)

    def exclude(self, *args):
        return _gpudm.LayerParameter_exclude(self, *args)

    def mutable_exclude(self, *args):
        return _gpudm.LayerParameter_mutable_exclude(self, *args)

    def has_transform_param(self):
        return _gpudm.LayerParameter_has_transform_param(self)

    def clear_transform_param(self):
        return _gpudm.LayerParameter_clear_transform_param(self)
    kTransformParamFieldNumber = _gpudm.LayerParameter_kTransformParamFieldNumber

    def transform_param(self):
        return _gpudm.LayerParameter_transform_param(self)

    def mutable_transform_param(self):
        return _gpudm.LayerParameter_mutable_transform_param(self)

    def release_transform_param(self):
        return _gpudm.LayerParameter_release_transform_param(self)

    def set_allocated_transform_param(self, transform_param):
        return _gpudm.LayerParameter_set_allocated_transform_param(self, transform_param)

    def has_loss_param(self):
        return _gpudm.LayerParameter_has_loss_param(self)

    def clear_loss_param(self):
        return _gpudm.LayerParameter_clear_loss_param(self)
    kLossParamFieldNumber = _gpudm.LayerParameter_kLossParamFieldNumber

    def loss_param(self):
        return _gpudm.LayerParameter_loss_param(self)

    def mutable_loss_param(self):
        return _gpudm.LayerParameter_mutable_loss_param(self)

    def release_loss_param(self):
        return _gpudm.LayerParameter_release_loss_param(self)

    def set_allocated_loss_param(self, loss_param):
        return _gpudm.LayerParameter_set_allocated_loss_param(self, loss_param)

    def has_accuracy_param(self):
        return _gpudm.LayerParameter_has_accuracy_param(self)

    def clear_accuracy_param(self):
        return _gpudm.LayerParameter_clear_accuracy_param(self)
    kAccuracyParamFieldNumber = _gpudm.LayerParameter_kAccuracyParamFieldNumber

    def accuracy_param(self):
        return _gpudm.LayerParameter_accuracy_param(self)

    def mutable_accuracy_param(self):
        return _gpudm.LayerParameter_mutable_accuracy_param(self)

    def release_accuracy_param(self):
        return _gpudm.LayerParameter_release_accuracy_param(self)

    def set_allocated_accuracy_param(self, accuracy_param):
        return _gpudm.LayerParameter_set_allocated_accuracy_param(self, accuracy_param)

    def has_argmax_param(self):
        return _gpudm.LayerParameter_has_argmax_param(self)

    def clear_argmax_param(self):
        return _gpudm.LayerParameter_clear_argmax_param(self)
    kArgmaxParamFieldNumber = _gpudm.LayerParameter_kArgmaxParamFieldNumber

    def argmax_param(self):
        return _gpudm.LayerParameter_argmax_param(self)

    def mutable_argmax_param(self):
        return _gpudm.LayerParameter_mutable_argmax_param(self)

    def release_argmax_param(self):
        return _gpudm.LayerParameter_release_argmax_param(self)

    def set_allocated_argmax_param(self, argmax_param):
        return _gpudm.LayerParameter_set_allocated_argmax_param(self, argmax_param)

    def has_batch_norm_param(self):
        return _gpudm.LayerParameter_has_batch_norm_param(self)

    def clear_batch_norm_param(self):
        return _gpudm.LayerParameter_clear_batch_norm_param(self)
    kBatchNormParamFieldNumber = _gpudm.LayerParameter_kBatchNormParamFieldNumber

    def batch_norm_param(self):
        return _gpudm.LayerParameter_batch_norm_param(self)

    def mutable_batch_norm_param(self):
        return _gpudm.LayerParameter_mutable_batch_norm_param(self)

    def release_batch_norm_param(self):
        return _gpudm.LayerParameter_release_batch_norm_param(self)

    def set_allocated_batch_norm_param(self, batch_norm_param):
        return _gpudm.LayerParameter_set_allocated_batch_norm_param(self, batch_norm_param)

    def has_concat_param(self):
        return _gpudm.LayerParameter_has_concat_param(self)

    def clear_concat_param(self):
        return _gpudm.LayerParameter_clear_concat_param(self)
    kConcatParamFieldNumber = _gpudm.LayerParameter_kConcatParamFieldNumber

    def concat_param(self):
        return _gpudm.LayerParameter_concat_param(self)

    def mutable_concat_param(self):
        return _gpudm.LayerParameter_mutable_concat_param(self)

    def release_concat_param(self):
        return _gpudm.LayerParameter_release_concat_param(self)

    def set_allocated_concat_param(self, concat_param):
        return _gpudm.LayerParameter_set_allocated_concat_param(self, concat_param)

    def has_contrastive_loss_param(self):
        return _gpudm.LayerParameter_has_contrastive_loss_param(self)

    def clear_contrastive_loss_param(self):
        return _gpudm.LayerParameter_clear_contrastive_loss_param(self)
    kContrastiveLossParamFieldNumber = _gpudm.LayerParameter_kContrastiveLossParamFieldNumber

    def contrastive_loss_param(self):
        return _gpudm.LayerParameter_contrastive_loss_param(self)

    def mutable_contrastive_loss_param(self):
        return _gpudm.LayerParameter_mutable_contrastive_loss_param(self)

    def release_contrastive_loss_param(self):
        return _gpudm.LayerParameter_release_contrastive_loss_param(self)

    def set_allocated_contrastive_loss_param(self, contrastive_loss_param):
        return _gpudm.LayerParameter_set_allocated_contrastive_loss_param(self, contrastive_loss_param)

    def has_convolution_param(self):
        return _gpudm.LayerParameter_has_convolution_param(self)

    def clear_convolution_param(self):
        return _gpudm.LayerParameter_clear_convolution_param(self)
    kConvolutionParamFieldNumber = _gpudm.LayerParameter_kConvolutionParamFieldNumber

    def convolution_param(self):
        return _gpudm.LayerParameter_convolution_param(self)

    def mutable_convolution_param(self):
        return _gpudm.LayerParameter_mutable_convolution_param(self)

    def release_convolution_param(self):
        return _gpudm.LayerParameter_release_convolution_param(self)

    def set_allocated_convolution_param(self, convolution_param):
        return _gpudm.LayerParameter_set_allocated_convolution_param(self, convolution_param)

    def has_data_param(self):
        return _gpudm.LayerParameter_has_data_param(self)

    def clear_data_param(self):
        return _gpudm.LayerParameter_clear_data_param(self)
    kDataParamFieldNumber = _gpudm.LayerParameter_kDataParamFieldNumber

    def data_param(self):
        return _gpudm.LayerParameter_data_param(self)

    def mutable_data_param(self):
        return _gpudm.LayerParameter_mutable_data_param(self)

    def release_data_param(self):
        return _gpudm.LayerParameter_release_data_param(self)

    def set_allocated_data_param(self, data_param):
        return _gpudm.LayerParameter_set_allocated_data_param(self, data_param)

    def has_dropout_param(self):
        return _gpudm.LayerParameter_has_dropout_param(self)

    def clear_dropout_param(self):
        return _gpudm.LayerParameter_clear_dropout_param(self)
    kDropoutParamFieldNumber = _gpudm.LayerParameter_kDropoutParamFieldNumber

    def dropout_param(self):
        return _gpudm.LayerParameter_dropout_param(self)

    def mutable_dropout_param(self):
        return _gpudm.LayerParameter_mutable_dropout_param(self)

    def release_dropout_param(self):
        return _gpudm.LayerParameter_release_dropout_param(self)

    def set_allocated_dropout_param(self, dropout_param):
        return _gpudm.LayerParameter_set_allocated_dropout_param(self, dropout_param)

    def has_dummy_data_param(self):
        return _gpudm.LayerParameter_has_dummy_data_param(self)

    def clear_dummy_data_param(self):
        return _gpudm.LayerParameter_clear_dummy_data_param(self)
    kDummyDataParamFieldNumber = _gpudm.LayerParameter_kDummyDataParamFieldNumber

    def dummy_data_param(self):
        return _gpudm.LayerParameter_dummy_data_param(self)

    def mutable_dummy_data_param(self):
        return _gpudm.LayerParameter_mutable_dummy_data_param(self)

    def release_dummy_data_param(self):
        return _gpudm.LayerParameter_release_dummy_data_param(self)

    def set_allocated_dummy_data_param(self, dummy_data_param):
        return _gpudm.LayerParameter_set_allocated_dummy_data_param(self, dummy_data_param)

    def has_eltwise_param(self):
        return _gpudm.LayerParameter_has_eltwise_param(self)

    def clear_eltwise_param(self):
        return _gpudm.LayerParameter_clear_eltwise_param(self)
    kEltwiseParamFieldNumber = _gpudm.LayerParameter_kEltwiseParamFieldNumber

    def eltwise_param(self):
        return _gpudm.LayerParameter_eltwise_param(self)

    def mutable_eltwise_param(self):
        return _gpudm.LayerParameter_mutable_eltwise_param(self)

    def release_eltwise_param(self):
        return _gpudm.LayerParameter_release_eltwise_param(self)

    def set_allocated_eltwise_param(self, eltwise_param):
        return _gpudm.LayerParameter_set_allocated_eltwise_param(self, eltwise_param)

    def has_embed_param(self):
        return _gpudm.LayerParameter_has_embed_param(self)

    def clear_embed_param(self):
        return _gpudm.LayerParameter_clear_embed_param(self)
    kEmbedParamFieldNumber = _gpudm.LayerParameter_kEmbedParamFieldNumber

    def embed_param(self):
        return _gpudm.LayerParameter_embed_param(self)

    def mutable_embed_param(self):
        return _gpudm.LayerParameter_mutable_embed_param(self)

    def release_embed_param(self):
        return _gpudm.LayerParameter_release_embed_param(self)

    def set_allocated_embed_param(self, embed_param):
        return _gpudm.LayerParameter_set_allocated_embed_param(self, embed_param)

    def has_exp_param(self):
        return _gpudm.LayerParameter_has_exp_param(self)

    def clear_exp_param(self):
        return _gpudm.LayerParameter_clear_exp_param(self)
    kExpParamFieldNumber = _gpudm.LayerParameter_kExpParamFieldNumber

    def exp_param(self):
        return _gpudm.LayerParameter_exp_param(self)

    def mutable_exp_param(self):
        return _gpudm.LayerParameter_mutable_exp_param(self)

    def release_exp_param(self):
        return _gpudm.LayerParameter_release_exp_param(self)

    def set_allocated_exp_param(self, exp_param):
        return _gpudm.LayerParameter_set_allocated_exp_param(self, exp_param)

    def has_flatten_param(self):
        return _gpudm.LayerParameter_has_flatten_param(self)

    def clear_flatten_param(self):
        return _gpudm.LayerParameter_clear_flatten_param(self)
    kFlattenParamFieldNumber = _gpudm.LayerParameter_kFlattenParamFieldNumber

    def flatten_param(self):
        return _gpudm.LayerParameter_flatten_param(self)

    def mutable_flatten_param(self):
        return _gpudm.LayerParameter_mutable_flatten_param(self)

    def release_flatten_param(self):
        return _gpudm.LayerParameter_release_flatten_param(self)

    def set_allocated_flatten_param(self, flatten_param):
        return _gpudm.LayerParameter_set_allocated_flatten_param(self, flatten_param)

    def has_hdf5_data_param(self):
        return _gpudm.LayerParameter_has_hdf5_data_param(self)

    def clear_hdf5_data_param(self):
        return _gpudm.LayerParameter_clear_hdf5_data_param(self)
    kHdf5DataParamFieldNumber = _gpudm.LayerParameter_kHdf5DataParamFieldNumber

    def hdf5_data_param(self):
        return _gpudm.LayerParameter_hdf5_data_param(self)

    def mutable_hdf5_data_param(self):
        return _gpudm.LayerParameter_mutable_hdf5_data_param(self)

    def release_hdf5_data_param(self):
        return _gpudm.LayerParameter_release_hdf5_data_param(self)

    def set_allocated_hdf5_data_param(self, hdf5_data_param):
        return _gpudm.LayerParameter_set_allocated_hdf5_data_param(self, hdf5_data_param)

    def has_hdf5_output_param(self):
        return _gpudm.LayerParameter_has_hdf5_output_param(self)

    def clear_hdf5_output_param(self):
        return _gpudm.LayerParameter_clear_hdf5_output_param(self)
    kHdf5OutputParamFieldNumber = _gpudm.LayerParameter_kHdf5OutputParamFieldNumber

    def hdf5_output_param(self):
        return _gpudm.LayerParameter_hdf5_output_param(self)

    def mutable_hdf5_output_param(self):
        return _gpudm.LayerParameter_mutable_hdf5_output_param(self)

    def release_hdf5_output_param(self):
        return _gpudm.LayerParameter_release_hdf5_output_param(self)

    def set_allocated_hdf5_output_param(self, hdf5_output_param):
        return _gpudm.LayerParameter_set_allocated_hdf5_output_param(self, hdf5_output_param)

    def has_hinge_loss_param(self):
        return _gpudm.LayerParameter_has_hinge_loss_param(self)

    def clear_hinge_loss_param(self):
        return _gpudm.LayerParameter_clear_hinge_loss_param(self)
    kHingeLossParamFieldNumber = _gpudm.LayerParameter_kHingeLossParamFieldNumber

    def hinge_loss_param(self):
        return _gpudm.LayerParameter_hinge_loss_param(self)

    def mutable_hinge_loss_param(self):
        return _gpudm.LayerParameter_mutable_hinge_loss_param(self)

    def release_hinge_loss_param(self):
        return _gpudm.LayerParameter_release_hinge_loss_param(self)

    def set_allocated_hinge_loss_param(self, hinge_loss_param):
        return _gpudm.LayerParameter_set_allocated_hinge_loss_param(self, hinge_loss_param)

    def has_image_data_param(self):
        return _gpudm.LayerParameter_has_image_data_param(self)

    def clear_image_data_param(self):
        return _gpudm.LayerParameter_clear_image_data_param(self)
    kImageDataParamFieldNumber = _gpudm.LayerParameter_kImageDataParamFieldNumber

    def image_data_param(self):
        return _gpudm.LayerParameter_image_data_param(self)

    def mutable_image_data_param(self):
        return _gpudm.LayerParameter_mutable_image_data_param(self)

    def release_image_data_param(self):
        return _gpudm.LayerParameter_release_image_data_param(self)

    def set_allocated_image_data_param(self, image_data_param):
        return _gpudm.LayerParameter_set_allocated_image_data_param(self, image_data_param)

    def has_infogain_loss_param(self):
        return _gpudm.LayerParameter_has_infogain_loss_param(self)

    def clear_infogain_loss_param(self):
        return _gpudm.LayerParameter_clear_infogain_loss_param(self)
    kInfogainLossParamFieldNumber = _gpudm.LayerParameter_kInfogainLossParamFieldNumber

    def infogain_loss_param(self):
        return _gpudm.LayerParameter_infogain_loss_param(self)

    def mutable_infogain_loss_param(self):
        return _gpudm.LayerParameter_mutable_infogain_loss_param(self)

    def release_infogain_loss_param(self):
        return _gpudm.LayerParameter_release_infogain_loss_param(self)

    def set_allocated_infogain_loss_param(self, infogain_loss_param):
        return _gpudm.LayerParameter_set_allocated_infogain_loss_param(self, infogain_loss_param)

    def has_inner_product_param(self):
        return _gpudm.LayerParameter_has_inner_product_param(self)

    def clear_inner_product_param(self):
        return _gpudm.LayerParameter_clear_inner_product_param(self)
    kInnerProductParamFieldNumber = _gpudm.LayerParameter_kInnerProductParamFieldNumber

    def inner_product_param(self):
        return _gpudm.LayerParameter_inner_product_param(self)

    def mutable_inner_product_param(self):
        return _gpudm.LayerParameter_mutable_inner_product_param(self)

    def release_inner_product_param(self):
        return _gpudm.LayerParameter_release_inner_product_param(self)

    def set_allocated_inner_product_param(self, inner_product_param):
        return _gpudm.LayerParameter_set_allocated_inner_product_param(self, inner_product_param)

    def has_log_param(self):
        return _gpudm.LayerParameter_has_log_param(self)

    def clear_log_param(self):
        return _gpudm.LayerParameter_clear_log_param(self)
    kLogParamFieldNumber = _gpudm.LayerParameter_kLogParamFieldNumber

    def log_param(self):
        return _gpudm.LayerParameter_log_param(self)

    def mutable_log_param(self):
        return _gpudm.LayerParameter_mutable_log_param(self)

    def release_log_param(self):
        return _gpudm.LayerParameter_release_log_param(self)

    def set_allocated_log_param(self, log_param):
        return _gpudm.LayerParameter_set_allocated_log_param(self, log_param)

    def has_lrn_param(self):
        return _gpudm.LayerParameter_has_lrn_param(self)

    def clear_lrn_param(self):
        return _gpudm.LayerParameter_clear_lrn_param(self)
    kLrnParamFieldNumber = _gpudm.LayerParameter_kLrnParamFieldNumber

    def lrn_param(self):
        return _gpudm.LayerParameter_lrn_param(self)

    def mutable_lrn_param(self):
        return _gpudm.LayerParameter_mutable_lrn_param(self)

    def release_lrn_param(self):
        return _gpudm.LayerParameter_release_lrn_param(self)

    def set_allocated_lrn_param(self, lrn_param):
        return _gpudm.LayerParameter_set_allocated_lrn_param(self, lrn_param)

    def has_memory_data_param(self):
        return _gpudm.LayerParameter_has_memory_data_param(self)

    def clear_memory_data_param(self):
        return _gpudm.LayerParameter_clear_memory_data_param(self)
    kMemoryDataParamFieldNumber = _gpudm.LayerParameter_kMemoryDataParamFieldNumber

    def memory_data_param(self):
        return _gpudm.LayerParameter_memory_data_param(self)

    def mutable_memory_data_param(self):
        return _gpudm.LayerParameter_mutable_memory_data_param(self)

    def release_memory_data_param(self):
        return _gpudm.LayerParameter_release_memory_data_param(self)

    def set_allocated_memory_data_param(self, memory_data_param):
        return _gpudm.LayerParameter_set_allocated_memory_data_param(self, memory_data_param)

    def has_mvn_param(self):
        return _gpudm.LayerParameter_has_mvn_param(self)

    def clear_mvn_param(self):
        return _gpudm.LayerParameter_clear_mvn_param(self)
    kMvnParamFieldNumber = _gpudm.LayerParameter_kMvnParamFieldNumber

    def mvn_param(self):
        return _gpudm.LayerParameter_mvn_param(self)

    def mutable_mvn_param(self):
        return _gpudm.LayerParameter_mutable_mvn_param(self)

    def release_mvn_param(self):
        return _gpudm.LayerParameter_release_mvn_param(self)

    def set_allocated_mvn_param(self, mvn_param):
        return _gpudm.LayerParameter_set_allocated_mvn_param(self, mvn_param)

    def has_pooling_param(self):
        return _gpudm.LayerParameter_has_pooling_param(self)

    def clear_pooling_param(self):
        return _gpudm.LayerParameter_clear_pooling_param(self)
    kPoolingParamFieldNumber = _gpudm.LayerParameter_kPoolingParamFieldNumber

    def pooling_param(self):
        return _gpudm.LayerParameter_pooling_param(self)

    def mutable_pooling_param(self):
        return _gpudm.LayerParameter_mutable_pooling_param(self)

    def release_pooling_param(self):
        return _gpudm.LayerParameter_release_pooling_param(self)

    def set_allocated_pooling_param(self, pooling_param):
        return _gpudm.LayerParameter_set_allocated_pooling_param(self, pooling_param)

    def has_power_param(self):
        return _gpudm.LayerParameter_has_power_param(self)

    def clear_power_param(self):
        return _gpudm.LayerParameter_clear_power_param(self)
    kPowerParamFieldNumber = _gpudm.LayerParameter_kPowerParamFieldNumber

    def power_param(self):
        return _gpudm.LayerParameter_power_param(self)

    def mutable_power_param(self):
        return _gpudm.LayerParameter_mutable_power_param(self)

    def release_power_param(self):
        return _gpudm.LayerParameter_release_power_param(self)

    def set_allocated_power_param(self, power_param):
        return _gpudm.LayerParameter_set_allocated_power_param(self, power_param)

    def has_prelu_param(self):
        return _gpudm.LayerParameter_has_prelu_param(self)

    def clear_prelu_param(self):
        return _gpudm.LayerParameter_clear_prelu_param(self)
    kPreluParamFieldNumber = _gpudm.LayerParameter_kPreluParamFieldNumber

    def prelu_param(self):
        return _gpudm.LayerParameter_prelu_param(self)

    def mutable_prelu_param(self):
        return _gpudm.LayerParameter_mutable_prelu_param(self)

    def release_prelu_param(self):
        return _gpudm.LayerParameter_release_prelu_param(self)

    def set_allocated_prelu_param(self, prelu_param):
        return _gpudm.LayerParameter_set_allocated_prelu_param(self, prelu_param)

    def has_python_param(self):
        return _gpudm.LayerParameter_has_python_param(self)

    def clear_python_param(self):
        return _gpudm.LayerParameter_clear_python_param(self)
    kPythonParamFieldNumber = _gpudm.LayerParameter_kPythonParamFieldNumber

    def python_param(self):
        return _gpudm.LayerParameter_python_param(self)

    def mutable_python_param(self):
        return _gpudm.LayerParameter_mutable_python_param(self)

    def release_python_param(self):
        return _gpudm.LayerParameter_release_python_param(self)

    def set_allocated_python_param(self, python_param):
        return _gpudm.LayerParameter_set_allocated_python_param(self, python_param)

    def has_reduction_param(self):
        return _gpudm.LayerParameter_has_reduction_param(self)

    def clear_reduction_param(self):
        return _gpudm.LayerParameter_clear_reduction_param(self)
    kReductionParamFieldNumber = _gpudm.LayerParameter_kReductionParamFieldNumber

    def reduction_param(self):
        return _gpudm.LayerParameter_reduction_param(self)

    def mutable_reduction_param(self):
        return _gpudm.LayerParameter_mutable_reduction_param(self)

    def release_reduction_param(self):
        return _gpudm.LayerParameter_release_reduction_param(self)

    def set_allocated_reduction_param(self, reduction_param):
        return _gpudm.LayerParameter_set_allocated_reduction_param(self, reduction_param)

    def has_relu_param(self):
        return _gpudm.LayerParameter_has_relu_param(self)

    def clear_relu_param(self):
        return _gpudm.LayerParameter_clear_relu_param(self)
    kReluParamFieldNumber = _gpudm.LayerParameter_kReluParamFieldNumber

    def relu_param(self):
        return _gpudm.LayerParameter_relu_param(self)

    def mutable_relu_param(self):
        return _gpudm.LayerParameter_mutable_relu_param(self)

    def release_relu_param(self):
        return _gpudm.LayerParameter_release_relu_param(self)

    def set_allocated_relu_param(self, relu_param):
        return _gpudm.LayerParameter_set_allocated_relu_param(self, relu_param)

    def has_reshape_param(self):
        return _gpudm.LayerParameter_has_reshape_param(self)

    def clear_reshape_param(self):
        return _gpudm.LayerParameter_clear_reshape_param(self)
    kReshapeParamFieldNumber = _gpudm.LayerParameter_kReshapeParamFieldNumber

    def reshape_param(self):
        return _gpudm.LayerParameter_reshape_param(self)

    def mutable_reshape_param(self):
        return _gpudm.LayerParameter_mutable_reshape_param(self)

    def release_reshape_param(self):
        return _gpudm.LayerParameter_release_reshape_param(self)

    def set_allocated_reshape_param(self, reshape_param):
        return _gpudm.LayerParameter_set_allocated_reshape_param(self, reshape_param)

    def has_sigmoid_param(self):
        return _gpudm.LayerParameter_has_sigmoid_param(self)

    def clear_sigmoid_param(self):
        return _gpudm.LayerParameter_clear_sigmoid_param(self)
    kSigmoidParamFieldNumber = _gpudm.LayerParameter_kSigmoidParamFieldNumber

    def sigmoid_param(self):
        return _gpudm.LayerParameter_sigmoid_param(self)

    def mutable_sigmoid_param(self):
        return _gpudm.LayerParameter_mutable_sigmoid_param(self)

    def release_sigmoid_param(self):
        return _gpudm.LayerParameter_release_sigmoid_param(self)

    def set_allocated_sigmoid_param(self, sigmoid_param):
        return _gpudm.LayerParameter_set_allocated_sigmoid_param(self, sigmoid_param)

    def has_softmax_param(self):
        return _gpudm.LayerParameter_has_softmax_param(self)

    def clear_softmax_param(self):
        return _gpudm.LayerParameter_clear_softmax_param(self)
    kSoftmaxParamFieldNumber = _gpudm.LayerParameter_kSoftmaxParamFieldNumber

    def softmax_param(self):
        return _gpudm.LayerParameter_softmax_param(self)

    def mutable_softmax_param(self):
        return _gpudm.LayerParameter_mutable_softmax_param(self)

    def release_softmax_param(self):
        return _gpudm.LayerParameter_release_softmax_param(self)

    def set_allocated_softmax_param(self, softmax_param):
        return _gpudm.LayerParameter_set_allocated_softmax_param(self, softmax_param)

    def has_spp_param(self):
        return _gpudm.LayerParameter_has_spp_param(self)

    def clear_spp_param(self):
        return _gpudm.LayerParameter_clear_spp_param(self)
    kSppParamFieldNumber = _gpudm.LayerParameter_kSppParamFieldNumber

    def spp_param(self):
        return _gpudm.LayerParameter_spp_param(self)

    def mutable_spp_param(self):
        return _gpudm.LayerParameter_mutable_spp_param(self)

    def release_spp_param(self):
        return _gpudm.LayerParameter_release_spp_param(self)

    def set_allocated_spp_param(self, spp_param):
        return _gpudm.LayerParameter_set_allocated_spp_param(self, spp_param)

    def has_slice_param(self):
        return _gpudm.LayerParameter_has_slice_param(self)

    def clear_slice_param(self):
        return _gpudm.LayerParameter_clear_slice_param(self)
    kSliceParamFieldNumber = _gpudm.LayerParameter_kSliceParamFieldNumber

    def slice_param(self):
        return _gpudm.LayerParameter_slice_param(self)

    def mutable_slice_param(self):
        return _gpudm.LayerParameter_mutable_slice_param(self)

    def release_slice_param(self):
        return _gpudm.LayerParameter_release_slice_param(self)

    def set_allocated_slice_param(self, slice_param):
        return _gpudm.LayerParameter_set_allocated_slice_param(self, slice_param)

    def has_tanh_param(self):
        return _gpudm.LayerParameter_has_tanh_param(self)

    def clear_tanh_param(self):
        return _gpudm.LayerParameter_clear_tanh_param(self)
    kTanhParamFieldNumber = _gpudm.LayerParameter_kTanhParamFieldNumber

    def tanh_param(self):
        return _gpudm.LayerParameter_tanh_param(self)

    def mutable_tanh_param(self):
        return _gpudm.LayerParameter_mutable_tanh_param(self)

    def release_tanh_param(self):
        return _gpudm.LayerParameter_release_tanh_param(self)

    def set_allocated_tanh_param(self, tanh_param):
        return _gpudm.LayerParameter_set_allocated_tanh_param(self, tanh_param)

    def has_threshold_param(self):
        return _gpudm.LayerParameter_has_threshold_param(self)

    def clear_threshold_param(self):
        return _gpudm.LayerParameter_clear_threshold_param(self)
    kThresholdParamFieldNumber = _gpudm.LayerParameter_kThresholdParamFieldNumber

    def threshold_param(self):
        return _gpudm.LayerParameter_threshold_param(self)

    def mutable_threshold_param(self):
        return _gpudm.LayerParameter_mutable_threshold_param(self)

    def release_threshold_param(self):
        return _gpudm.LayerParameter_release_threshold_param(self)

    def set_allocated_threshold_param(self, threshold_param):
        return _gpudm.LayerParameter_set_allocated_threshold_param(self, threshold_param)

    def has_tile_param(self):
        return _gpudm.LayerParameter_has_tile_param(self)

    def clear_tile_param(self):
        return _gpudm.LayerParameter_clear_tile_param(self)
    kTileParamFieldNumber = _gpudm.LayerParameter_kTileParamFieldNumber

    def tile_param(self):
        return _gpudm.LayerParameter_tile_param(self)

    def mutable_tile_param(self):
        return _gpudm.LayerParameter_mutable_tile_param(self)

    def release_tile_param(self):
        return _gpudm.LayerParameter_release_tile_param(self)

    def set_allocated_tile_param(self, tile_param):
        return _gpudm.LayerParameter_set_allocated_tile_param(self, tile_param)

    def has_window_data_param(self):
        return _gpudm.LayerParameter_has_window_data_param(self)

    def clear_window_data_param(self):
        return _gpudm.LayerParameter_clear_window_data_param(self)
    kWindowDataParamFieldNumber = _gpudm.LayerParameter_kWindowDataParamFieldNumber

    def window_data_param(self):
        return _gpudm.LayerParameter_window_data_param(self)

    def mutable_window_data_param(self):
        return _gpudm.LayerParameter_mutable_window_data_param(self)

    def release_window_data_param(self):
        return _gpudm.LayerParameter_release_window_data_param(self)

    def set_allocated_window_data_param(self, window_data_param):
        return _gpudm.LayerParameter_set_allocated_window_data_param(self, window_data_param)
LayerParameter_swigregister = _gpudm.LayerParameter_swigregister
LayerParameter_swigregister(LayerParameter)

def LayerParameter_descriptor():
    return _gpudm.LayerParameter_descriptor()
LayerParameter_descriptor = _gpudm.LayerParameter_descriptor

def LayerParameter_default_instance():
    return _gpudm.LayerParameter_default_instance()
LayerParameter_default_instance = _gpudm.LayerParameter_default_instance

class TransformationParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TransformationParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TransformationParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_TransformationParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_TransformationParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.TransformationParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.TransformationParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.TransformationParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.TransformationParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.TransformationParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.TransformationParameter_default_instance)

    def Swap(self, other):
        return _gpudm.TransformationParameter_Swap(self, other)

    def New(self):
        return _gpudm.TransformationParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.TransformationParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.TransformationParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.TransformationParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.TransformationParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.TransformationParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.TransformationParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.TransformationParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.TransformationParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.TransformationParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.TransformationParameter_GetMetadata(self)

    def has_scale(self):
        return _gpudm.TransformationParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.TransformationParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.TransformationParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.TransformationParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.TransformationParameter_set_scale(self, value)

    def has_mirror(self):
        return _gpudm.TransformationParameter_has_mirror(self)

    def clear_mirror(self):
        return _gpudm.TransformationParameter_clear_mirror(self)
    kMirrorFieldNumber = _gpudm.TransformationParameter_kMirrorFieldNumber

    def mirror(self):
        return _gpudm.TransformationParameter_mirror(self)

    def set_mirror(self, value):
        return _gpudm.TransformationParameter_set_mirror(self, value)

    def has_crop_size(self):
        return _gpudm.TransformationParameter_has_crop_size(self)

    def clear_crop_size(self):
        return _gpudm.TransformationParameter_clear_crop_size(self)
    kCropSizeFieldNumber = _gpudm.TransformationParameter_kCropSizeFieldNumber

    def crop_size(self):
        return _gpudm.TransformationParameter_crop_size(self)

    def set_crop_size(self, value):
        return _gpudm.TransformationParameter_set_crop_size(self, value)

    def has_mean_file(self):
        return _gpudm.TransformationParameter_has_mean_file(self)

    def clear_mean_file(self):
        return _gpudm.TransformationParameter_clear_mean_file(self)
    kMeanFileFieldNumber = _gpudm.TransformationParameter_kMeanFileFieldNumber

    def mean_file(self):
        return _gpudm.TransformationParameter_mean_file(self)

    def set_mean_file(self, *args):
        return _gpudm.TransformationParameter_set_mean_file(self, *args)

    def mutable_mean_file(self):
        return _gpudm.TransformationParameter_mutable_mean_file(self)

    def release_mean_file(self):
        return _gpudm.TransformationParameter_release_mean_file(self)

    def set_allocated_mean_file(self, mean_file):
        return _gpudm.TransformationParameter_set_allocated_mean_file(self, mean_file)

    def mean_value_size(self):
        return _gpudm.TransformationParameter_mean_value_size(self)

    def clear_mean_value(self):
        return _gpudm.TransformationParameter_clear_mean_value(self)
    kMeanValueFieldNumber = _gpudm.TransformationParameter_kMeanValueFieldNumber

    def set_mean_value(self, index, value):
        return _gpudm.TransformationParameter_set_mean_value(self, index, value)

    def add_mean_value(self, value):
        return _gpudm.TransformationParameter_add_mean_value(self, value)

    def mean_value(self, *args):
        return _gpudm.TransformationParameter_mean_value(self, *args)

    def mutable_mean_value(self):
        return _gpudm.TransformationParameter_mutable_mean_value(self)

    def has_force_color(self):
        return _gpudm.TransformationParameter_has_force_color(self)

    def clear_force_color(self):
        return _gpudm.TransformationParameter_clear_force_color(self)
    kForceColorFieldNumber = _gpudm.TransformationParameter_kForceColorFieldNumber

    def force_color(self):
        return _gpudm.TransformationParameter_force_color(self)

    def set_force_color(self, value):
        return _gpudm.TransformationParameter_set_force_color(self, value)

    def has_force_gray(self):
        return _gpudm.TransformationParameter_has_force_gray(self)

    def clear_force_gray(self):
        return _gpudm.TransformationParameter_clear_force_gray(self)
    kForceGrayFieldNumber = _gpudm.TransformationParameter_kForceGrayFieldNumber

    def force_gray(self):
        return _gpudm.TransformationParameter_force_gray(self)

    def set_force_gray(self, value):
        return _gpudm.TransformationParameter_set_force_gray(self, value)
TransformationParameter_swigregister = _gpudm.TransformationParameter_swigregister
TransformationParameter_swigregister(TransformationParameter)

def TransformationParameter_descriptor():
    return _gpudm.TransformationParameter_descriptor()
TransformationParameter_descriptor = _gpudm.TransformationParameter_descriptor

def TransformationParameter_default_instance():
    return _gpudm.TransformationParameter_default_instance()
TransformationParameter_default_instance = _gpudm.TransformationParameter_default_instance

class LossParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LossParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LossParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_LossParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_LossParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.LossParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.LossParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.LossParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.LossParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.LossParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.LossParameter_default_instance)

    def Swap(self, other):
        return _gpudm.LossParameter_Swap(self, other)

    def New(self):
        return _gpudm.LossParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.LossParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.LossParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.LossParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.LossParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.LossParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.LossParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.LossParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.LossParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.LossParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.LossParameter_GetMetadata(self)

    def has_ignore_label(self):
        return _gpudm.LossParameter_has_ignore_label(self)

    def clear_ignore_label(self):
        return _gpudm.LossParameter_clear_ignore_label(self)
    kIgnoreLabelFieldNumber = _gpudm.LossParameter_kIgnoreLabelFieldNumber

    def ignore_label(self):
        return _gpudm.LossParameter_ignore_label(self)

    def set_ignore_label(self, value):
        return _gpudm.LossParameter_set_ignore_label(self, value)

    def has_normalize(self):
        return _gpudm.LossParameter_has_normalize(self)

    def clear_normalize(self):
        return _gpudm.LossParameter_clear_normalize(self)
    kNormalizeFieldNumber = _gpudm.LossParameter_kNormalizeFieldNumber

    def normalize(self):
        return _gpudm.LossParameter_normalize(self)

    def set_normalize(self, value):
        return _gpudm.LossParameter_set_normalize(self, value)
LossParameter_swigregister = _gpudm.LossParameter_swigregister
LossParameter_swigregister(LossParameter)

def LossParameter_descriptor():
    return _gpudm.LossParameter_descriptor()
LossParameter_descriptor = _gpudm.LossParameter_descriptor

def LossParameter_default_instance():
    return _gpudm.LossParameter_default_instance()
LossParameter_default_instance = _gpudm.LossParameter_default_instance

class AccuracyParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AccuracyParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, AccuracyParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_AccuracyParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_AccuracyParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.AccuracyParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.AccuracyParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.AccuracyParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.AccuracyParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.AccuracyParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.AccuracyParameter_default_instance)

    def Swap(self, other):
        return _gpudm.AccuracyParameter_Swap(self, other)

    def New(self):
        return _gpudm.AccuracyParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.AccuracyParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.AccuracyParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.AccuracyParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.AccuracyParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.AccuracyParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.AccuracyParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.AccuracyParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.AccuracyParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.AccuracyParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.AccuracyParameter_GetMetadata(self)

    def has_top_k(self):
        return _gpudm.AccuracyParameter_has_top_k(self)

    def clear_top_k(self):
        return _gpudm.AccuracyParameter_clear_top_k(self)
    kTopKFieldNumber = _gpudm.AccuracyParameter_kTopKFieldNumber

    def top_k(self):
        return _gpudm.AccuracyParameter_top_k(self)

    def set_top_k(self, value):
        return _gpudm.AccuracyParameter_set_top_k(self, value)

    def has_axis(self):
        return _gpudm.AccuracyParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.AccuracyParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.AccuracyParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.AccuracyParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.AccuracyParameter_set_axis(self, value)

    def has_ignore_label(self):
        return _gpudm.AccuracyParameter_has_ignore_label(self)

    def clear_ignore_label(self):
        return _gpudm.AccuracyParameter_clear_ignore_label(self)
    kIgnoreLabelFieldNumber = _gpudm.AccuracyParameter_kIgnoreLabelFieldNumber

    def ignore_label(self):
        return _gpudm.AccuracyParameter_ignore_label(self)

    def set_ignore_label(self, value):
        return _gpudm.AccuracyParameter_set_ignore_label(self, value)
AccuracyParameter_swigregister = _gpudm.AccuracyParameter_swigregister
AccuracyParameter_swigregister(AccuracyParameter)

def AccuracyParameter_descriptor():
    return _gpudm.AccuracyParameter_descriptor()
AccuracyParameter_descriptor = _gpudm.AccuracyParameter_descriptor

def AccuracyParameter_default_instance():
    return _gpudm.AccuracyParameter_default_instance()
AccuracyParameter_default_instance = _gpudm.AccuracyParameter_default_instance

class ArgMaxParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ArgMaxParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ArgMaxParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ArgMaxParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ArgMaxParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ArgMaxParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ArgMaxParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ArgMaxParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ArgMaxParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ArgMaxParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ArgMaxParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ArgMaxParameter_Swap(self, other)

    def New(self):
        return _gpudm.ArgMaxParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ArgMaxParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ArgMaxParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ArgMaxParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ArgMaxParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ArgMaxParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ArgMaxParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ArgMaxParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ArgMaxParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ArgMaxParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ArgMaxParameter_GetMetadata(self)

    def has_out_max_val(self):
        return _gpudm.ArgMaxParameter_has_out_max_val(self)

    def clear_out_max_val(self):
        return _gpudm.ArgMaxParameter_clear_out_max_val(self)
    kOutMaxValFieldNumber = _gpudm.ArgMaxParameter_kOutMaxValFieldNumber

    def out_max_val(self):
        return _gpudm.ArgMaxParameter_out_max_val(self)

    def set_out_max_val(self, value):
        return _gpudm.ArgMaxParameter_set_out_max_val(self, value)

    def has_top_k(self):
        return _gpudm.ArgMaxParameter_has_top_k(self)

    def clear_top_k(self):
        return _gpudm.ArgMaxParameter_clear_top_k(self)
    kTopKFieldNumber = _gpudm.ArgMaxParameter_kTopKFieldNumber

    def top_k(self):
        return _gpudm.ArgMaxParameter_top_k(self)

    def set_top_k(self, value):
        return _gpudm.ArgMaxParameter_set_top_k(self, value)

    def has_axis(self):
        return _gpudm.ArgMaxParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.ArgMaxParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.ArgMaxParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.ArgMaxParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.ArgMaxParameter_set_axis(self, value)
ArgMaxParameter_swigregister = _gpudm.ArgMaxParameter_swigregister
ArgMaxParameter_swigregister(ArgMaxParameter)

def ArgMaxParameter_descriptor():
    return _gpudm.ArgMaxParameter_descriptor()
ArgMaxParameter_descriptor = _gpudm.ArgMaxParameter_descriptor

def ArgMaxParameter_default_instance():
    return _gpudm.ArgMaxParameter_default_instance()
ArgMaxParameter_default_instance = _gpudm.ArgMaxParameter_default_instance

class ConcatParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConcatParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConcatParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ConcatParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ConcatParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ConcatParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ConcatParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ConcatParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ConcatParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ConcatParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ConcatParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ConcatParameter_Swap(self, other)

    def New(self):
        return _gpudm.ConcatParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ConcatParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ConcatParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ConcatParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ConcatParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ConcatParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ConcatParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ConcatParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ConcatParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ConcatParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ConcatParameter_GetMetadata(self)

    def has_axis(self):
        return _gpudm.ConcatParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.ConcatParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.ConcatParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.ConcatParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.ConcatParameter_set_axis(self, value)

    def has_concat_dim(self):
        return _gpudm.ConcatParameter_has_concat_dim(self)

    def clear_concat_dim(self):
        return _gpudm.ConcatParameter_clear_concat_dim(self)
    kConcatDimFieldNumber = _gpudm.ConcatParameter_kConcatDimFieldNumber

    def concat_dim(self):
        return _gpudm.ConcatParameter_concat_dim(self)

    def set_concat_dim(self, value):
        return _gpudm.ConcatParameter_set_concat_dim(self, value)
ConcatParameter_swigregister = _gpudm.ConcatParameter_swigregister
ConcatParameter_swigregister(ConcatParameter)

def ConcatParameter_descriptor():
    return _gpudm.ConcatParameter_descriptor()
ConcatParameter_descriptor = _gpudm.ConcatParameter_descriptor

def ConcatParameter_default_instance():
    return _gpudm.ConcatParameter_default_instance()
ConcatParameter_default_instance = _gpudm.ConcatParameter_default_instance

class BatchNormParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BatchNormParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BatchNormParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_BatchNormParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_BatchNormParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.BatchNormParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.BatchNormParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.BatchNormParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.BatchNormParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.BatchNormParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.BatchNormParameter_default_instance)

    def Swap(self, other):
        return _gpudm.BatchNormParameter_Swap(self, other)

    def New(self):
        return _gpudm.BatchNormParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.BatchNormParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.BatchNormParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.BatchNormParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.BatchNormParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.BatchNormParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.BatchNormParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.BatchNormParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.BatchNormParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.BatchNormParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.BatchNormParameter_GetMetadata(self)

    def has_use_global_stats(self):
        return _gpudm.BatchNormParameter_has_use_global_stats(self)

    def clear_use_global_stats(self):
        return _gpudm.BatchNormParameter_clear_use_global_stats(self)
    kUseGlobalStatsFieldNumber = _gpudm.BatchNormParameter_kUseGlobalStatsFieldNumber

    def use_global_stats(self):
        return _gpudm.BatchNormParameter_use_global_stats(self)

    def set_use_global_stats(self, value):
        return _gpudm.BatchNormParameter_set_use_global_stats(self, value)

    def has_moving_average_fraction(self):
        return _gpudm.BatchNormParameter_has_moving_average_fraction(self)

    def clear_moving_average_fraction(self):
        return _gpudm.BatchNormParameter_clear_moving_average_fraction(self)
    kMovingAverageFractionFieldNumber = _gpudm.BatchNormParameter_kMovingAverageFractionFieldNumber

    def moving_average_fraction(self):
        return _gpudm.BatchNormParameter_moving_average_fraction(self)

    def set_moving_average_fraction(self, value):
        return _gpudm.BatchNormParameter_set_moving_average_fraction(self, value)

    def has_eps(self):
        return _gpudm.BatchNormParameter_has_eps(self)

    def clear_eps(self):
        return _gpudm.BatchNormParameter_clear_eps(self)
    kEpsFieldNumber = _gpudm.BatchNormParameter_kEpsFieldNumber

    def eps(self):
        return _gpudm.BatchNormParameter_eps(self)

    def set_eps(self, value):
        return _gpudm.BatchNormParameter_set_eps(self, value)
BatchNormParameter_swigregister = _gpudm.BatchNormParameter_swigregister
BatchNormParameter_swigregister(BatchNormParameter)

def BatchNormParameter_descriptor():
    return _gpudm.BatchNormParameter_descriptor()
BatchNormParameter_descriptor = _gpudm.BatchNormParameter_descriptor

def BatchNormParameter_default_instance():
    return _gpudm.BatchNormParameter_default_instance()
BatchNormParameter_default_instance = _gpudm.BatchNormParameter_default_instance

class ContrastiveLossParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ContrastiveLossParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ContrastiveLossParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ContrastiveLossParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ContrastiveLossParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ContrastiveLossParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ContrastiveLossParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ContrastiveLossParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ContrastiveLossParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ContrastiveLossParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ContrastiveLossParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ContrastiveLossParameter_Swap(self, other)

    def New(self):
        return _gpudm.ContrastiveLossParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ContrastiveLossParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ContrastiveLossParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ContrastiveLossParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ContrastiveLossParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ContrastiveLossParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ContrastiveLossParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ContrastiveLossParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ContrastiveLossParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ContrastiveLossParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ContrastiveLossParameter_GetMetadata(self)

    def has_margin(self):
        return _gpudm.ContrastiveLossParameter_has_margin(self)

    def clear_margin(self):
        return _gpudm.ContrastiveLossParameter_clear_margin(self)
    kMarginFieldNumber = _gpudm.ContrastiveLossParameter_kMarginFieldNumber

    def margin(self):
        return _gpudm.ContrastiveLossParameter_margin(self)

    def set_margin(self, value):
        return _gpudm.ContrastiveLossParameter_set_margin(self, value)

    def has_legacy_version(self):
        return _gpudm.ContrastiveLossParameter_has_legacy_version(self)

    def clear_legacy_version(self):
        return _gpudm.ContrastiveLossParameter_clear_legacy_version(self)
    kLegacyVersionFieldNumber = _gpudm.ContrastiveLossParameter_kLegacyVersionFieldNumber

    def legacy_version(self):
        return _gpudm.ContrastiveLossParameter_legacy_version(self)

    def set_legacy_version(self, value):
        return _gpudm.ContrastiveLossParameter_set_legacy_version(self, value)
ContrastiveLossParameter_swigregister = _gpudm.ContrastiveLossParameter_swigregister
ContrastiveLossParameter_swigregister(ContrastiveLossParameter)

def ContrastiveLossParameter_descriptor():
    return _gpudm.ContrastiveLossParameter_descriptor()
ContrastiveLossParameter_descriptor = _gpudm.ContrastiveLossParameter_descriptor

def ContrastiveLossParameter_default_instance():
    return _gpudm.ContrastiveLossParameter_default_instance()
ContrastiveLossParameter_default_instance = _gpudm.ContrastiveLossParameter_default_instance

class ConvolutionParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConvolutionParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConvolutionParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ConvolutionParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ConvolutionParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ConvolutionParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ConvolutionParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ConvolutionParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ConvolutionParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ConvolutionParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ConvolutionParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ConvolutionParameter_Swap(self, other)

    def New(self):
        return _gpudm.ConvolutionParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ConvolutionParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ConvolutionParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ConvolutionParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ConvolutionParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ConvolutionParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ConvolutionParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ConvolutionParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ConvolutionParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ConvolutionParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ConvolutionParameter_GetMetadata(self)
    DEFAULT = _gpudm.ConvolutionParameter_DEFAULT
    CAFFE = _gpudm.ConvolutionParameter_CAFFE
    CUDNN = _gpudm.ConvolutionParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.ConvolutionParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.ConvolutionParameter_Engine_IsValid)
    Engine_MIN = _gpudm.ConvolutionParameter_Engine_MIN
    Engine_MAX = _gpudm.ConvolutionParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.ConvolutionParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.ConvolutionParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.ConvolutionParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.ConvolutionParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.ConvolutionParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.ConvolutionParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.ConvolutionParameter_Engine_Parse)

    def has_num_output(self):
        return _gpudm.ConvolutionParameter_has_num_output(self)

    def clear_num_output(self):
        return _gpudm.ConvolutionParameter_clear_num_output(self)
    kNumOutputFieldNumber = _gpudm.ConvolutionParameter_kNumOutputFieldNumber

    def num_output(self):
        return _gpudm.ConvolutionParameter_num_output(self)

    def set_num_output(self, value):
        return _gpudm.ConvolutionParameter_set_num_output(self, value)

    def has_bias_term(self):
        return _gpudm.ConvolutionParameter_has_bias_term(self)

    def clear_bias_term(self):
        return _gpudm.ConvolutionParameter_clear_bias_term(self)
    kBiasTermFieldNumber = _gpudm.ConvolutionParameter_kBiasTermFieldNumber

    def bias_term(self):
        return _gpudm.ConvolutionParameter_bias_term(self)

    def set_bias_term(self, value):
        return _gpudm.ConvolutionParameter_set_bias_term(self, value)

    def pad_size(self):
        return _gpudm.ConvolutionParameter_pad_size(self)

    def clear_pad(self):
        return _gpudm.ConvolutionParameter_clear_pad(self)
    kPadFieldNumber = _gpudm.ConvolutionParameter_kPadFieldNumber

    def set_pad(self, index, value):
        return _gpudm.ConvolutionParameter_set_pad(self, index, value)

    def add_pad(self, value):
        return _gpudm.ConvolutionParameter_add_pad(self, value)

    def pad(self, *args):
        return _gpudm.ConvolutionParameter_pad(self, *args)

    def mutable_pad(self):
        return _gpudm.ConvolutionParameter_mutable_pad(self)

    def kernel_size_size(self):
        return _gpudm.ConvolutionParameter_kernel_size_size(self)

    def clear_kernel_size(self):
        return _gpudm.ConvolutionParameter_clear_kernel_size(self)
    kKernelSizeFieldNumber = _gpudm.ConvolutionParameter_kKernelSizeFieldNumber

    def set_kernel_size(self, index, value):
        return _gpudm.ConvolutionParameter_set_kernel_size(self, index, value)

    def add_kernel_size(self, value):
        return _gpudm.ConvolutionParameter_add_kernel_size(self, value)

    def kernel_size(self, *args):
        return _gpudm.ConvolutionParameter_kernel_size(self, *args)

    def mutable_kernel_size(self):
        return _gpudm.ConvolutionParameter_mutable_kernel_size(self)

    def stride_size(self):
        return _gpudm.ConvolutionParameter_stride_size(self)

    def clear_stride(self):
        return _gpudm.ConvolutionParameter_clear_stride(self)
    kStrideFieldNumber = _gpudm.ConvolutionParameter_kStrideFieldNumber

    def set_stride(self, index, value):
        return _gpudm.ConvolutionParameter_set_stride(self, index, value)

    def add_stride(self, value):
        return _gpudm.ConvolutionParameter_add_stride(self, value)

    def stride(self, *args):
        return _gpudm.ConvolutionParameter_stride(self, *args)

    def mutable_stride(self):
        return _gpudm.ConvolutionParameter_mutable_stride(self)

    def has_pad_h(self):
        return _gpudm.ConvolutionParameter_has_pad_h(self)

    def clear_pad_h(self):
        return _gpudm.ConvolutionParameter_clear_pad_h(self)
    kPadHFieldNumber = _gpudm.ConvolutionParameter_kPadHFieldNumber

    def pad_h(self):
        return _gpudm.ConvolutionParameter_pad_h(self)

    def set_pad_h(self, value):
        return _gpudm.ConvolutionParameter_set_pad_h(self, value)

    def has_pad_w(self):
        return _gpudm.ConvolutionParameter_has_pad_w(self)

    def clear_pad_w(self):
        return _gpudm.ConvolutionParameter_clear_pad_w(self)
    kPadWFieldNumber = _gpudm.ConvolutionParameter_kPadWFieldNumber

    def pad_w(self):
        return _gpudm.ConvolutionParameter_pad_w(self)

    def set_pad_w(self, value):
        return _gpudm.ConvolutionParameter_set_pad_w(self, value)

    def has_kernel_h(self):
        return _gpudm.ConvolutionParameter_has_kernel_h(self)

    def clear_kernel_h(self):
        return _gpudm.ConvolutionParameter_clear_kernel_h(self)
    kKernelHFieldNumber = _gpudm.ConvolutionParameter_kKernelHFieldNumber

    def kernel_h(self):
        return _gpudm.ConvolutionParameter_kernel_h(self)

    def set_kernel_h(self, value):
        return _gpudm.ConvolutionParameter_set_kernel_h(self, value)

    def has_kernel_w(self):
        return _gpudm.ConvolutionParameter_has_kernel_w(self)

    def clear_kernel_w(self):
        return _gpudm.ConvolutionParameter_clear_kernel_w(self)
    kKernelWFieldNumber = _gpudm.ConvolutionParameter_kKernelWFieldNumber

    def kernel_w(self):
        return _gpudm.ConvolutionParameter_kernel_w(self)

    def set_kernel_w(self, value):
        return _gpudm.ConvolutionParameter_set_kernel_w(self, value)

    def has_stride_h(self):
        return _gpudm.ConvolutionParameter_has_stride_h(self)

    def clear_stride_h(self):
        return _gpudm.ConvolutionParameter_clear_stride_h(self)
    kStrideHFieldNumber = _gpudm.ConvolutionParameter_kStrideHFieldNumber

    def stride_h(self):
        return _gpudm.ConvolutionParameter_stride_h(self)

    def set_stride_h(self, value):
        return _gpudm.ConvolutionParameter_set_stride_h(self, value)

    def has_stride_w(self):
        return _gpudm.ConvolutionParameter_has_stride_w(self)

    def clear_stride_w(self):
        return _gpudm.ConvolutionParameter_clear_stride_w(self)
    kStrideWFieldNumber = _gpudm.ConvolutionParameter_kStrideWFieldNumber

    def stride_w(self):
        return _gpudm.ConvolutionParameter_stride_w(self)

    def set_stride_w(self, value):
        return _gpudm.ConvolutionParameter_set_stride_w(self, value)

    def has_group(self):
        return _gpudm.ConvolutionParameter_has_group(self)

    def clear_group(self):
        return _gpudm.ConvolutionParameter_clear_group(self)
    kGroupFieldNumber = _gpudm.ConvolutionParameter_kGroupFieldNumber

    def group(self):
        return _gpudm.ConvolutionParameter_group(self)

    def set_group(self, value):
        return _gpudm.ConvolutionParameter_set_group(self, value)

    def has_weight_filler(self):
        return _gpudm.ConvolutionParameter_has_weight_filler(self)

    def clear_weight_filler(self):
        return _gpudm.ConvolutionParameter_clear_weight_filler(self)
    kWeightFillerFieldNumber = _gpudm.ConvolutionParameter_kWeightFillerFieldNumber

    def weight_filler(self):
        return _gpudm.ConvolutionParameter_weight_filler(self)

    def mutable_weight_filler(self):
        return _gpudm.ConvolutionParameter_mutable_weight_filler(self)

    def release_weight_filler(self):
        return _gpudm.ConvolutionParameter_release_weight_filler(self)

    def set_allocated_weight_filler(self, weight_filler):
        return _gpudm.ConvolutionParameter_set_allocated_weight_filler(self, weight_filler)

    def has_bias_filler(self):
        return _gpudm.ConvolutionParameter_has_bias_filler(self)

    def clear_bias_filler(self):
        return _gpudm.ConvolutionParameter_clear_bias_filler(self)
    kBiasFillerFieldNumber = _gpudm.ConvolutionParameter_kBiasFillerFieldNumber

    def bias_filler(self):
        return _gpudm.ConvolutionParameter_bias_filler(self)

    def mutable_bias_filler(self):
        return _gpudm.ConvolutionParameter_mutable_bias_filler(self)

    def release_bias_filler(self):
        return _gpudm.ConvolutionParameter_release_bias_filler(self)

    def set_allocated_bias_filler(self, bias_filler):
        return _gpudm.ConvolutionParameter_set_allocated_bias_filler(self, bias_filler)

    def has_engine(self):
        return _gpudm.ConvolutionParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.ConvolutionParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.ConvolutionParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.ConvolutionParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.ConvolutionParameter_set_engine(self, value)

    def has_axis(self):
        return _gpudm.ConvolutionParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.ConvolutionParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.ConvolutionParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.ConvolutionParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.ConvolutionParameter_set_axis(self, value)

    def has_force_nd_im2col(self):
        return _gpudm.ConvolutionParameter_has_force_nd_im2col(self)

    def clear_force_nd_im2col(self):
        return _gpudm.ConvolutionParameter_clear_force_nd_im2col(self)
    kForceNdIm2ColFieldNumber = _gpudm.ConvolutionParameter_kForceNdIm2ColFieldNumber

    def force_nd_im2col(self):
        return _gpudm.ConvolutionParameter_force_nd_im2col(self)

    def set_force_nd_im2col(self, value):
        return _gpudm.ConvolutionParameter_set_force_nd_im2col(self, value)
ConvolutionParameter_swigregister = _gpudm.ConvolutionParameter_swigregister
ConvolutionParameter_swigregister(ConvolutionParameter)

def ConvolutionParameter_descriptor():
    return _gpudm.ConvolutionParameter_descriptor()
ConvolutionParameter_descriptor = _gpudm.ConvolutionParameter_descriptor

def ConvolutionParameter_default_instance():
    return _gpudm.ConvolutionParameter_default_instance()
ConvolutionParameter_default_instance = _gpudm.ConvolutionParameter_default_instance

class DataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_DataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_DataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.DataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.DataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.DataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.DataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.DataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.DataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.DataParameter_Swap(self, other)

    def New(self):
        return _gpudm.DataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.DataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.DataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.DataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.DataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.DataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.DataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.DataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.DataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.DataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.DataParameter_GetMetadata(self)
    LEVELDB = _gpudm.DataParameter_LEVELDB
    LMDB = _gpudm.DataParameter_LMDB
    __swig_getmethods__["DB_IsValid"] = lambda x: _gpudm.DataParameter_DB_IsValid
    if _newclass:
        DB_IsValid = staticmethod(_gpudm.DataParameter_DB_IsValid)
    DB_MIN = _gpudm.DataParameter_DB_MIN
    DB_MAX = _gpudm.DataParameter_DB_MAX
    DB_ARRAYSIZE = _gpudm.DataParameter_DB_ARRAYSIZE
    __swig_getmethods__["DB_descriptor"] = lambda x: _gpudm.DataParameter_DB_descriptor
    if _newclass:
        DB_descriptor = staticmethod(_gpudm.DataParameter_DB_descriptor)
    __swig_getmethods__["DB_Name"] = lambda x: _gpudm.DataParameter_DB_Name
    if _newclass:
        DB_Name = staticmethod(_gpudm.DataParameter_DB_Name)
    __swig_getmethods__["DB_Parse"] = lambda x: _gpudm.DataParameter_DB_Parse
    if _newclass:
        DB_Parse = staticmethod(_gpudm.DataParameter_DB_Parse)

    def has_source(self):
        return _gpudm.DataParameter_has_source(self)

    def clear_source(self):
        return _gpudm.DataParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.DataParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.DataParameter_source(self)

    def set_source(self, *args):
        return _gpudm.DataParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.DataParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.DataParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.DataParameter_set_allocated_source(self, source)

    def has_batch_size(self):
        return _gpudm.DataParameter_has_batch_size(self)

    def clear_batch_size(self):
        return _gpudm.DataParameter_clear_batch_size(self)
    kBatchSizeFieldNumber = _gpudm.DataParameter_kBatchSizeFieldNumber

    def batch_size(self):
        return _gpudm.DataParameter_batch_size(self)

    def set_batch_size(self, value):
        return _gpudm.DataParameter_set_batch_size(self, value)

    def has_rand_skip(self):
        return _gpudm.DataParameter_has_rand_skip(self)

    def clear_rand_skip(self):
        return _gpudm.DataParameter_clear_rand_skip(self)
    kRandSkipFieldNumber = _gpudm.DataParameter_kRandSkipFieldNumber

    def rand_skip(self):
        return _gpudm.DataParameter_rand_skip(self)

    def set_rand_skip(self, value):
        return _gpudm.DataParameter_set_rand_skip(self, value)

    def has_backend(self):
        return _gpudm.DataParameter_has_backend(self)

    def clear_backend(self):
        return _gpudm.DataParameter_clear_backend(self)
    kBackendFieldNumber = _gpudm.DataParameter_kBackendFieldNumber

    def backend(self):
        return _gpudm.DataParameter_backend(self)

    def set_backend(self, value):
        return _gpudm.DataParameter_set_backend(self, value)

    def has_scale(self):
        return _gpudm.DataParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.DataParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.DataParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.DataParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.DataParameter_set_scale(self, value)

    def has_mean_file(self):
        return _gpudm.DataParameter_has_mean_file(self)

    def clear_mean_file(self):
        return _gpudm.DataParameter_clear_mean_file(self)
    kMeanFileFieldNumber = _gpudm.DataParameter_kMeanFileFieldNumber

    def mean_file(self):
        return _gpudm.DataParameter_mean_file(self)

    def set_mean_file(self, *args):
        return _gpudm.DataParameter_set_mean_file(self, *args)

    def mutable_mean_file(self):
        return _gpudm.DataParameter_mutable_mean_file(self)

    def release_mean_file(self):
        return _gpudm.DataParameter_release_mean_file(self)

    def set_allocated_mean_file(self, mean_file):
        return _gpudm.DataParameter_set_allocated_mean_file(self, mean_file)

    def has_crop_size(self):
        return _gpudm.DataParameter_has_crop_size(self)

    def clear_crop_size(self):
        return _gpudm.DataParameter_clear_crop_size(self)
    kCropSizeFieldNumber = _gpudm.DataParameter_kCropSizeFieldNumber

    def crop_size(self):
        return _gpudm.DataParameter_crop_size(self)

    def set_crop_size(self, value):
        return _gpudm.DataParameter_set_crop_size(self, value)

    def has_mirror(self):
        return _gpudm.DataParameter_has_mirror(self)

    def clear_mirror(self):
        return _gpudm.DataParameter_clear_mirror(self)
    kMirrorFieldNumber = _gpudm.DataParameter_kMirrorFieldNumber

    def mirror(self):
        return _gpudm.DataParameter_mirror(self)

    def set_mirror(self, value):
        return _gpudm.DataParameter_set_mirror(self, value)

    def has_force_encoded_color(self):
        return _gpudm.DataParameter_has_force_encoded_color(self)

    def clear_force_encoded_color(self):
        return _gpudm.DataParameter_clear_force_encoded_color(self)
    kForceEncodedColorFieldNumber = _gpudm.DataParameter_kForceEncodedColorFieldNumber

    def force_encoded_color(self):
        return _gpudm.DataParameter_force_encoded_color(self)

    def set_force_encoded_color(self, value):
        return _gpudm.DataParameter_set_force_encoded_color(self, value)

    def has_prefetch(self):
        return _gpudm.DataParameter_has_prefetch(self)

    def clear_prefetch(self):
        return _gpudm.DataParameter_clear_prefetch(self)
    kPrefetchFieldNumber = _gpudm.DataParameter_kPrefetchFieldNumber

    def prefetch(self):
        return _gpudm.DataParameter_prefetch(self)

    def set_prefetch(self, value):
        return _gpudm.DataParameter_set_prefetch(self, value)
DataParameter_swigregister = _gpudm.DataParameter_swigregister
DataParameter_swigregister(DataParameter)

def DataParameter_descriptor():
    return _gpudm.DataParameter_descriptor()
DataParameter_descriptor = _gpudm.DataParameter_descriptor

def DataParameter_default_instance():
    return _gpudm.DataParameter_default_instance()
DataParameter_default_instance = _gpudm.DataParameter_default_instance

class DropoutParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DropoutParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DropoutParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_DropoutParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_DropoutParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.DropoutParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.DropoutParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.DropoutParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.DropoutParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.DropoutParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.DropoutParameter_default_instance)

    def Swap(self, other):
        return _gpudm.DropoutParameter_Swap(self, other)

    def New(self):
        return _gpudm.DropoutParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.DropoutParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.DropoutParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.DropoutParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.DropoutParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.DropoutParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.DropoutParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.DropoutParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.DropoutParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.DropoutParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.DropoutParameter_GetMetadata(self)

    def has_dropout_ratio(self):
        return _gpudm.DropoutParameter_has_dropout_ratio(self)

    def clear_dropout_ratio(self):
        return _gpudm.DropoutParameter_clear_dropout_ratio(self)
    kDropoutRatioFieldNumber = _gpudm.DropoutParameter_kDropoutRatioFieldNumber

    def dropout_ratio(self):
        return _gpudm.DropoutParameter_dropout_ratio(self)

    def set_dropout_ratio(self, value):
        return _gpudm.DropoutParameter_set_dropout_ratio(self, value)
DropoutParameter_swigregister = _gpudm.DropoutParameter_swigregister
DropoutParameter_swigregister(DropoutParameter)

def DropoutParameter_descriptor():
    return _gpudm.DropoutParameter_descriptor()
DropoutParameter_descriptor = _gpudm.DropoutParameter_descriptor

def DropoutParameter_default_instance():
    return _gpudm.DropoutParameter_default_instance()
DropoutParameter_default_instance = _gpudm.DropoutParameter_default_instance

class DummyDataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DummyDataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DummyDataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_DummyDataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_DummyDataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.DummyDataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.DummyDataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.DummyDataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.DummyDataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.DummyDataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.DummyDataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.DummyDataParameter_Swap(self, other)

    def New(self):
        return _gpudm.DummyDataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.DummyDataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.DummyDataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.DummyDataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.DummyDataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.DummyDataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.DummyDataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.DummyDataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.DummyDataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.DummyDataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.DummyDataParameter_GetMetadata(self)

    def data_filler_size(self):
        return _gpudm.DummyDataParameter_data_filler_size(self)

    def clear_data_filler(self):
        return _gpudm.DummyDataParameter_clear_data_filler(self)
    kDataFillerFieldNumber = _gpudm.DummyDataParameter_kDataFillerFieldNumber

    def add_data_filler(self):
        return _gpudm.DummyDataParameter_add_data_filler(self)

    def data_filler(self, *args):
        return _gpudm.DummyDataParameter_data_filler(self, *args)

    def mutable_data_filler(self, *args):
        return _gpudm.DummyDataParameter_mutable_data_filler(self, *args)

    def shape_size(self):
        return _gpudm.DummyDataParameter_shape_size(self)

    def clear_shape(self):
        return _gpudm.DummyDataParameter_clear_shape(self)
    kShapeFieldNumber = _gpudm.DummyDataParameter_kShapeFieldNumber

    def add_shape(self):
        return _gpudm.DummyDataParameter_add_shape(self)

    def shape(self, *args):
        return _gpudm.DummyDataParameter_shape(self, *args)

    def mutable_shape(self, *args):
        return _gpudm.DummyDataParameter_mutable_shape(self, *args)

    def num_size(self):
        return _gpudm.DummyDataParameter_num_size(self)

    def clear_num(self):
        return _gpudm.DummyDataParameter_clear_num(self)
    kNumFieldNumber = _gpudm.DummyDataParameter_kNumFieldNumber

    def set_num(self, index, value):
        return _gpudm.DummyDataParameter_set_num(self, index, value)

    def add_num(self, value):
        return _gpudm.DummyDataParameter_add_num(self, value)

    def num(self, *args):
        return _gpudm.DummyDataParameter_num(self, *args)

    def mutable_num(self):
        return _gpudm.DummyDataParameter_mutable_num(self)

    def channels_size(self):
        return _gpudm.DummyDataParameter_channels_size(self)

    def clear_channels(self):
        return _gpudm.DummyDataParameter_clear_channels(self)
    kChannelsFieldNumber = _gpudm.DummyDataParameter_kChannelsFieldNumber

    def set_channels(self, index, value):
        return _gpudm.DummyDataParameter_set_channels(self, index, value)

    def add_channels(self, value):
        return _gpudm.DummyDataParameter_add_channels(self, value)

    def channels(self, *args):
        return _gpudm.DummyDataParameter_channels(self, *args)

    def mutable_channels(self):
        return _gpudm.DummyDataParameter_mutable_channels(self)

    def height_size(self):
        return _gpudm.DummyDataParameter_height_size(self)

    def clear_height(self):
        return _gpudm.DummyDataParameter_clear_height(self)
    kHeightFieldNumber = _gpudm.DummyDataParameter_kHeightFieldNumber

    def set_height(self, index, value):
        return _gpudm.DummyDataParameter_set_height(self, index, value)

    def add_height(self, value):
        return _gpudm.DummyDataParameter_add_height(self, value)

    def height(self, *args):
        return _gpudm.DummyDataParameter_height(self, *args)

    def mutable_height(self):
        return _gpudm.DummyDataParameter_mutable_height(self)

    def width_size(self):
        return _gpudm.DummyDataParameter_width_size(self)

    def clear_width(self):
        return _gpudm.DummyDataParameter_clear_width(self)
    kWidthFieldNumber = _gpudm.DummyDataParameter_kWidthFieldNumber

    def set_width(self, index, value):
        return _gpudm.DummyDataParameter_set_width(self, index, value)

    def add_width(self, value):
        return _gpudm.DummyDataParameter_add_width(self, value)

    def width(self, *args):
        return _gpudm.DummyDataParameter_width(self, *args)

    def mutable_width(self):
        return _gpudm.DummyDataParameter_mutable_width(self)
DummyDataParameter_swigregister = _gpudm.DummyDataParameter_swigregister
DummyDataParameter_swigregister(DummyDataParameter)

def DummyDataParameter_descriptor():
    return _gpudm.DummyDataParameter_descriptor()
DummyDataParameter_descriptor = _gpudm.DummyDataParameter_descriptor

def DummyDataParameter_default_instance():
    return _gpudm.DummyDataParameter_default_instance()
DummyDataParameter_default_instance = _gpudm.DummyDataParameter_default_instance

class EltwiseParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, EltwiseParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, EltwiseParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_EltwiseParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_EltwiseParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.EltwiseParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.EltwiseParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.EltwiseParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.EltwiseParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.EltwiseParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.EltwiseParameter_default_instance)

    def Swap(self, other):
        return _gpudm.EltwiseParameter_Swap(self, other)

    def New(self):
        return _gpudm.EltwiseParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.EltwiseParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.EltwiseParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.EltwiseParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.EltwiseParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.EltwiseParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.EltwiseParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.EltwiseParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.EltwiseParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.EltwiseParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.EltwiseParameter_GetMetadata(self)
    PROD = _gpudm.EltwiseParameter_PROD
    SUM = _gpudm.EltwiseParameter_SUM
    MAX = _gpudm.EltwiseParameter_MAX
    __swig_getmethods__["EltwiseOp_IsValid"] = lambda x: _gpudm.EltwiseParameter_EltwiseOp_IsValid
    if _newclass:
        EltwiseOp_IsValid = staticmethod(_gpudm.EltwiseParameter_EltwiseOp_IsValid)
    EltwiseOp_MIN = _gpudm.EltwiseParameter_EltwiseOp_MIN
    EltwiseOp_MAX = _gpudm.EltwiseParameter_EltwiseOp_MAX
    EltwiseOp_ARRAYSIZE = _gpudm.EltwiseParameter_EltwiseOp_ARRAYSIZE
    __swig_getmethods__["EltwiseOp_descriptor"] = lambda x: _gpudm.EltwiseParameter_EltwiseOp_descriptor
    if _newclass:
        EltwiseOp_descriptor = staticmethod(_gpudm.EltwiseParameter_EltwiseOp_descriptor)
    __swig_getmethods__["EltwiseOp_Name"] = lambda x: _gpudm.EltwiseParameter_EltwiseOp_Name
    if _newclass:
        EltwiseOp_Name = staticmethod(_gpudm.EltwiseParameter_EltwiseOp_Name)
    __swig_getmethods__["EltwiseOp_Parse"] = lambda x: _gpudm.EltwiseParameter_EltwiseOp_Parse
    if _newclass:
        EltwiseOp_Parse = staticmethod(_gpudm.EltwiseParameter_EltwiseOp_Parse)

    def has_operation(self):
        return _gpudm.EltwiseParameter_has_operation(self)

    def clear_operation(self):
        return _gpudm.EltwiseParameter_clear_operation(self)
    kOperationFieldNumber = _gpudm.EltwiseParameter_kOperationFieldNumber

    def operation(self):
        return _gpudm.EltwiseParameter_operation(self)

    def set_operation(self, value):
        return _gpudm.EltwiseParameter_set_operation(self, value)

    def coeff_size(self):
        return _gpudm.EltwiseParameter_coeff_size(self)

    def clear_coeff(self):
        return _gpudm.EltwiseParameter_clear_coeff(self)
    kCoeffFieldNumber = _gpudm.EltwiseParameter_kCoeffFieldNumber

    def set_coeff(self, index, value):
        return _gpudm.EltwiseParameter_set_coeff(self, index, value)

    def add_coeff(self, value):
        return _gpudm.EltwiseParameter_add_coeff(self, value)

    def coeff(self, *args):
        return _gpudm.EltwiseParameter_coeff(self, *args)

    def mutable_coeff(self):
        return _gpudm.EltwiseParameter_mutable_coeff(self)

    def has_stable_prod_grad(self):
        return _gpudm.EltwiseParameter_has_stable_prod_grad(self)

    def clear_stable_prod_grad(self):
        return _gpudm.EltwiseParameter_clear_stable_prod_grad(self)
    kStableProdGradFieldNumber = _gpudm.EltwiseParameter_kStableProdGradFieldNumber

    def stable_prod_grad(self):
        return _gpudm.EltwiseParameter_stable_prod_grad(self)

    def set_stable_prod_grad(self, value):
        return _gpudm.EltwiseParameter_set_stable_prod_grad(self, value)
EltwiseParameter_swigregister = _gpudm.EltwiseParameter_swigregister
EltwiseParameter_swigregister(EltwiseParameter)

def EltwiseParameter_descriptor():
    return _gpudm.EltwiseParameter_descriptor()
EltwiseParameter_descriptor = _gpudm.EltwiseParameter_descriptor

def EltwiseParameter_default_instance():
    return _gpudm.EltwiseParameter_default_instance()
EltwiseParameter_default_instance = _gpudm.EltwiseParameter_default_instance

class EmbedParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, EmbedParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, EmbedParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_EmbedParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_EmbedParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.EmbedParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.EmbedParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.EmbedParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.EmbedParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.EmbedParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.EmbedParameter_default_instance)

    def Swap(self, other):
        return _gpudm.EmbedParameter_Swap(self, other)

    def New(self):
        return _gpudm.EmbedParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.EmbedParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.EmbedParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.EmbedParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.EmbedParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.EmbedParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.EmbedParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.EmbedParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.EmbedParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.EmbedParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.EmbedParameter_GetMetadata(self)

    def has_num_output(self):
        return _gpudm.EmbedParameter_has_num_output(self)

    def clear_num_output(self):
        return _gpudm.EmbedParameter_clear_num_output(self)
    kNumOutputFieldNumber = _gpudm.EmbedParameter_kNumOutputFieldNumber

    def num_output(self):
        return _gpudm.EmbedParameter_num_output(self)

    def set_num_output(self, value):
        return _gpudm.EmbedParameter_set_num_output(self, value)

    def has_input_dim(self):
        return _gpudm.EmbedParameter_has_input_dim(self)

    def clear_input_dim(self):
        return _gpudm.EmbedParameter_clear_input_dim(self)
    kInputDimFieldNumber = _gpudm.EmbedParameter_kInputDimFieldNumber

    def input_dim(self):
        return _gpudm.EmbedParameter_input_dim(self)

    def set_input_dim(self, value):
        return _gpudm.EmbedParameter_set_input_dim(self, value)

    def has_bias_term(self):
        return _gpudm.EmbedParameter_has_bias_term(self)

    def clear_bias_term(self):
        return _gpudm.EmbedParameter_clear_bias_term(self)
    kBiasTermFieldNumber = _gpudm.EmbedParameter_kBiasTermFieldNumber

    def bias_term(self):
        return _gpudm.EmbedParameter_bias_term(self)

    def set_bias_term(self, value):
        return _gpudm.EmbedParameter_set_bias_term(self, value)

    def has_weight_filler(self):
        return _gpudm.EmbedParameter_has_weight_filler(self)

    def clear_weight_filler(self):
        return _gpudm.EmbedParameter_clear_weight_filler(self)
    kWeightFillerFieldNumber = _gpudm.EmbedParameter_kWeightFillerFieldNumber

    def weight_filler(self):
        return _gpudm.EmbedParameter_weight_filler(self)

    def mutable_weight_filler(self):
        return _gpudm.EmbedParameter_mutable_weight_filler(self)

    def release_weight_filler(self):
        return _gpudm.EmbedParameter_release_weight_filler(self)

    def set_allocated_weight_filler(self, weight_filler):
        return _gpudm.EmbedParameter_set_allocated_weight_filler(self, weight_filler)

    def has_bias_filler(self):
        return _gpudm.EmbedParameter_has_bias_filler(self)

    def clear_bias_filler(self):
        return _gpudm.EmbedParameter_clear_bias_filler(self)
    kBiasFillerFieldNumber = _gpudm.EmbedParameter_kBiasFillerFieldNumber

    def bias_filler(self):
        return _gpudm.EmbedParameter_bias_filler(self)

    def mutable_bias_filler(self):
        return _gpudm.EmbedParameter_mutable_bias_filler(self)

    def release_bias_filler(self):
        return _gpudm.EmbedParameter_release_bias_filler(self)

    def set_allocated_bias_filler(self, bias_filler):
        return _gpudm.EmbedParameter_set_allocated_bias_filler(self, bias_filler)
EmbedParameter_swigregister = _gpudm.EmbedParameter_swigregister
EmbedParameter_swigregister(EmbedParameter)

def EmbedParameter_descriptor():
    return _gpudm.EmbedParameter_descriptor()
EmbedParameter_descriptor = _gpudm.EmbedParameter_descriptor

def EmbedParameter_default_instance():
    return _gpudm.EmbedParameter_default_instance()
EmbedParameter_default_instance = _gpudm.EmbedParameter_default_instance

class ExpParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExpParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ExpParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ExpParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ExpParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ExpParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ExpParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ExpParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ExpParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ExpParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ExpParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ExpParameter_Swap(self, other)

    def New(self):
        return _gpudm.ExpParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ExpParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ExpParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ExpParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ExpParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ExpParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ExpParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ExpParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ExpParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ExpParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ExpParameter_GetMetadata(self)

    def has_base(self):
        return _gpudm.ExpParameter_has_base(self)

    def clear_base(self):
        return _gpudm.ExpParameter_clear_base(self)
    kBaseFieldNumber = _gpudm.ExpParameter_kBaseFieldNumber

    def base(self):
        return _gpudm.ExpParameter_base(self)

    def set_base(self, value):
        return _gpudm.ExpParameter_set_base(self, value)

    def has_scale(self):
        return _gpudm.ExpParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.ExpParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.ExpParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.ExpParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.ExpParameter_set_scale(self, value)

    def has_shift(self):
        return _gpudm.ExpParameter_has_shift(self)

    def clear_shift(self):
        return _gpudm.ExpParameter_clear_shift(self)
    kShiftFieldNumber = _gpudm.ExpParameter_kShiftFieldNumber

    def shift(self):
        return _gpudm.ExpParameter_shift(self)

    def set_shift(self, value):
        return _gpudm.ExpParameter_set_shift(self, value)
ExpParameter_swigregister = _gpudm.ExpParameter_swigregister
ExpParameter_swigregister(ExpParameter)

def ExpParameter_descriptor():
    return _gpudm.ExpParameter_descriptor()
ExpParameter_descriptor = _gpudm.ExpParameter_descriptor

def ExpParameter_default_instance():
    return _gpudm.ExpParameter_default_instance()
ExpParameter_default_instance = _gpudm.ExpParameter_default_instance

class FlattenParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FlattenParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FlattenParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_FlattenParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_FlattenParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.FlattenParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.FlattenParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.FlattenParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.FlattenParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.FlattenParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.FlattenParameter_default_instance)

    def Swap(self, other):
        return _gpudm.FlattenParameter_Swap(self, other)

    def New(self):
        return _gpudm.FlattenParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.FlattenParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.FlattenParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.FlattenParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.FlattenParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.FlattenParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.FlattenParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.FlattenParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.FlattenParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.FlattenParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.FlattenParameter_GetMetadata(self)

    def has_axis(self):
        return _gpudm.FlattenParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.FlattenParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.FlattenParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.FlattenParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.FlattenParameter_set_axis(self, value)

    def has_end_axis(self):
        return _gpudm.FlattenParameter_has_end_axis(self)

    def clear_end_axis(self):
        return _gpudm.FlattenParameter_clear_end_axis(self)
    kEndAxisFieldNumber = _gpudm.FlattenParameter_kEndAxisFieldNumber

    def end_axis(self):
        return _gpudm.FlattenParameter_end_axis(self)

    def set_end_axis(self, value):
        return _gpudm.FlattenParameter_set_end_axis(self, value)
FlattenParameter_swigregister = _gpudm.FlattenParameter_swigregister
FlattenParameter_swigregister(FlattenParameter)

def FlattenParameter_descriptor():
    return _gpudm.FlattenParameter_descriptor()
FlattenParameter_descriptor = _gpudm.FlattenParameter_descriptor

def FlattenParameter_default_instance():
    return _gpudm.FlattenParameter_default_instance()
FlattenParameter_default_instance = _gpudm.FlattenParameter_default_instance

class HDF5DataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDF5DataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, HDF5DataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_HDF5DataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_HDF5DataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.HDF5DataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.HDF5DataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.HDF5DataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.HDF5DataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.HDF5DataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.HDF5DataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.HDF5DataParameter_Swap(self, other)

    def New(self):
        return _gpudm.HDF5DataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.HDF5DataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.HDF5DataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.HDF5DataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.HDF5DataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.HDF5DataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.HDF5DataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.HDF5DataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.HDF5DataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.HDF5DataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.HDF5DataParameter_GetMetadata(self)

    def has_source(self):
        return _gpudm.HDF5DataParameter_has_source(self)

    def clear_source(self):
        return _gpudm.HDF5DataParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.HDF5DataParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.HDF5DataParameter_source(self)

    def set_source(self, *args):
        return _gpudm.HDF5DataParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.HDF5DataParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.HDF5DataParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.HDF5DataParameter_set_allocated_source(self, source)

    def has_batch_size(self):
        return _gpudm.HDF5DataParameter_has_batch_size(self)

    def clear_batch_size(self):
        return _gpudm.HDF5DataParameter_clear_batch_size(self)
    kBatchSizeFieldNumber = _gpudm.HDF5DataParameter_kBatchSizeFieldNumber

    def batch_size(self):
        return _gpudm.HDF5DataParameter_batch_size(self)

    def set_batch_size(self, value):
        return _gpudm.HDF5DataParameter_set_batch_size(self, value)

    def has_shuffle(self):
        return _gpudm.HDF5DataParameter_has_shuffle(self)

    def clear_shuffle(self):
        return _gpudm.HDF5DataParameter_clear_shuffle(self)
    kShuffleFieldNumber = _gpudm.HDF5DataParameter_kShuffleFieldNumber

    def shuffle(self):
        return _gpudm.HDF5DataParameter_shuffle(self)

    def set_shuffle(self, value):
        return _gpudm.HDF5DataParameter_set_shuffle(self, value)
HDF5DataParameter_swigregister = _gpudm.HDF5DataParameter_swigregister
HDF5DataParameter_swigregister(HDF5DataParameter)

def HDF5DataParameter_descriptor():
    return _gpudm.HDF5DataParameter_descriptor()
HDF5DataParameter_descriptor = _gpudm.HDF5DataParameter_descriptor

def HDF5DataParameter_default_instance():
    return _gpudm.HDF5DataParameter_default_instance()
HDF5DataParameter_default_instance = _gpudm.HDF5DataParameter_default_instance

class HDF5OutputParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDF5OutputParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, HDF5OutputParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_HDF5OutputParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_HDF5OutputParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.HDF5OutputParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.HDF5OutputParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.HDF5OutputParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.HDF5OutputParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.HDF5OutputParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.HDF5OutputParameter_default_instance)

    def Swap(self, other):
        return _gpudm.HDF5OutputParameter_Swap(self, other)

    def New(self):
        return _gpudm.HDF5OutputParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.HDF5OutputParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.HDF5OutputParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.HDF5OutputParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.HDF5OutputParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.HDF5OutputParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.HDF5OutputParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.HDF5OutputParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.HDF5OutputParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.HDF5OutputParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.HDF5OutputParameter_GetMetadata(self)

    def has_file_name(self):
        return _gpudm.HDF5OutputParameter_has_file_name(self)

    def clear_file_name(self):
        return _gpudm.HDF5OutputParameter_clear_file_name(self)
    kFileNameFieldNumber = _gpudm.HDF5OutputParameter_kFileNameFieldNumber

    def file_name(self):
        return _gpudm.HDF5OutputParameter_file_name(self)

    def set_file_name(self, *args):
        return _gpudm.HDF5OutputParameter_set_file_name(self, *args)

    def mutable_file_name(self):
        return _gpudm.HDF5OutputParameter_mutable_file_name(self)

    def release_file_name(self):
        return _gpudm.HDF5OutputParameter_release_file_name(self)

    def set_allocated_file_name(self, file_name):
        return _gpudm.HDF5OutputParameter_set_allocated_file_name(self, file_name)
HDF5OutputParameter_swigregister = _gpudm.HDF5OutputParameter_swigregister
HDF5OutputParameter_swigregister(HDF5OutputParameter)

def HDF5OutputParameter_descriptor():
    return _gpudm.HDF5OutputParameter_descriptor()
HDF5OutputParameter_descriptor = _gpudm.HDF5OutputParameter_descriptor

def HDF5OutputParameter_default_instance():
    return _gpudm.HDF5OutputParameter_default_instance()
HDF5OutputParameter_default_instance = _gpudm.HDF5OutputParameter_default_instance

class HingeLossParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HingeLossParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, HingeLossParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_HingeLossParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_HingeLossParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.HingeLossParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.HingeLossParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.HingeLossParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.HingeLossParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.HingeLossParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.HingeLossParameter_default_instance)

    def Swap(self, other):
        return _gpudm.HingeLossParameter_Swap(self, other)

    def New(self):
        return _gpudm.HingeLossParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.HingeLossParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.HingeLossParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.HingeLossParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.HingeLossParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.HingeLossParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.HingeLossParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.HingeLossParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.HingeLossParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.HingeLossParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.HingeLossParameter_GetMetadata(self)
    L1 = _gpudm.HingeLossParameter_L1
    L2 = _gpudm.HingeLossParameter_L2
    __swig_getmethods__["Norm_IsValid"] = lambda x: _gpudm.HingeLossParameter_Norm_IsValid
    if _newclass:
        Norm_IsValid = staticmethod(_gpudm.HingeLossParameter_Norm_IsValid)
    Norm_MIN = _gpudm.HingeLossParameter_Norm_MIN
    Norm_MAX = _gpudm.HingeLossParameter_Norm_MAX
    Norm_ARRAYSIZE = _gpudm.HingeLossParameter_Norm_ARRAYSIZE
    __swig_getmethods__["Norm_descriptor"] = lambda x: _gpudm.HingeLossParameter_Norm_descriptor
    if _newclass:
        Norm_descriptor = staticmethod(_gpudm.HingeLossParameter_Norm_descriptor)
    __swig_getmethods__["Norm_Name"] = lambda x: _gpudm.HingeLossParameter_Norm_Name
    if _newclass:
        Norm_Name = staticmethod(_gpudm.HingeLossParameter_Norm_Name)
    __swig_getmethods__["Norm_Parse"] = lambda x: _gpudm.HingeLossParameter_Norm_Parse
    if _newclass:
        Norm_Parse = staticmethod(_gpudm.HingeLossParameter_Norm_Parse)

    def has_norm(self):
        return _gpudm.HingeLossParameter_has_norm(self)

    def clear_norm(self):
        return _gpudm.HingeLossParameter_clear_norm(self)
    kNormFieldNumber = _gpudm.HingeLossParameter_kNormFieldNumber

    def norm(self):
        return _gpudm.HingeLossParameter_norm(self)

    def set_norm(self, value):
        return _gpudm.HingeLossParameter_set_norm(self, value)
HingeLossParameter_swigregister = _gpudm.HingeLossParameter_swigregister
HingeLossParameter_swigregister(HingeLossParameter)

def HingeLossParameter_descriptor():
    return _gpudm.HingeLossParameter_descriptor()
HingeLossParameter_descriptor = _gpudm.HingeLossParameter_descriptor

def HingeLossParameter_default_instance():
    return _gpudm.HingeLossParameter_default_instance()
HingeLossParameter_default_instance = _gpudm.HingeLossParameter_default_instance

class ImageDataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ImageDataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ImageDataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ImageDataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ImageDataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ImageDataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ImageDataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ImageDataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ImageDataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ImageDataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ImageDataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ImageDataParameter_Swap(self, other)

    def New(self):
        return _gpudm.ImageDataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ImageDataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ImageDataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ImageDataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ImageDataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ImageDataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ImageDataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ImageDataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ImageDataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ImageDataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ImageDataParameter_GetMetadata(self)

    def has_source(self):
        return _gpudm.ImageDataParameter_has_source(self)

    def clear_source(self):
        return _gpudm.ImageDataParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.ImageDataParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.ImageDataParameter_source(self)

    def set_source(self, *args):
        return _gpudm.ImageDataParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.ImageDataParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.ImageDataParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.ImageDataParameter_set_allocated_source(self, source)

    def has_batch_size(self):
        return _gpudm.ImageDataParameter_has_batch_size(self)

    def clear_batch_size(self):
        return _gpudm.ImageDataParameter_clear_batch_size(self)
    kBatchSizeFieldNumber = _gpudm.ImageDataParameter_kBatchSizeFieldNumber

    def batch_size(self):
        return _gpudm.ImageDataParameter_batch_size(self)

    def set_batch_size(self, value):
        return _gpudm.ImageDataParameter_set_batch_size(self, value)

    def has_rand_skip(self):
        return _gpudm.ImageDataParameter_has_rand_skip(self)

    def clear_rand_skip(self):
        return _gpudm.ImageDataParameter_clear_rand_skip(self)
    kRandSkipFieldNumber = _gpudm.ImageDataParameter_kRandSkipFieldNumber

    def rand_skip(self):
        return _gpudm.ImageDataParameter_rand_skip(self)

    def set_rand_skip(self, value):
        return _gpudm.ImageDataParameter_set_rand_skip(self, value)

    def has_shuffle(self):
        return _gpudm.ImageDataParameter_has_shuffle(self)

    def clear_shuffle(self):
        return _gpudm.ImageDataParameter_clear_shuffle(self)
    kShuffleFieldNumber = _gpudm.ImageDataParameter_kShuffleFieldNumber

    def shuffle(self):
        return _gpudm.ImageDataParameter_shuffle(self)

    def set_shuffle(self, value):
        return _gpudm.ImageDataParameter_set_shuffle(self, value)

    def has_new_height(self):
        return _gpudm.ImageDataParameter_has_new_height(self)

    def clear_new_height(self):
        return _gpudm.ImageDataParameter_clear_new_height(self)
    kNewHeightFieldNumber = _gpudm.ImageDataParameter_kNewHeightFieldNumber

    def new_height(self):
        return _gpudm.ImageDataParameter_new_height(self)

    def set_new_height(self, value):
        return _gpudm.ImageDataParameter_set_new_height(self, value)

    def has_new_width(self):
        return _gpudm.ImageDataParameter_has_new_width(self)

    def clear_new_width(self):
        return _gpudm.ImageDataParameter_clear_new_width(self)
    kNewWidthFieldNumber = _gpudm.ImageDataParameter_kNewWidthFieldNumber

    def new_width(self):
        return _gpudm.ImageDataParameter_new_width(self)

    def set_new_width(self, value):
        return _gpudm.ImageDataParameter_set_new_width(self, value)

    def has_is_color(self):
        return _gpudm.ImageDataParameter_has_is_color(self)

    def clear_is_color(self):
        return _gpudm.ImageDataParameter_clear_is_color(self)
    kIsColorFieldNumber = _gpudm.ImageDataParameter_kIsColorFieldNumber

    def is_color(self):
        return _gpudm.ImageDataParameter_is_color(self)

    def set_is_color(self, value):
        return _gpudm.ImageDataParameter_set_is_color(self, value)

    def has_scale(self):
        return _gpudm.ImageDataParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.ImageDataParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.ImageDataParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.ImageDataParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.ImageDataParameter_set_scale(self, value)

    def has_mean_file(self):
        return _gpudm.ImageDataParameter_has_mean_file(self)

    def clear_mean_file(self):
        return _gpudm.ImageDataParameter_clear_mean_file(self)
    kMeanFileFieldNumber = _gpudm.ImageDataParameter_kMeanFileFieldNumber

    def mean_file(self):
        return _gpudm.ImageDataParameter_mean_file(self)

    def set_mean_file(self, *args):
        return _gpudm.ImageDataParameter_set_mean_file(self, *args)

    def mutable_mean_file(self):
        return _gpudm.ImageDataParameter_mutable_mean_file(self)

    def release_mean_file(self):
        return _gpudm.ImageDataParameter_release_mean_file(self)

    def set_allocated_mean_file(self, mean_file):
        return _gpudm.ImageDataParameter_set_allocated_mean_file(self, mean_file)

    def has_crop_size(self):
        return _gpudm.ImageDataParameter_has_crop_size(self)

    def clear_crop_size(self):
        return _gpudm.ImageDataParameter_clear_crop_size(self)
    kCropSizeFieldNumber = _gpudm.ImageDataParameter_kCropSizeFieldNumber

    def crop_size(self):
        return _gpudm.ImageDataParameter_crop_size(self)

    def set_crop_size(self, value):
        return _gpudm.ImageDataParameter_set_crop_size(self, value)

    def has_mirror(self):
        return _gpudm.ImageDataParameter_has_mirror(self)

    def clear_mirror(self):
        return _gpudm.ImageDataParameter_clear_mirror(self)
    kMirrorFieldNumber = _gpudm.ImageDataParameter_kMirrorFieldNumber

    def mirror(self):
        return _gpudm.ImageDataParameter_mirror(self)

    def set_mirror(self, value):
        return _gpudm.ImageDataParameter_set_mirror(self, value)

    def has_root_folder(self):
        return _gpudm.ImageDataParameter_has_root_folder(self)

    def clear_root_folder(self):
        return _gpudm.ImageDataParameter_clear_root_folder(self)
    kRootFolderFieldNumber = _gpudm.ImageDataParameter_kRootFolderFieldNumber

    def root_folder(self):
        return _gpudm.ImageDataParameter_root_folder(self)

    def set_root_folder(self, *args):
        return _gpudm.ImageDataParameter_set_root_folder(self, *args)

    def mutable_root_folder(self):
        return _gpudm.ImageDataParameter_mutable_root_folder(self)

    def release_root_folder(self):
        return _gpudm.ImageDataParameter_release_root_folder(self)

    def set_allocated_root_folder(self, root_folder):
        return _gpudm.ImageDataParameter_set_allocated_root_folder(self, root_folder)
ImageDataParameter_swigregister = _gpudm.ImageDataParameter_swigregister
ImageDataParameter_swigregister(ImageDataParameter)

def ImageDataParameter_descriptor():
    return _gpudm.ImageDataParameter_descriptor()
ImageDataParameter_descriptor = _gpudm.ImageDataParameter_descriptor

def ImageDataParameter_default_instance():
    return _gpudm.ImageDataParameter_default_instance()
ImageDataParameter_default_instance = _gpudm.ImageDataParameter_default_instance

class InfogainLossParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfogainLossParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, InfogainLossParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_InfogainLossParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_InfogainLossParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.InfogainLossParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.InfogainLossParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.InfogainLossParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.InfogainLossParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.InfogainLossParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.InfogainLossParameter_default_instance)

    def Swap(self, other):
        return _gpudm.InfogainLossParameter_Swap(self, other)

    def New(self):
        return _gpudm.InfogainLossParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.InfogainLossParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.InfogainLossParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.InfogainLossParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.InfogainLossParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.InfogainLossParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.InfogainLossParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.InfogainLossParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.InfogainLossParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.InfogainLossParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.InfogainLossParameter_GetMetadata(self)

    def has_source(self):
        return _gpudm.InfogainLossParameter_has_source(self)

    def clear_source(self):
        return _gpudm.InfogainLossParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.InfogainLossParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.InfogainLossParameter_source(self)

    def set_source(self, *args):
        return _gpudm.InfogainLossParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.InfogainLossParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.InfogainLossParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.InfogainLossParameter_set_allocated_source(self, source)
InfogainLossParameter_swigregister = _gpudm.InfogainLossParameter_swigregister
InfogainLossParameter_swigregister(InfogainLossParameter)

def InfogainLossParameter_descriptor():
    return _gpudm.InfogainLossParameter_descriptor()
InfogainLossParameter_descriptor = _gpudm.InfogainLossParameter_descriptor

def InfogainLossParameter_default_instance():
    return _gpudm.InfogainLossParameter_default_instance()
InfogainLossParameter_default_instance = _gpudm.InfogainLossParameter_default_instance

class InnerProductParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, InnerProductParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, InnerProductParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_InnerProductParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_InnerProductParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.InnerProductParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.InnerProductParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.InnerProductParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.InnerProductParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.InnerProductParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.InnerProductParameter_default_instance)

    def Swap(self, other):
        return _gpudm.InnerProductParameter_Swap(self, other)

    def New(self):
        return _gpudm.InnerProductParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.InnerProductParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.InnerProductParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.InnerProductParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.InnerProductParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.InnerProductParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.InnerProductParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.InnerProductParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.InnerProductParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.InnerProductParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.InnerProductParameter_GetMetadata(self)

    def has_num_output(self):
        return _gpudm.InnerProductParameter_has_num_output(self)

    def clear_num_output(self):
        return _gpudm.InnerProductParameter_clear_num_output(self)
    kNumOutputFieldNumber = _gpudm.InnerProductParameter_kNumOutputFieldNumber

    def num_output(self):
        return _gpudm.InnerProductParameter_num_output(self)

    def set_num_output(self, value):
        return _gpudm.InnerProductParameter_set_num_output(self, value)

    def has_bias_term(self):
        return _gpudm.InnerProductParameter_has_bias_term(self)

    def clear_bias_term(self):
        return _gpudm.InnerProductParameter_clear_bias_term(self)
    kBiasTermFieldNumber = _gpudm.InnerProductParameter_kBiasTermFieldNumber

    def bias_term(self):
        return _gpudm.InnerProductParameter_bias_term(self)

    def set_bias_term(self, value):
        return _gpudm.InnerProductParameter_set_bias_term(self, value)

    def has_weight_filler(self):
        return _gpudm.InnerProductParameter_has_weight_filler(self)

    def clear_weight_filler(self):
        return _gpudm.InnerProductParameter_clear_weight_filler(self)
    kWeightFillerFieldNumber = _gpudm.InnerProductParameter_kWeightFillerFieldNumber

    def weight_filler(self):
        return _gpudm.InnerProductParameter_weight_filler(self)

    def mutable_weight_filler(self):
        return _gpudm.InnerProductParameter_mutable_weight_filler(self)

    def release_weight_filler(self):
        return _gpudm.InnerProductParameter_release_weight_filler(self)

    def set_allocated_weight_filler(self, weight_filler):
        return _gpudm.InnerProductParameter_set_allocated_weight_filler(self, weight_filler)

    def has_bias_filler(self):
        return _gpudm.InnerProductParameter_has_bias_filler(self)

    def clear_bias_filler(self):
        return _gpudm.InnerProductParameter_clear_bias_filler(self)
    kBiasFillerFieldNumber = _gpudm.InnerProductParameter_kBiasFillerFieldNumber

    def bias_filler(self):
        return _gpudm.InnerProductParameter_bias_filler(self)

    def mutable_bias_filler(self):
        return _gpudm.InnerProductParameter_mutable_bias_filler(self)

    def release_bias_filler(self):
        return _gpudm.InnerProductParameter_release_bias_filler(self)

    def set_allocated_bias_filler(self, bias_filler):
        return _gpudm.InnerProductParameter_set_allocated_bias_filler(self, bias_filler)

    def has_axis(self):
        return _gpudm.InnerProductParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.InnerProductParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.InnerProductParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.InnerProductParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.InnerProductParameter_set_axis(self, value)
InnerProductParameter_swigregister = _gpudm.InnerProductParameter_swigregister
InnerProductParameter_swigregister(InnerProductParameter)

def InnerProductParameter_descriptor():
    return _gpudm.InnerProductParameter_descriptor()
InnerProductParameter_descriptor = _gpudm.InnerProductParameter_descriptor

def InnerProductParameter_default_instance():
    return _gpudm.InnerProductParameter_default_instance()
InnerProductParameter_default_instance = _gpudm.InnerProductParameter_default_instance

class LogParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LogParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LogParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_LogParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_LogParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.LogParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.LogParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.LogParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.LogParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.LogParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.LogParameter_default_instance)

    def Swap(self, other):
        return _gpudm.LogParameter_Swap(self, other)

    def New(self):
        return _gpudm.LogParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.LogParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.LogParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.LogParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.LogParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.LogParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.LogParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.LogParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.LogParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.LogParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.LogParameter_GetMetadata(self)

    def has_base(self):
        return _gpudm.LogParameter_has_base(self)

    def clear_base(self):
        return _gpudm.LogParameter_clear_base(self)
    kBaseFieldNumber = _gpudm.LogParameter_kBaseFieldNumber

    def base(self):
        return _gpudm.LogParameter_base(self)

    def set_base(self, value):
        return _gpudm.LogParameter_set_base(self, value)

    def has_scale(self):
        return _gpudm.LogParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.LogParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.LogParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.LogParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.LogParameter_set_scale(self, value)

    def has_shift(self):
        return _gpudm.LogParameter_has_shift(self)

    def clear_shift(self):
        return _gpudm.LogParameter_clear_shift(self)
    kShiftFieldNumber = _gpudm.LogParameter_kShiftFieldNumber

    def shift(self):
        return _gpudm.LogParameter_shift(self)

    def set_shift(self, value):
        return _gpudm.LogParameter_set_shift(self, value)
LogParameter_swigregister = _gpudm.LogParameter_swigregister
LogParameter_swigregister(LogParameter)

def LogParameter_descriptor():
    return _gpudm.LogParameter_descriptor()
LogParameter_descriptor = _gpudm.LogParameter_descriptor

def LogParameter_default_instance():
    return _gpudm.LogParameter_default_instance()
LogParameter_default_instance = _gpudm.LogParameter_default_instance

class LRNParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LRNParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LRNParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_LRNParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_LRNParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.LRNParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.LRNParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.LRNParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.LRNParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.LRNParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.LRNParameter_default_instance)

    def Swap(self, other):
        return _gpudm.LRNParameter_Swap(self, other)

    def New(self):
        return _gpudm.LRNParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.LRNParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.LRNParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.LRNParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.LRNParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.LRNParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.LRNParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.LRNParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.LRNParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.LRNParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.LRNParameter_GetMetadata(self)
    ACROSS_CHANNELS = _gpudm.LRNParameter_ACROSS_CHANNELS
    WITHIN_CHANNEL = _gpudm.LRNParameter_WITHIN_CHANNEL
    __swig_getmethods__["NormRegion_IsValid"] = lambda x: _gpudm.LRNParameter_NormRegion_IsValid
    if _newclass:
        NormRegion_IsValid = staticmethod(_gpudm.LRNParameter_NormRegion_IsValid)
    NormRegion_MIN = _gpudm.LRNParameter_NormRegion_MIN
    NormRegion_MAX = _gpudm.LRNParameter_NormRegion_MAX
    NormRegion_ARRAYSIZE = _gpudm.LRNParameter_NormRegion_ARRAYSIZE
    __swig_getmethods__["NormRegion_descriptor"] = lambda x: _gpudm.LRNParameter_NormRegion_descriptor
    if _newclass:
        NormRegion_descriptor = staticmethod(_gpudm.LRNParameter_NormRegion_descriptor)
    __swig_getmethods__["NormRegion_Name"] = lambda x: _gpudm.LRNParameter_NormRegion_Name
    if _newclass:
        NormRegion_Name = staticmethod(_gpudm.LRNParameter_NormRegion_Name)
    __swig_getmethods__["NormRegion_Parse"] = lambda x: _gpudm.LRNParameter_NormRegion_Parse
    if _newclass:
        NormRegion_Parse = staticmethod(_gpudm.LRNParameter_NormRegion_Parse)
    DEFAULT = _gpudm.LRNParameter_DEFAULT
    CAFFE = _gpudm.LRNParameter_CAFFE
    CUDNN = _gpudm.LRNParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.LRNParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.LRNParameter_Engine_IsValid)
    Engine_MIN = _gpudm.LRNParameter_Engine_MIN
    Engine_MAX = _gpudm.LRNParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.LRNParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.LRNParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.LRNParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.LRNParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.LRNParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.LRNParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.LRNParameter_Engine_Parse)

    def has_local_size(self):
        return _gpudm.LRNParameter_has_local_size(self)

    def clear_local_size(self):
        return _gpudm.LRNParameter_clear_local_size(self)
    kLocalSizeFieldNumber = _gpudm.LRNParameter_kLocalSizeFieldNumber

    def local_size(self):
        return _gpudm.LRNParameter_local_size(self)

    def set_local_size(self, value):
        return _gpudm.LRNParameter_set_local_size(self, value)

    def has_alpha(self):
        return _gpudm.LRNParameter_has_alpha(self)

    def clear_alpha(self):
        return _gpudm.LRNParameter_clear_alpha(self)
    kAlphaFieldNumber = _gpudm.LRNParameter_kAlphaFieldNumber

    def alpha(self):
        return _gpudm.LRNParameter_alpha(self)

    def set_alpha(self, value):
        return _gpudm.LRNParameter_set_alpha(self, value)

    def has_beta(self):
        return _gpudm.LRNParameter_has_beta(self)

    def clear_beta(self):
        return _gpudm.LRNParameter_clear_beta(self)
    kBetaFieldNumber = _gpudm.LRNParameter_kBetaFieldNumber

    def beta(self):
        return _gpudm.LRNParameter_beta(self)

    def set_beta(self, value):
        return _gpudm.LRNParameter_set_beta(self, value)

    def has_norm_region(self):
        return _gpudm.LRNParameter_has_norm_region(self)

    def clear_norm_region(self):
        return _gpudm.LRNParameter_clear_norm_region(self)
    kNormRegionFieldNumber = _gpudm.LRNParameter_kNormRegionFieldNumber

    def norm_region(self):
        return _gpudm.LRNParameter_norm_region(self)

    def set_norm_region(self, value):
        return _gpudm.LRNParameter_set_norm_region(self, value)

    def has_k(self):
        return _gpudm.LRNParameter_has_k(self)

    def clear_k(self):
        return _gpudm.LRNParameter_clear_k(self)
    kKFieldNumber = _gpudm.LRNParameter_kKFieldNumber

    def k(self):
        return _gpudm.LRNParameter_k(self)

    def set_k(self, value):
        return _gpudm.LRNParameter_set_k(self, value)

    def has_engine(self):
        return _gpudm.LRNParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.LRNParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.LRNParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.LRNParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.LRNParameter_set_engine(self, value)
LRNParameter_swigregister = _gpudm.LRNParameter_swigregister
LRNParameter_swigregister(LRNParameter)

def LRNParameter_descriptor():
    return _gpudm.LRNParameter_descriptor()
LRNParameter_descriptor = _gpudm.LRNParameter_descriptor

def LRNParameter_default_instance():
    return _gpudm.LRNParameter_default_instance()
LRNParameter_default_instance = _gpudm.LRNParameter_default_instance

class MemoryDataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, MemoryDataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, MemoryDataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_MemoryDataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_MemoryDataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.MemoryDataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.MemoryDataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.MemoryDataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.MemoryDataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.MemoryDataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.MemoryDataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.MemoryDataParameter_Swap(self, other)

    def New(self):
        return _gpudm.MemoryDataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.MemoryDataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.MemoryDataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.MemoryDataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.MemoryDataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.MemoryDataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.MemoryDataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.MemoryDataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.MemoryDataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.MemoryDataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.MemoryDataParameter_GetMetadata(self)

    def has_batch_size(self):
        return _gpudm.MemoryDataParameter_has_batch_size(self)

    def clear_batch_size(self):
        return _gpudm.MemoryDataParameter_clear_batch_size(self)
    kBatchSizeFieldNumber = _gpudm.MemoryDataParameter_kBatchSizeFieldNumber

    def batch_size(self):
        return _gpudm.MemoryDataParameter_batch_size(self)

    def set_batch_size(self, value):
        return _gpudm.MemoryDataParameter_set_batch_size(self, value)

    def has_channels(self):
        return _gpudm.MemoryDataParameter_has_channels(self)

    def clear_channels(self):
        return _gpudm.MemoryDataParameter_clear_channels(self)
    kChannelsFieldNumber = _gpudm.MemoryDataParameter_kChannelsFieldNumber

    def channels(self):
        return _gpudm.MemoryDataParameter_channels(self)

    def set_channels(self, value):
        return _gpudm.MemoryDataParameter_set_channels(self, value)

    def has_height(self):
        return _gpudm.MemoryDataParameter_has_height(self)

    def clear_height(self):
        return _gpudm.MemoryDataParameter_clear_height(self)
    kHeightFieldNumber = _gpudm.MemoryDataParameter_kHeightFieldNumber

    def height(self):
        return _gpudm.MemoryDataParameter_height(self)

    def set_height(self, value):
        return _gpudm.MemoryDataParameter_set_height(self, value)

    def has_width(self):
        return _gpudm.MemoryDataParameter_has_width(self)

    def clear_width(self):
        return _gpudm.MemoryDataParameter_clear_width(self)
    kWidthFieldNumber = _gpudm.MemoryDataParameter_kWidthFieldNumber

    def width(self):
        return _gpudm.MemoryDataParameter_width(self)

    def set_width(self, value):
        return _gpudm.MemoryDataParameter_set_width(self, value)
MemoryDataParameter_swigregister = _gpudm.MemoryDataParameter_swigregister
MemoryDataParameter_swigregister(MemoryDataParameter)

def MemoryDataParameter_descriptor():
    return _gpudm.MemoryDataParameter_descriptor()
MemoryDataParameter_descriptor = _gpudm.MemoryDataParameter_descriptor

def MemoryDataParameter_default_instance():
    return _gpudm.MemoryDataParameter_default_instance()
MemoryDataParameter_default_instance = _gpudm.MemoryDataParameter_default_instance

class MVNParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, MVNParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, MVNParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_MVNParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_MVNParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.MVNParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.MVNParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.MVNParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.MVNParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.MVNParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.MVNParameter_default_instance)

    def Swap(self, other):
        return _gpudm.MVNParameter_Swap(self, other)

    def New(self):
        return _gpudm.MVNParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.MVNParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.MVNParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.MVNParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.MVNParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.MVNParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.MVNParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.MVNParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.MVNParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.MVNParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.MVNParameter_GetMetadata(self)

    def has_normalize_variance(self):
        return _gpudm.MVNParameter_has_normalize_variance(self)

    def clear_normalize_variance(self):
        return _gpudm.MVNParameter_clear_normalize_variance(self)
    kNormalizeVarianceFieldNumber = _gpudm.MVNParameter_kNormalizeVarianceFieldNumber

    def normalize_variance(self):
        return _gpudm.MVNParameter_normalize_variance(self)

    def set_normalize_variance(self, value):
        return _gpudm.MVNParameter_set_normalize_variance(self, value)

    def has_across_channels(self):
        return _gpudm.MVNParameter_has_across_channels(self)

    def clear_across_channels(self):
        return _gpudm.MVNParameter_clear_across_channels(self)
    kAcrossChannelsFieldNumber = _gpudm.MVNParameter_kAcrossChannelsFieldNumber

    def across_channels(self):
        return _gpudm.MVNParameter_across_channels(self)

    def set_across_channels(self, value):
        return _gpudm.MVNParameter_set_across_channels(self, value)

    def has_eps(self):
        return _gpudm.MVNParameter_has_eps(self)

    def clear_eps(self):
        return _gpudm.MVNParameter_clear_eps(self)
    kEpsFieldNumber = _gpudm.MVNParameter_kEpsFieldNumber

    def eps(self):
        return _gpudm.MVNParameter_eps(self)

    def set_eps(self, value):
        return _gpudm.MVNParameter_set_eps(self, value)
MVNParameter_swigregister = _gpudm.MVNParameter_swigregister
MVNParameter_swigregister(MVNParameter)

def MVNParameter_descriptor():
    return _gpudm.MVNParameter_descriptor()
MVNParameter_descriptor = _gpudm.MVNParameter_descriptor

def MVNParameter_default_instance():
    return _gpudm.MVNParameter_default_instance()
MVNParameter_default_instance = _gpudm.MVNParameter_default_instance

class PoolingParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PoolingParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PoolingParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_PoolingParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_PoolingParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.PoolingParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.PoolingParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.PoolingParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.PoolingParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.PoolingParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.PoolingParameter_default_instance)

    def Swap(self, other):
        return _gpudm.PoolingParameter_Swap(self, other)

    def New(self):
        return _gpudm.PoolingParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.PoolingParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.PoolingParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.PoolingParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.PoolingParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.PoolingParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.PoolingParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.PoolingParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.PoolingParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.PoolingParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.PoolingParameter_GetMetadata(self)
    MAX = _gpudm.PoolingParameter_MAX
    AVE = _gpudm.PoolingParameter_AVE
    STOCHASTIC = _gpudm.PoolingParameter_STOCHASTIC
    __swig_getmethods__["PoolMethod_IsValid"] = lambda x: _gpudm.PoolingParameter_PoolMethod_IsValid
    if _newclass:
        PoolMethod_IsValid = staticmethod(_gpudm.PoolingParameter_PoolMethod_IsValid)
    PoolMethod_MIN = _gpudm.PoolingParameter_PoolMethod_MIN
    PoolMethod_MAX = _gpudm.PoolingParameter_PoolMethod_MAX
    PoolMethod_ARRAYSIZE = _gpudm.PoolingParameter_PoolMethod_ARRAYSIZE
    __swig_getmethods__["PoolMethod_descriptor"] = lambda x: _gpudm.PoolingParameter_PoolMethod_descriptor
    if _newclass:
        PoolMethod_descriptor = staticmethod(_gpudm.PoolingParameter_PoolMethod_descriptor)
    __swig_getmethods__["PoolMethod_Name"] = lambda x: _gpudm.PoolingParameter_PoolMethod_Name
    if _newclass:
        PoolMethod_Name = staticmethod(_gpudm.PoolingParameter_PoolMethod_Name)
    __swig_getmethods__["PoolMethod_Parse"] = lambda x: _gpudm.PoolingParameter_PoolMethod_Parse
    if _newclass:
        PoolMethod_Parse = staticmethod(_gpudm.PoolingParameter_PoolMethod_Parse)
    DEFAULT = _gpudm.PoolingParameter_DEFAULT
    CAFFE = _gpudm.PoolingParameter_CAFFE
    CUDNN = _gpudm.PoolingParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.PoolingParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.PoolingParameter_Engine_IsValid)
    Engine_MIN = _gpudm.PoolingParameter_Engine_MIN
    Engine_MAX = _gpudm.PoolingParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.PoolingParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.PoolingParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.PoolingParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.PoolingParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.PoolingParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.PoolingParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.PoolingParameter_Engine_Parse)

    def has_pool(self):
        return _gpudm.PoolingParameter_has_pool(self)

    def clear_pool(self):
        return _gpudm.PoolingParameter_clear_pool(self)
    kPoolFieldNumber = _gpudm.PoolingParameter_kPoolFieldNumber

    def pool(self):
        return _gpudm.PoolingParameter_pool(self)

    def set_pool(self, value):
        return _gpudm.PoolingParameter_set_pool(self, value)

    def has_pad(self):
        return _gpudm.PoolingParameter_has_pad(self)

    def clear_pad(self):
        return _gpudm.PoolingParameter_clear_pad(self)
    kPadFieldNumber = _gpudm.PoolingParameter_kPadFieldNumber

    def pad(self):
        return _gpudm.PoolingParameter_pad(self)

    def set_pad(self, value):
        return _gpudm.PoolingParameter_set_pad(self, value)

    def has_pad_h(self):
        return _gpudm.PoolingParameter_has_pad_h(self)

    def clear_pad_h(self):
        return _gpudm.PoolingParameter_clear_pad_h(self)
    kPadHFieldNumber = _gpudm.PoolingParameter_kPadHFieldNumber

    def pad_h(self):
        return _gpudm.PoolingParameter_pad_h(self)

    def set_pad_h(self, value):
        return _gpudm.PoolingParameter_set_pad_h(self, value)

    def has_pad_w(self):
        return _gpudm.PoolingParameter_has_pad_w(self)

    def clear_pad_w(self):
        return _gpudm.PoolingParameter_clear_pad_w(self)
    kPadWFieldNumber = _gpudm.PoolingParameter_kPadWFieldNumber

    def pad_w(self):
        return _gpudm.PoolingParameter_pad_w(self)

    def set_pad_w(self, value):
        return _gpudm.PoolingParameter_set_pad_w(self, value)

    def has_kernel_size(self):
        return _gpudm.PoolingParameter_has_kernel_size(self)

    def clear_kernel_size(self):
        return _gpudm.PoolingParameter_clear_kernel_size(self)
    kKernelSizeFieldNumber = _gpudm.PoolingParameter_kKernelSizeFieldNumber

    def kernel_size(self):
        return _gpudm.PoolingParameter_kernel_size(self)

    def set_kernel_size(self, value):
        return _gpudm.PoolingParameter_set_kernel_size(self, value)

    def has_kernel_h(self):
        return _gpudm.PoolingParameter_has_kernel_h(self)

    def clear_kernel_h(self):
        return _gpudm.PoolingParameter_clear_kernel_h(self)
    kKernelHFieldNumber = _gpudm.PoolingParameter_kKernelHFieldNumber

    def kernel_h(self):
        return _gpudm.PoolingParameter_kernel_h(self)

    def set_kernel_h(self, value):
        return _gpudm.PoolingParameter_set_kernel_h(self, value)

    def has_kernel_w(self):
        return _gpudm.PoolingParameter_has_kernel_w(self)

    def clear_kernel_w(self):
        return _gpudm.PoolingParameter_clear_kernel_w(self)
    kKernelWFieldNumber = _gpudm.PoolingParameter_kKernelWFieldNumber

    def kernel_w(self):
        return _gpudm.PoolingParameter_kernel_w(self)

    def set_kernel_w(self, value):
        return _gpudm.PoolingParameter_set_kernel_w(self, value)

    def has_stride(self):
        return _gpudm.PoolingParameter_has_stride(self)

    def clear_stride(self):
        return _gpudm.PoolingParameter_clear_stride(self)
    kStrideFieldNumber = _gpudm.PoolingParameter_kStrideFieldNumber

    def stride(self):
        return _gpudm.PoolingParameter_stride(self)

    def set_stride(self, value):
        return _gpudm.PoolingParameter_set_stride(self, value)

    def has_stride_h(self):
        return _gpudm.PoolingParameter_has_stride_h(self)

    def clear_stride_h(self):
        return _gpudm.PoolingParameter_clear_stride_h(self)
    kStrideHFieldNumber = _gpudm.PoolingParameter_kStrideHFieldNumber

    def stride_h(self):
        return _gpudm.PoolingParameter_stride_h(self)

    def set_stride_h(self, value):
        return _gpudm.PoolingParameter_set_stride_h(self, value)

    def has_stride_w(self):
        return _gpudm.PoolingParameter_has_stride_w(self)

    def clear_stride_w(self):
        return _gpudm.PoolingParameter_clear_stride_w(self)
    kStrideWFieldNumber = _gpudm.PoolingParameter_kStrideWFieldNumber

    def stride_w(self):
        return _gpudm.PoolingParameter_stride_w(self)

    def set_stride_w(self, value):
        return _gpudm.PoolingParameter_set_stride_w(self, value)

    def has_engine(self):
        return _gpudm.PoolingParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.PoolingParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.PoolingParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.PoolingParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.PoolingParameter_set_engine(self, value)

    def has_global_pooling(self):
        return _gpudm.PoolingParameter_has_global_pooling(self)

    def clear_global_pooling(self):
        return _gpudm.PoolingParameter_clear_global_pooling(self)
    kGlobalPoolingFieldNumber = _gpudm.PoolingParameter_kGlobalPoolingFieldNumber

    def global_pooling(self):
        return _gpudm.PoolingParameter_global_pooling(self)

    def set_global_pooling(self, value):
        return _gpudm.PoolingParameter_set_global_pooling(self, value)
PoolingParameter_swigregister = _gpudm.PoolingParameter_swigregister
PoolingParameter_swigregister(PoolingParameter)

def PoolingParameter_descriptor():
    return _gpudm.PoolingParameter_descriptor()
PoolingParameter_descriptor = _gpudm.PoolingParameter_descriptor

def PoolingParameter_default_instance():
    return _gpudm.PoolingParameter_default_instance()
PoolingParameter_default_instance = _gpudm.PoolingParameter_default_instance

class PowerParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PowerParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PowerParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_PowerParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_PowerParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.PowerParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.PowerParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.PowerParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.PowerParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.PowerParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.PowerParameter_default_instance)

    def Swap(self, other):
        return _gpudm.PowerParameter_Swap(self, other)

    def New(self):
        return _gpudm.PowerParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.PowerParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.PowerParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.PowerParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.PowerParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.PowerParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.PowerParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.PowerParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.PowerParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.PowerParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.PowerParameter_GetMetadata(self)

    def has_power(self):
        return _gpudm.PowerParameter_has_power(self)

    def clear_power(self):
        return _gpudm.PowerParameter_clear_power(self)
    kPowerFieldNumber = _gpudm.PowerParameter_kPowerFieldNumber

    def power(self):
        return _gpudm.PowerParameter_power(self)

    def set_power(self, value):
        return _gpudm.PowerParameter_set_power(self, value)

    def has_scale(self):
        return _gpudm.PowerParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.PowerParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.PowerParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.PowerParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.PowerParameter_set_scale(self, value)

    def has_shift(self):
        return _gpudm.PowerParameter_has_shift(self)

    def clear_shift(self):
        return _gpudm.PowerParameter_clear_shift(self)
    kShiftFieldNumber = _gpudm.PowerParameter_kShiftFieldNumber

    def shift(self):
        return _gpudm.PowerParameter_shift(self)

    def set_shift(self, value):
        return _gpudm.PowerParameter_set_shift(self, value)
PowerParameter_swigregister = _gpudm.PowerParameter_swigregister
PowerParameter_swigregister(PowerParameter)

def PowerParameter_descriptor():
    return _gpudm.PowerParameter_descriptor()
PowerParameter_descriptor = _gpudm.PowerParameter_descriptor

def PowerParameter_default_instance():
    return _gpudm.PowerParameter_default_instance()
PowerParameter_default_instance = _gpudm.PowerParameter_default_instance

class PythonParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PythonParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PythonParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_PythonParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_PythonParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.PythonParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.PythonParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.PythonParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.PythonParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.PythonParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.PythonParameter_default_instance)

    def Swap(self, other):
        return _gpudm.PythonParameter_Swap(self, other)

    def New(self):
        return _gpudm.PythonParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.PythonParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.PythonParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.PythonParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.PythonParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.PythonParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.PythonParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.PythonParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.PythonParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.PythonParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.PythonParameter_GetMetadata(self)

    def has_module(self):
        return _gpudm.PythonParameter_has_module(self)

    def clear_module(self):
        return _gpudm.PythonParameter_clear_module(self)
    kModuleFieldNumber = _gpudm.PythonParameter_kModuleFieldNumber

    def module(self):
        return _gpudm.PythonParameter_module(self)

    def set_module(self, *args):
        return _gpudm.PythonParameter_set_module(self, *args)

    def mutable_module(self):
        return _gpudm.PythonParameter_mutable_module(self)

    def release_module(self):
        return _gpudm.PythonParameter_release_module(self)

    def set_allocated_module(self, module):
        return _gpudm.PythonParameter_set_allocated_module(self, module)

    def has_layer(self):
        return _gpudm.PythonParameter_has_layer(self)

    def clear_layer(self):
        return _gpudm.PythonParameter_clear_layer(self)
    kLayerFieldNumber = _gpudm.PythonParameter_kLayerFieldNumber

    def layer(self):
        return _gpudm.PythonParameter_layer(self)

    def set_layer(self, *args):
        return _gpudm.PythonParameter_set_layer(self, *args)

    def mutable_layer(self):
        return _gpudm.PythonParameter_mutable_layer(self)

    def release_layer(self):
        return _gpudm.PythonParameter_release_layer(self)

    def set_allocated_layer(self, layer):
        return _gpudm.PythonParameter_set_allocated_layer(self, layer)

    def has_param_str(self):
        return _gpudm.PythonParameter_has_param_str(self)

    def clear_param_str(self):
        return _gpudm.PythonParameter_clear_param_str(self)
    kParamStrFieldNumber = _gpudm.PythonParameter_kParamStrFieldNumber

    def param_str(self):
        return _gpudm.PythonParameter_param_str(self)

    def set_param_str(self, *args):
        return _gpudm.PythonParameter_set_param_str(self, *args)

    def mutable_param_str(self):
        return _gpudm.PythonParameter_mutable_param_str(self)

    def release_param_str(self):
        return _gpudm.PythonParameter_release_param_str(self)

    def set_allocated_param_str(self, param_str):
        return _gpudm.PythonParameter_set_allocated_param_str(self, param_str)

    def has_share_in_parallel(self):
        return _gpudm.PythonParameter_has_share_in_parallel(self)

    def clear_share_in_parallel(self):
        return _gpudm.PythonParameter_clear_share_in_parallel(self)
    kShareInParallelFieldNumber = _gpudm.PythonParameter_kShareInParallelFieldNumber

    def share_in_parallel(self):
        return _gpudm.PythonParameter_share_in_parallel(self)

    def set_share_in_parallel(self, value):
        return _gpudm.PythonParameter_set_share_in_parallel(self, value)
PythonParameter_swigregister = _gpudm.PythonParameter_swigregister
PythonParameter_swigregister(PythonParameter)

def PythonParameter_descriptor():
    return _gpudm.PythonParameter_descriptor()
PythonParameter_descriptor = _gpudm.PythonParameter_descriptor

def PythonParameter_default_instance():
    return _gpudm.PythonParameter_default_instance()
PythonParameter_default_instance = _gpudm.PythonParameter_default_instance

class ReductionParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReductionParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ReductionParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ReductionParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ReductionParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ReductionParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ReductionParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ReductionParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ReductionParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ReductionParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ReductionParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ReductionParameter_Swap(self, other)

    def New(self):
        return _gpudm.ReductionParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ReductionParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ReductionParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ReductionParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ReductionParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ReductionParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ReductionParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ReductionParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ReductionParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ReductionParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ReductionParameter_GetMetadata(self)
    SUM = _gpudm.ReductionParameter_SUM
    ASUM = _gpudm.ReductionParameter_ASUM
    SUMSQ = _gpudm.ReductionParameter_SUMSQ
    MEAN = _gpudm.ReductionParameter_MEAN
    __swig_getmethods__["ReductionOp_IsValid"] = lambda x: _gpudm.ReductionParameter_ReductionOp_IsValid
    if _newclass:
        ReductionOp_IsValid = staticmethod(_gpudm.ReductionParameter_ReductionOp_IsValid)
    ReductionOp_MIN = _gpudm.ReductionParameter_ReductionOp_MIN
    ReductionOp_MAX = _gpudm.ReductionParameter_ReductionOp_MAX
    ReductionOp_ARRAYSIZE = _gpudm.ReductionParameter_ReductionOp_ARRAYSIZE
    __swig_getmethods__["ReductionOp_descriptor"] = lambda x: _gpudm.ReductionParameter_ReductionOp_descriptor
    if _newclass:
        ReductionOp_descriptor = staticmethod(_gpudm.ReductionParameter_ReductionOp_descriptor)
    __swig_getmethods__["ReductionOp_Name"] = lambda x: _gpudm.ReductionParameter_ReductionOp_Name
    if _newclass:
        ReductionOp_Name = staticmethod(_gpudm.ReductionParameter_ReductionOp_Name)
    __swig_getmethods__["ReductionOp_Parse"] = lambda x: _gpudm.ReductionParameter_ReductionOp_Parse
    if _newclass:
        ReductionOp_Parse = staticmethod(_gpudm.ReductionParameter_ReductionOp_Parse)

    def has_operation(self):
        return _gpudm.ReductionParameter_has_operation(self)

    def clear_operation(self):
        return _gpudm.ReductionParameter_clear_operation(self)
    kOperationFieldNumber = _gpudm.ReductionParameter_kOperationFieldNumber

    def operation(self):
        return _gpudm.ReductionParameter_operation(self)

    def set_operation(self, value):
        return _gpudm.ReductionParameter_set_operation(self, value)

    def has_axis(self):
        return _gpudm.ReductionParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.ReductionParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.ReductionParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.ReductionParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.ReductionParameter_set_axis(self, value)

    def has_coeff(self):
        return _gpudm.ReductionParameter_has_coeff(self)

    def clear_coeff(self):
        return _gpudm.ReductionParameter_clear_coeff(self)
    kCoeffFieldNumber = _gpudm.ReductionParameter_kCoeffFieldNumber

    def coeff(self):
        return _gpudm.ReductionParameter_coeff(self)

    def set_coeff(self, value):
        return _gpudm.ReductionParameter_set_coeff(self, value)
ReductionParameter_swigregister = _gpudm.ReductionParameter_swigregister
ReductionParameter_swigregister(ReductionParameter)

def ReductionParameter_descriptor():
    return _gpudm.ReductionParameter_descriptor()
ReductionParameter_descriptor = _gpudm.ReductionParameter_descriptor

def ReductionParameter_default_instance():
    return _gpudm.ReductionParameter_default_instance()
ReductionParameter_default_instance = _gpudm.ReductionParameter_default_instance

class ReLUParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReLUParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ReLUParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ReLUParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ReLUParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ReLUParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ReLUParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ReLUParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ReLUParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ReLUParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ReLUParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ReLUParameter_Swap(self, other)

    def New(self):
        return _gpudm.ReLUParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ReLUParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ReLUParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ReLUParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ReLUParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ReLUParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ReLUParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ReLUParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ReLUParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ReLUParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ReLUParameter_GetMetadata(self)
    DEFAULT = _gpudm.ReLUParameter_DEFAULT
    CAFFE = _gpudm.ReLUParameter_CAFFE
    CUDNN = _gpudm.ReLUParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.ReLUParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.ReLUParameter_Engine_IsValid)
    Engine_MIN = _gpudm.ReLUParameter_Engine_MIN
    Engine_MAX = _gpudm.ReLUParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.ReLUParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.ReLUParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.ReLUParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.ReLUParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.ReLUParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.ReLUParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.ReLUParameter_Engine_Parse)

    def has_negative_slope(self):
        return _gpudm.ReLUParameter_has_negative_slope(self)

    def clear_negative_slope(self):
        return _gpudm.ReLUParameter_clear_negative_slope(self)
    kNegativeSlopeFieldNumber = _gpudm.ReLUParameter_kNegativeSlopeFieldNumber

    def negative_slope(self):
        return _gpudm.ReLUParameter_negative_slope(self)

    def set_negative_slope(self, value):
        return _gpudm.ReLUParameter_set_negative_slope(self, value)

    def has_engine(self):
        return _gpudm.ReLUParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.ReLUParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.ReLUParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.ReLUParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.ReLUParameter_set_engine(self, value)
ReLUParameter_swigregister = _gpudm.ReLUParameter_swigregister
ReLUParameter_swigregister(ReLUParameter)

def ReLUParameter_descriptor():
    return _gpudm.ReLUParameter_descriptor()
ReLUParameter_descriptor = _gpudm.ReLUParameter_descriptor

def ReLUParameter_default_instance():
    return _gpudm.ReLUParameter_default_instance()
ReLUParameter_default_instance = _gpudm.ReLUParameter_default_instance

class ReshapeParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReshapeParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ReshapeParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ReshapeParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ReshapeParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ReshapeParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ReshapeParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ReshapeParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ReshapeParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ReshapeParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ReshapeParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ReshapeParameter_Swap(self, other)

    def New(self):
        return _gpudm.ReshapeParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ReshapeParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ReshapeParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ReshapeParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ReshapeParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ReshapeParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ReshapeParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ReshapeParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ReshapeParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ReshapeParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ReshapeParameter_GetMetadata(self)

    def has_shape(self):
        return _gpudm.ReshapeParameter_has_shape(self)

    def clear_shape(self):
        return _gpudm.ReshapeParameter_clear_shape(self)
    kShapeFieldNumber = _gpudm.ReshapeParameter_kShapeFieldNumber

    def shape(self):
        return _gpudm.ReshapeParameter_shape(self)

    def mutable_shape(self):
        return _gpudm.ReshapeParameter_mutable_shape(self)

    def release_shape(self):
        return _gpudm.ReshapeParameter_release_shape(self)

    def set_allocated_shape(self, shape):
        return _gpudm.ReshapeParameter_set_allocated_shape(self, shape)

    def has_axis(self):
        return _gpudm.ReshapeParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.ReshapeParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.ReshapeParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.ReshapeParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.ReshapeParameter_set_axis(self, value)

    def has_num_axes(self):
        return _gpudm.ReshapeParameter_has_num_axes(self)

    def clear_num_axes(self):
        return _gpudm.ReshapeParameter_clear_num_axes(self)
    kNumAxesFieldNumber = _gpudm.ReshapeParameter_kNumAxesFieldNumber

    def num_axes(self):
        return _gpudm.ReshapeParameter_num_axes(self)

    def set_num_axes(self, value):
        return _gpudm.ReshapeParameter_set_num_axes(self, value)
ReshapeParameter_swigregister = _gpudm.ReshapeParameter_swigregister
ReshapeParameter_swigregister(ReshapeParameter)

def ReshapeParameter_descriptor():
    return _gpudm.ReshapeParameter_descriptor()
ReshapeParameter_descriptor = _gpudm.ReshapeParameter_descriptor

def ReshapeParameter_default_instance():
    return _gpudm.ReshapeParameter_default_instance()
ReshapeParameter_default_instance = _gpudm.ReshapeParameter_default_instance

class SigmoidParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SigmoidParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SigmoidParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SigmoidParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SigmoidParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SigmoidParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SigmoidParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SigmoidParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SigmoidParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SigmoidParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SigmoidParameter_default_instance)

    def Swap(self, other):
        return _gpudm.SigmoidParameter_Swap(self, other)

    def New(self):
        return _gpudm.SigmoidParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SigmoidParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SigmoidParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SigmoidParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.SigmoidParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SigmoidParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SigmoidParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SigmoidParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SigmoidParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SigmoidParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SigmoidParameter_GetMetadata(self)
    DEFAULT = _gpudm.SigmoidParameter_DEFAULT
    CAFFE = _gpudm.SigmoidParameter_CAFFE
    CUDNN = _gpudm.SigmoidParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.SigmoidParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.SigmoidParameter_Engine_IsValid)
    Engine_MIN = _gpudm.SigmoidParameter_Engine_MIN
    Engine_MAX = _gpudm.SigmoidParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.SigmoidParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.SigmoidParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.SigmoidParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.SigmoidParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.SigmoidParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.SigmoidParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.SigmoidParameter_Engine_Parse)

    def has_engine(self):
        return _gpudm.SigmoidParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.SigmoidParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.SigmoidParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.SigmoidParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.SigmoidParameter_set_engine(self, value)
SigmoidParameter_swigregister = _gpudm.SigmoidParameter_swigregister
SigmoidParameter_swigregister(SigmoidParameter)

def SigmoidParameter_descriptor():
    return _gpudm.SigmoidParameter_descriptor()
SigmoidParameter_descriptor = _gpudm.SigmoidParameter_descriptor

def SigmoidParameter_default_instance():
    return _gpudm.SigmoidParameter_default_instance()
SigmoidParameter_default_instance = _gpudm.SigmoidParameter_default_instance

class SliceParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SliceParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SliceParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SliceParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SliceParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SliceParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SliceParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SliceParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SliceParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SliceParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SliceParameter_default_instance)

    def Swap(self, other):
        return _gpudm.SliceParameter_Swap(self, other)

    def New(self):
        return _gpudm.SliceParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SliceParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SliceParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SliceParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.SliceParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SliceParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SliceParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SliceParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SliceParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SliceParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SliceParameter_GetMetadata(self)

    def has_axis(self):
        return _gpudm.SliceParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.SliceParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.SliceParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.SliceParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.SliceParameter_set_axis(self, value)

    def slice_point_size(self):
        return _gpudm.SliceParameter_slice_point_size(self)

    def clear_slice_point(self):
        return _gpudm.SliceParameter_clear_slice_point(self)
    kSlicePointFieldNumber = _gpudm.SliceParameter_kSlicePointFieldNumber

    def set_slice_point(self, index, value):
        return _gpudm.SliceParameter_set_slice_point(self, index, value)

    def add_slice_point(self, value):
        return _gpudm.SliceParameter_add_slice_point(self, value)

    def slice_point(self, *args):
        return _gpudm.SliceParameter_slice_point(self, *args)

    def mutable_slice_point(self):
        return _gpudm.SliceParameter_mutable_slice_point(self)

    def has_slice_dim(self):
        return _gpudm.SliceParameter_has_slice_dim(self)

    def clear_slice_dim(self):
        return _gpudm.SliceParameter_clear_slice_dim(self)
    kSliceDimFieldNumber = _gpudm.SliceParameter_kSliceDimFieldNumber

    def slice_dim(self):
        return _gpudm.SliceParameter_slice_dim(self)

    def set_slice_dim(self, value):
        return _gpudm.SliceParameter_set_slice_dim(self, value)
SliceParameter_swigregister = _gpudm.SliceParameter_swigregister
SliceParameter_swigregister(SliceParameter)

def SliceParameter_descriptor():
    return _gpudm.SliceParameter_descriptor()
SliceParameter_descriptor = _gpudm.SliceParameter_descriptor

def SliceParameter_default_instance():
    return _gpudm.SliceParameter_default_instance()
SliceParameter_default_instance = _gpudm.SliceParameter_default_instance

class SoftmaxParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SoftmaxParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SoftmaxParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SoftmaxParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SoftmaxParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SoftmaxParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SoftmaxParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SoftmaxParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SoftmaxParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SoftmaxParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SoftmaxParameter_default_instance)

    def Swap(self, other):
        return _gpudm.SoftmaxParameter_Swap(self, other)

    def New(self):
        return _gpudm.SoftmaxParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SoftmaxParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SoftmaxParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SoftmaxParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.SoftmaxParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SoftmaxParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SoftmaxParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SoftmaxParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SoftmaxParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SoftmaxParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SoftmaxParameter_GetMetadata(self)
    DEFAULT = _gpudm.SoftmaxParameter_DEFAULT
    CAFFE = _gpudm.SoftmaxParameter_CAFFE
    CUDNN = _gpudm.SoftmaxParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.SoftmaxParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.SoftmaxParameter_Engine_IsValid)
    Engine_MIN = _gpudm.SoftmaxParameter_Engine_MIN
    Engine_MAX = _gpudm.SoftmaxParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.SoftmaxParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.SoftmaxParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.SoftmaxParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.SoftmaxParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.SoftmaxParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.SoftmaxParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.SoftmaxParameter_Engine_Parse)

    def has_engine(self):
        return _gpudm.SoftmaxParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.SoftmaxParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.SoftmaxParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.SoftmaxParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.SoftmaxParameter_set_engine(self, value)

    def has_axis(self):
        return _gpudm.SoftmaxParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.SoftmaxParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.SoftmaxParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.SoftmaxParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.SoftmaxParameter_set_axis(self, value)
SoftmaxParameter_swigregister = _gpudm.SoftmaxParameter_swigregister
SoftmaxParameter_swigregister(SoftmaxParameter)

def SoftmaxParameter_descriptor():
    return _gpudm.SoftmaxParameter_descriptor()
SoftmaxParameter_descriptor = _gpudm.SoftmaxParameter_descriptor

def SoftmaxParameter_default_instance():
    return _gpudm.SoftmaxParameter_default_instance()
SoftmaxParameter_default_instance = _gpudm.SoftmaxParameter_default_instance

class TanHParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TanHParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TanHParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_TanHParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_TanHParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.TanHParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.TanHParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.TanHParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.TanHParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.TanHParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.TanHParameter_default_instance)

    def Swap(self, other):
        return _gpudm.TanHParameter_Swap(self, other)

    def New(self):
        return _gpudm.TanHParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.TanHParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.TanHParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.TanHParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.TanHParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.TanHParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.TanHParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.TanHParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.TanHParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.TanHParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.TanHParameter_GetMetadata(self)
    DEFAULT = _gpudm.TanHParameter_DEFAULT
    CAFFE = _gpudm.TanHParameter_CAFFE
    CUDNN = _gpudm.TanHParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.TanHParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.TanHParameter_Engine_IsValid)
    Engine_MIN = _gpudm.TanHParameter_Engine_MIN
    Engine_MAX = _gpudm.TanHParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.TanHParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.TanHParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.TanHParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.TanHParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.TanHParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.TanHParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.TanHParameter_Engine_Parse)

    def has_engine(self):
        return _gpudm.TanHParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.TanHParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.TanHParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.TanHParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.TanHParameter_set_engine(self, value)
TanHParameter_swigregister = _gpudm.TanHParameter_swigregister
TanHParameter_swigregister(TanHParameter)

def TanHParameter_descriptor():
    return _gpudm.TanHParameter_descriptor()
TanHParameter_descriptor = _gpudm.TanHParameter_descriptor

def TanHParameter_default_instance():
    return _gpudm.TanHParameter_default_instance()
TanHParameter_default_instance = _gpudm.TanHParameter_default_instance

class TileParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TileParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TileParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_TileParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_TileParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.TileParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.TileParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.TileParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.TileParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.TileParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.TileParameter_default_instance)

    def Swap(self, other):
        return _gpudm.TileParameter_Swap(self, other)

    def New(self):
        return _gpudm.TileParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.TileParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.TileParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.TileParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.TileParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.TileParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.TileParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.TileParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.TileParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.TileParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.TileParameter_GetMetadata(self)

    def has_axis(self):
        return _gpudm.TileParameter_has_axis(self)

    def clear_axis(self):
        return _gpudm.TileParameter_clear_axis(self)
    kAxisFieldNumber = _gpudm.TileParameter_kAxisFieldNumber

    def axis(self):
        return _gpudm.TileParameter_axis(self)

    def set_axis(self, value):
        return _gpudm.TileParameter_set_axis(self, value)

    def has_tiles(self):
        return _gpudm.TileParameter_has_tiles(self)

    def clear_tiles(self):
        return _gpudm.TileParameter_clear_tiles(self)
    kTilesFieldNumber = _gpudm.TileParameter_kTilesFieldNumber

    def tiles(self):
        return _gpudm.TileParameter_tiles(self)

    def set_tiles(self, value):
        return _gpudm.TileParameter_set_tiles(self, value)
TileParameter_swigregister = _gpudm.TileParameter_swigregister
TileParameter_swigregister(TileParameter)

def TileParameter_descriptor():
    return _gpudm.TileParameter_descriptor()
TileParameter_descriptor = _gpudm.TileParameter_descriptor

def TileParameter_default_instance():
    return _gpudm.TileParameter_default_instance()
TileParameter_default_instance = _gpudm.TileParameter_default_instance

class ThresholdParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ThresholdParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ThresholdParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_ThresholdParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_ThresholdParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.ThresholdParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.ThresholdParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.ThresholdParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.ThresholdParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.ThresholdParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.ThresholdParameter_default_instance)

    def Swap(self, other):
        return _gpudm.ThresholdParameter_Swap(self, other)

    def New(self):
        return _gpudm.ThresholdParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.ThresholdParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.ThresholdParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.ThresholdParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.ThresholdParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.ThresholdParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.ThresholdParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.ThresholdParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.ThresholdParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.ThresholdParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.ThresholdParameter_GetMetadata(self)

    def has_threshold(self):
        return _gpudm.ThresholdParameter_has_threshold(self)

    def clear_threshold(self):
        return _gpudm.ThresholdParameter_clear_threshold(self)
    kThresholdFieldNumber = _gpudm.ThresholdParameter_kThresholdFieldNumber

    def threshold(self):
        return _gpudm.ThresholdParameter_threshold(self)

    def set_threshold(self, value):
        return _gpudm.ThresholdParameter_set_threshold(self, value)
ThresholdParameter_swigregister = _gpudm.ThresholdParameter_swigregister
ThresholdParameter_swigregister(ThresholdParameter)

def ThresholdParameter_descriptor():
    return _gpudm.ThresholdParameter_descriptor()
ThresholdParameter_descriptor = _gpudm.ThresholdParameter_descriptor

def ThresholdParameter_default_instance():
    return _gpudm.ThresholdParameter_default_instance()
ThresholdParameter_default_instance = _gpudm.ThresholdParameter_default_instance

class WindowDataParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, WindowDataParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, WindowDataParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_WindowDataParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_WindowDataParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.WindowDataParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.WindowDataParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.WindowDataParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.WindowDataParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.WindowDataParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.WindowDataParameter_default_instance)

    def Swap(self, other):
        return _gpudm.WindowDataParameter_Swap(self, other)

    def New(self):
        return _gpudm.WindowDataParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.WindowDataParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.WindowDataParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.WindowDataParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.WindowDataParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.WindowDataParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.WindowDataParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.WindowDataParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.WindowDataParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.WindowDataParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.WindowDataParameter_GetMetadata(self)

    def has_source(self):
        return _gpudm.WindowDataParameter_has_source(self)

    def clear_source(self):
        return _gpudm.WindowDataParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.WindowDataParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.WindowDataParameter_source(self)

    def set_source(self, *args):
        return _gpudm.WindowDataParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.WindowDataParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.WindowDataParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.WindowDataParameter_set_allocated_source(self, source)

    def has_scale(self):
        return _gpudm.WindowDataParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.WindowDataParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.WindowDataParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.WindowDataParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.WindowDataParameter_set_scale(self, value)

    def has_mean_file(self):
        return _gpudm.WindowDataParameter_has_mean_file(self)

    def clear_mean_file(self):
        return _gpudm.WindowDataParameter_clear_mean_file(self)
    kMeanFileFieldNumber = _gpudm.WindowDataParameter_kMeanFileFieldNumber

    def mean_file(self):
        return _gpudm.WindowDataParameter_mean_file(self)

    def set_mean_file(self, *args):
        return _gpudm.WindowDataParameter_set_mean_file(self, *args)

    def mutable_mean_file(self):
        return _gpudm.WindowDataParameter_mutable_mean_file(self)

    def release_mean_file(self):
        return _gpudm.WindowDataParameter_release_mean_file(self)

    def set_allocated_mean_file(self, mean_file):
        return _gpudm.WindowDataParameter_set_allocated_mean_file(self, mean_file)

    def has_batch_size(self):
        return _gpudm.WindowDataParameter_has_batch_size(self)

    def clear_batch_size(self):
        return _gpudm.WindowDataParameter_clear_batch_size(self)
    kBatchSizeFieldNumber = _gpudm.WindowDataParameter_kBatchSizeFieldNumber

    def batch_size(self):
        return _gpudm.WindowDataParameter_batch_size(self)

    def set_batch_size(self, value):
        return _gpudm.WindowDataParameter_set_batch_size(self, value)

    def has_crop_size(self):
        return _gpudm.WindowDataParameter_has_crop_size(self)

    def clear_crop_size(self):
        return _gpudm.WindowDataParameter_clear_crop_size(self)
    kCropSizeFieldNumber = _gpudm.WindowDataParameter_kCropSizeFieldNumber

    def crop_size(self):
        return _gpudm.WindowDataParameter_crop_size(self)

    def set_crop_size(self, value):
        return _gpudm.WindowDataParameter_set_crop_size(self, value)

    def has_mirror(self):
        return _gpudm.WindowDataParameter_has_mirror(self)

    def clear_mirror(self):
        return _gpudm.WindowDataParameter_clear_mirror(self)
    kMirrorFieldNumber = _gpudm.WindowDataParameter_kMirrorFieldNumber

    def mirror(self):
        return _gpudm.WindowDataParameter_mirror(self)

    def set_mirror(self, value):
        return _gpudm.WindowDataParameter_set_mirror(self, value)

    def has_fg_threshold(self):
        return _gpudm.WindowDataParameter_has_fg_threshold(self)

    def clear_fg_threshold(self):
        return _gpudm.WindowDataParameter_clear_fg_threshold(self)
    kFgThresholdFieldNumber = _gpudm.WindowDataParameter_kFgThresholdFieldNumber

    def fg_threshold(self):
        return _gpudm.WindowDataParameter_fg_threshold(self)

    def set_fg_threshold(self, value):
        return _gpudm.WindowDataParameter_set_fg_threshold(self, value)

    def has_bg_threshold(self):
        return _gpudm.WindowDataParameter_has_bg_threshold(self)

    def clear_bg_threshold(self):
        return _gpudm.WindowDataParameter_clear_bg_threshold(self)
    kBgThresholdFieldNumber = _gpudm.WindowDataParameter_kBgThresholdFieldNumber

    def bg_threshold(self):
        return _gpudm.WindowDataParameter_bg_threshold(self)

    def set_bg_threshold(self, value):
        return _gpudm.WindowDataParameter_set_bg_threshold(self, value)

    def has_fg_fraction(self):
        return _gpudm.WindowDataParameter_has_fg_fraction(self)

    def clear_fg_fraction(self):
        return _gpudm.WindowDataParameter_clear_fg_fraction(self)
    kFgFractionFieldNumber = _gpudm.WindowDataParameter_kFgFractionFieldNumber

    def fg_fraction(self):
        return _gpudm.WindowDataParameter_fg_fraction(self)

    def set_fg_fraction(self, value):
        return _gpudm.WindowDataParameter_set_fg_fraction(self, value)

    def has_context_pad(self):
        return _gpudm.WindowDataParameter_has_context_pad(self)

    def clear_context_pad(self):
        return _gpudm.WindowDataParameter_clear_context_pad(self)
    kContextPadFieldNumber = _gpudm.WindowDataParameter_kContextPadFieldNumber

    def context_pad(self):
        return _gpudm.WindowDataParameter_context_pad(self)

    def set_context_pad(self, value):
        return _gpudm.WindowDataParameter_set_context_pad(self, value)

    def has_crop_mode(self):
        return _gpudm.WindowDataParameter_has_crop_mode(self)

    def clear_crop_mode(self):
        return _gpudm.WindowDataParameter_clear_crop_mode(self)
    kCropModeFieldNumber = _gpudm.WindowDataParameter_kCropModeFieldNumber

    def crop_mode(self):
        return _gpudm.WindowDataParameter_crop_mode(self)

    def set_crop_mode(self, *args):
        return _gpudm.WindowDataParameter_set_crop_mode(self, *args)

    def mutable_crop_mode(self):
        return _gpudm.WindowDataParameter_mutable_crop_mode(self)

    def release_crop_mode(self):
        return _gpudm.WindowDataParameter_release_crop_mode(self)

    def set_allocated_crop_mode(self, crop_mode):
        return _gpudm.WindowDataParameter_set_allocated_crop_mode(self, crop_mode)

    def has_cache_images(self):
        return _gpudm.WindowDataParameter_has_cache_images(self)

    def clear_cache_images(self):
        return _gpudm.WindowDataParameter_clear_cache_images(self)
    kCacheImagesFieldNumber = _gpudm.WindowDataParameter_kCacheImagesFieldNumber

    def cache_images(self):
        return _gpudm.WindowDataParameter_cache_images(self)

    def set_cache_images(self, value):
        return _gpudm.WindowDataParameter_set_cache_images(self, value)

    def has_root_folder(self):
        return _gpudm.WindowDataParameter_has_root_folder(self)

    def clear_root_folder(self):
        return _gpudm.WindowDataParameter_clear_root_folder(self)
    kRootFolderFieldNumber = _gpudm.WindowDataParameter_kRootFolderFieldNumber

    def root_folder(self):
        return _gpudm.WindowDataParameter_root_folder(self)

    def set_root_folder(self, *args):
        return _gpudm.WindowDataParameter_set_root_folder(self, *args)

    def mutable_root_folder(self):
        return _gpudm.WindowDataParameter_mutable_root_folder(self)

    def release_root_folder(self):
        return _gpudm.WindowDataParameter_release_root_folder(self)

    def set_allocated_root_folder(self, root_folder):
        return _gpudm.WindowDataParameter_set_allocated_root_folder(self, root_folder)
WindowDataParameter_swigregister = _gpudm.WindowDataParameter_swigregister
WindowDataParameter_swigregister(WindowDataParameter)

def WindowDataParameter_descriptor():
    return _gpudm.WindowDataParameter_descriptor()
WindowDataParameter_descriptor = _gpudm.WindowDataParameter_descriptor

def WindowDataParameter_default_instance():
    return _gpudm.WindowDataParameter_default_instance()
WindowDataParameter_default_instance = _gpudm.WindowDataParameter_default_instance

class SPPParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SPPParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SPPParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_SPPParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_SPPParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.SPPParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.SPPParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.SPPParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.SPPParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.SPPParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.SPPParameter_default_instance)

    def Swap(self, other):
        return _gpudm.SPPParameter_Swap(self, other)

    def New(self):
        return _gpudm.SPPParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.SPPParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.SPPParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.SPPParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.SPPParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.SPPParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.SPPParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.SPPParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.SPPParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.SPPParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.SPPParameter_GetMetadata(self)
    MAX = _gpudm.SPPParameter_MAX
    AVE = _gpudm.SPPParameter_AVE
    STOCHASTIC = _gpudm.SPPParameter_STOCHASTIC
    __swig_getmethods__["PoolMethod_IsValid"] = lambda x: _gpudm.SPPParameter_PoolMethod_IsValid
    if _newclass:
        PoolMethod_IsValid = staticmethod(_gpudm.SPPParameter_PoolMethod_IsValid)
    PoolMethod_MIN = _gpudm.SPPParameter_PoolMethod_MIN
    PoolMethod_MAX = _gpudm.SPPParameter_PoolMethod_MAX
    PoolMethod_ARRAYSIZE = _gpudm.SPPParameter_PoolMethod_ARRAYSIZE
    __swig_getmethods__["PoolMethod_descriptor"] = lambda x: _gpudm.SPPParameter_PoolMethod_descriptor
    if _newclass:
        PoolMethod_descriptor = staticmethod(_gpudm.SPPParameter_PoolMethod_descriptor)
    __swig_getmethods__["PoolMethod_Name"] = lambda x: _gpudm.SPPParameter_PoolMethod_Name
    if _newclass:
        PoolMethod_Name = staticmethod(_gpudm.SPPParameter_PoolMethod_Name)
    __swig_getmethods__["PoolMethod_Parse"] = lambda x: _gpudm.SPPParameter_PoolMethod_Parse
    if _newclass:
        PoolMethod_Parse = staticmethod(_gpudm.SPPParameter_PoolMethod_Parse)
    DEFAULT = _gpudm.SPPParameter_DEFAULT
    CAFFE = _gpudm.SPPParameter_CAFFE
    CUDNN = _gpudm.SPPParameter_CUDNN
    __swig_getmethods__["Engine_IsValid"] = lambda x: _gpudm.SPPParameter_Engine_IsValid
    if _newclass:
        Engine_IsValid = staticmethod(_gpudm.SPPParameter_Engine_IsValid)
    Engine_MIN = _gpudm.SPPParameter_Engine_MIN
    Engine_MAX = _gpudm.SPPParameter_Engine_MAX
    Engine_ARRAYSIZE = _gpudm.SPPParameter_Engine_ARRAYSIZE
    __swig_getmethods__["Engine_descriptor"] = lambda x: _gpudm.SPPParameter_Engine_descriptor
    if _newclass:
        Engine_descriptor = staticmethod(_gpudm.SPPParameter_Engine_descriptor)
    __swig_getmethods__["Engine_Name"] = lambda x: _gpudm.SPPParameter_Engine_Name
    if _newclass:
        Engine_Name = staticmethod(_gpudm.SPPParameter_Engine_Name)
    __swig_getmethods__["Engine_Parse"] = lambda x: _gpudm.SPPParameter_Engine_Parse
    if _newclass:
        Engine_Parse = staticmethod(_gpudm.SPPParameter_Engine_Parse)

    def has_pyramid_height(self):
        return _gpudm.SPPParameter_has_pyramid_height(self)

    def clear_pyramid_height(self):
        return _gpudm.SPPParameter_clear_pyramid_height(self)
    kPyramidHeightFieldNumber = _gpudm.SPPParameter_kPyramidHeightFieldNumber

    def pyramid_height(self):
        return _gpudm.SPPParameter_pyramid_height(self)

    def set_pyramid_height(self, value):
        return _gpudm.SPPParameter_set_pyramid_height(self, value)

    def has_pool(self):
        return _gpudm.SPPParameter_has_pool(self)

    def clear_pool(self):
        return _gpudm.SPPParameter_clear_pool(self)
    kPoolFieldNumber = _gpudm.SPPParameter_kPoolFieldNumber

    def pool(self):
        return _gpudm.SPPParameter_pool(self)

    def set_pool(self, value):
        return _gpudm.SPPParameter_set_pool(self, value)

    def has_engine(self):
        return _gpudm.SPPParameter_has_engine(self)

    def clear_engine(self):
        return _gpudm.SPPParameter_clear_engine(self)
    kEngineFieldNumber = _gpudm.SPPParameter_kEngineFieldNumber

    def engine(self):
        return _gpudm.SPPParameter_engine(self)

    def set_engine(self, value):
        return _gpudm.SPPParameter_set_engine(self, value)
SPPParameter_swigregister = _gpudm.SPPParameter_swigregister
SPPParameter_swigregister(SPPParameter)

def SPPParameter_descriptor():
    return _gpudm.SPPParameter_descriptor()
SPPParameter_descriptor = _gpudm.SPPParameter_descriptor

def SPPParameter_default_instance():
    return _gpudm.SPPParameter_default_instance()
SPPParameter_default_instance = _gpudm.SPPParameter_default_instance

class V1LayerParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, V1LayerParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, V1LayerParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_V1LayerParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_V1LayerParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.V1LayerParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.V1LayerParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.V1LayerParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.V1LayerParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.V1LayerParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.V1LayerParameter_default_instance)

    def Swap(self, other):
        return _gpudm.V1LayerParameter_Swap(self, other)

    def New(self):
        return _gpudm.V1LayerParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.V1LayerParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.V1LayerParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.V1LayerParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.V1LayerParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.V1LayerParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.V1LayerParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.V1LayerParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.V1LayerParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.V1LayerParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.V1LayerParameter_GetMetadata(self)
    NONE = _gpudm.V1LayerParameter_NONE
    ABSVAL = _gpudm.V1LayerParameter_ABSVAL
    ACCURACY = _gpudm.V1LayerParameter_ACCURACY
    ARGMAX = _gpudm.V1LayerParameter_ARGMAX
    BNLL = _gpudm.V1LayerParameter_BNLL
    CONCAT = _gpudm.V1LayerParameter_CONCAT
    CONTRASTIVE_LOSS = _gpudm.V1LayerParameter_CONTRASTIVE_LOSS
    CONVOLUTION = _gpudm.V1LayerParameter_CONVOLUTION
    DATA = _gpudm.V1LayerParameter_DATA
    DECONVOLUTION = _gpudm.V1LayerParameter_DECONVOLUTION
    DROPOUT = _gpudm.V1LayerParameter_DROPOUT
    DUMMY_DATA = _gpudm.V1LayerParameter_DUMMY_DATA
    EUCLIDEAN_LOSS = _gpudm.V1LayerParameter_EUCLIDEAN_LOSS
    ELTWISE = _gpudm.V1LayerParameter_ELTWISE
    EXP = _gpudm.V1LayerParameter_EXP
    FLATTEN = _gpudm.V1LayerParameter_FLATTEN
    HDF5_DATA = _gpudm.V1LayerParameter_HDF5_DATA
    HDF5_OUTPUT = _gpudm.V1LayerParameter_HDF5_OUTPUT
    HINGE_LOSS = _gpudm.V1LayerParameter_HINGE_LOSS
    IM2COL = _gpudm.V1LayerParameter_IM2COL
    IMAGE_DATA = _gpudm.V1LayerParameter_IMAGE_DATA
    INFOGAIN_LOSS = _gpudm.V1LayerParameter_INFOGAIN_LOSS
    INNER_PRODUCT = _gpudm.V1LayerParameter_INNER_PRODUCT
    LRN = _gpudm.V1LayerParameter_LRN
    MEMORY_DATA = _gpudm.V1LayerParameter_MEMORY_DATA
    MULTINOMIAL_LOGISTIC_LOSS = _gpudm.V1LayerParameter_MULTINOMIAL_LOGISTIC_LOSS
    MVN = _gpudm.V1LayerParameter_MVN
    POOLING = _gpudm.V1LayerParameter_POOLING
    POWER = _gpudm.V1LayerParameter_POWER
    RELU = _gpudm.V1LayerParameter_RELU
    SIGMOID = _gpudm.V1LayerParameter_SIGMOID
    SIGMOID_CROSS_ENTROPY_LOSS = _gpudm.V1LayerParameter_SIGMOID_CROSS_ENTROPY_LOSS
    SILENCE = _gpudm.V1LayerParameter_SILENCE
    SOFTMAX = _gpudm.V1LayerParameter_SOFTMAX
    SOFTMAX_LOSS = _gpudm.V1LayerParameter_SOFTMAX_LOSS
    SPLIT = _gpudm.V1LayerParameter_SPLIT
    SLICE = _gpudm.V1LayerParameter_SLICE
    TANH = _gpudm.V1LayerParameter_TANH
    WINDOW_DATA = _gpudm.V1LayerParameter_WINDOW_DATA
    THRESHOLD = _gpudm.V1LayerParameter_THRESHOLD
    __swig_getmethods__["LayerType_IsValid"] = lambda x: _gpudm.V1LayerParameter_LayerType_IsValid
    if _newclass:
        LayerType_IsValid = staticmethod(_gpudm.V1LayerParameter_LayerType_IsValid)
    LayerType_MIN = _gpudm.V1LayerParameter_LayerType_MIN
    LayerType_MAX = _gpudm.V1LayerParameter_LayerType_MAX
    LayerType_ARRAYSIZE = _gpudm.V1LayerParameter_LayerType_ARRAYSIZE
    __swig_getmethods__["LayerType_descriptor"] = lambda x: _gpudm.V1LayerParameter_LayerType_descriptor
    if _newclass:
        LayerType_descriptor = staticmethod(_gpudm.V1LayerParameter_LayerType_descriptor)
    __swig_getmethods__["LayerType_Name"] = lambda x: _gpudm.V1LayerParameter_LayerType_Name
    if _newclass:
        LayerType_Name = staticmethod(_gpudm.V1LayerParameter_LayerType_Name)
    __swig_getmethods__["LayerType_Parse"] = lambda x: _gpudm.V1LayerParameter_LayerType_Parse
    if _newclass:
        LayerType_Parse = staticmethod(_gpudm.V1LayerParameter_LayerType_Parse)
    STRICT = _gpudm.V1LayerParameter_STRICT
    PERMISSIVE = _gpudm.V1LayerParameter_PERMISSIVE
    __swig_getmethods__["DimCheckMode_IsValid"] = lambda x: _gpudm.V1LayerParameter_DimCheckMode_IsValid
    if _newclass:
        DimCheckMode_IsValid = staticmethod(_gpudm.V1LayerParameter_DimCheckMode_IsValid)
    DimCheckMode_MIN = _gpudm.V1LayerParameter_DimCheckMode_MIN
    DimCheckMode_MAX = _gpudm.V1LayerParameter_DimCheckMode_MAX
    DimCheckMode_ARRAYSIZE = _gpudm.V1LayerParameter_DimCheckMode_ARRAYSIZE
    __swig_getmethods__["DimCheckMode_descriptor"] = lambda x: _gpudm.V1LayerParameter_DimCheckMode_descriptor
    if _newclass:
        DimCheckMode_descriptor = staticmethod(_gpudm.V1LayerParameter_DimCheckMode_descriptor)
    __swig_getmethods__["DimCheckMode_Name"] = lambda x: _gpudm.V1LayerParameter_DimCheckMode_Name
    if _newclass:
        DimCheckMode_Name = staticmethod(_gpudm.V1LayerParameter_DimCheckMode_Name)
    __swig_getmethods__["DimCheckMode_Parse"] = lambda x: _gpudm.V1LayerParameter_DimCheckMode_Parse
    if _newclass:
        DimCheckMode_Parse = staticmethod(_gpudm.V1LayerParameter_DimCheckMode_Parse)

    def bottom_size(self):
        return _gpudm.V1LayerParameter_bottom_size(self)

    def clear_bottom(self):
        return _gpudm.V1LayerParameter_clear_bottom(self)
    kBottomFieldNumber = _gpudm.V1LayerParameter_kBottomFieldNumber

    def set_bottom(self, *args):
        return _gpudm.V1LayerParameter_set_bottom(self, *args)

    def add_bottom(self, *args):
        return _gpudm.V1LayerParameter_add_bottom(self, *args)

    def bottom(self, *args):
        return _gpudm.V1LayerParameter_bottom(self, *args)

    def mutable_bottom(self, *args):
        return _gpudm.V1LayerParameter_mutable_bottom(self, *args)

    def top_size(self):
        return _gpudm.V1LayerParameter_top_size(self)

    def clear_top(self):
        return _gpudm.V1LayerParameter_clear_top(self)
    kTopFieldNumber = _gpudm.V1LayerParameter_kTopFieldNumber

    def set_top(self, *args):
        return _gpudm.V1LayerParameter_set_top(self, *args)

    def add_top(self, *args):
        return _gpudm.V1LayerParameter_add_top(self, *args)

    def top(self, *args):
        return _gpudm.V1LayerParameter_top(self, *args)

    def mutable_top(self, *args):
        return _gpudm.V1LayerParameter_mutable_top(self, *args)

    def has_name(self):
        return _gpudm.V1LayerParameter_has_name(self)

    def clear_name(self):
        return _gpudm.V1LayerParameter_clear_name(self)
    kNameFieldNumber = _gpudm.V1LayerParameter_kNameFieldNumber

    def name(self):
        return _gpudm.V1LayerParameter_name(self)

    def set_name(self, *args):
        return _gpudm.V1LayerParameter_set_name(self, *args)

    def mutable_name(self):
        return _gpudm.V1LayerParameter_mutable_name(self)

    def release_name(self):
        return _gpudm.V1LayerParameter_release_name(self)

    def set_allocated_name(self, name):
        return _gpudm.V1LayerParameter_set_allocated_name(self, name)

    def include_size(self):
        return _gpudm.V1LayerParameter_include_size(self)

    def clear_include(self):
        return _gpudm.V1LayerParameter_clear_include(self)
    kIncludeFieldNumber = _gpudm.V1LayerParameter_kIncludeFieldNumber

    def add_include(self):
        return _gpudm.V1LayerParameter_add_include(self)

    def include(self, *args):
        return _gpudm.V1LayerParameter_include(self, *args)

    def mutable_include(self, *args):
        return _gpudm.V1LayerParameter_mutable_include(self, *args)

    def exclude_size(self):
        return _gpudm.V1LayerParameter_exclude_size(self)

    def clear_exclude(self):
        return _gpudm.V1LayerParameter_clear_exclude(self)
    kExcludeFieldNumber = _gpudm.V1LayerParameter_kExcludeFieldNumber

    def add_exclude(self):
        return _gpudm.V1LayerParameter_add_exclude(self)

    def exclude(self, *args):
        return _gpudm.V1LayerParameter_exclude(self, *args)

    def mutable_exclude(self, *args):
        return _gpudm.V1LayerParameter_mutable_exclude(self, *args)

    def has_type(self):
        return _gpudm.V1LayerParameter_has_type(self)

    def clear_type(self):
        return _gpudm.V1LayerParameter_clear_type(self)
    kTypeFieldNumber = _gpudm.V1LayerParameter_kTypeFieldNumber

    def type(self):
        return _gpudm.V1LayerParameter_type(self)

    def set_type(self, value):
        return _gpudm.V1LayerParameter_set_type(self, value)

    def blobs_size(self):
        return _gpudm.V1LayerParameter_blobs_size(self)

    def clear_blobs(self):
        return _gpudm.V1LayerParameter_clear_blobs(self)
    kBlobsFieldNumber = _gpudm.V1LayerParameter_kBlobsFieldNumber

    def add_blobs(self):
        return _gpudm.V1LayerParameter_add_blobs(self)

    def blobs(self, *args):
        return _gpudm.V1LayerParameter_blobs(self, *args)

    def mutable_blobs(self, *args):
        return _gpudm.V1LayerParameter_mutable_blobs(self, *args)

    def param_size(self):
        return _gpudm.V1LayerParameter_param_size(self)

    def clear_param(self):
        return _gpudm.V1LayerParameter_clear_param(self)
    kParamFieldNumber = _gpudm.V1LayerParameter_kParamFieldNumber

    def set_param(self, *args):
        return _gpudm.V1LayerParameter_set_param(self, *args)

    def add_param(self, *args):
        return _gpudm.V1LayerParameter_add_param(self, *args)

    def param(self, *args):
        return _gpudm.V1LayerParameter_param(self, *args)

    def mutable_param(self, *args):
        return _gpudm.V1LayerParameter_mutable_param(self, *args)

    def blob_share_mode_size(self):
        return _gpudm.V1LayerParameter_blob_share_mode_size(self)

    def clear_blob_share_mode(self):
        return _gpudm.V1LayerParameter_clear_blob_share_mode(self)
    kBlobShareModeFieldNumber = _gpudm.V1LayerParameter_kBlobShareModeFieldNumber

    def set_blob_share_mode(self, index, value):
        return _gpudm.V1LayerParameter_set_blob_share_mode(self, index, value)

    def add_blob_share_mode(self, value):
        return _gpudm.V1LayerParameter_add_blob_share_mode(self, value)

    def blob_share_mode(self, *args):
        return _gpudm.V1LayerParameter_blob_share_mode(self, *args)

    def mutable_blob_share_mode(self):
        return _gpudm.V1LayerParameter_mutable_blob_share_mode(self)

    def blobs_lr_size(self):
        return _gpudm.V1LayerParameter_blobs_lr_size(self)

    def clear_blobs_lr(self):
        return _gpudm.V1LayerParameter_clear_blobs_lr(self)
    kBlobsLrFieldNumber = _gpudm.V1LayerParameter_kBlobsLrFieldNumber

    def set_blobs_lr(self, index, value):
        return _gpudm.V1LayerParameter_set_blobs_lr(self, index, value)

    def add_blobs_lr(self, value):
        return _gpudm.V1LayerParameter_add_blobs_lr(self, value)

    def blobs_lr(self, *args):
        return _gpudm.V1LayerParameter_blobs_lr(self, *args)

    def mutable_blobs_lr(self):
        return _gpudm.V1LayerParameter_mutable_blobs_lr(self)

    def weight_decay_size(self):
        return _gpudm.V1LayerParameter_weight_decay_size(self)

    def clear_weight_decay(self):
        return _gpudm.V1LayerParameter_clear_weight_decay(self)
    kWeightDecayFieldNumber = _gpudm.V1LayerParameter_kWeightDecayFieldNumber

    def set_weight_decay(self, index, value):
        return _gpudm.V1LayerParameter_set_weight_decay(self, index, value)

    def add_weight_decay(self, value):
        return _gpudm.V1LayerParameter_add_weight_decay(self, value)

    def weight_decay(self, *args):
        return _gpudm.V1LayerParameter_weight_decay(self, *args)

    def mutable_weight_decay(self):
        return _gpudm.V1LayerParameter_mutable_weight_decay(self)

    def loss_weight_size(self):
        return _gpudm.V1LayerParameter_loss_weight_size(self)

    def clear_loss_weight(self):
        return _gpudm.V1LayerParameter_clear_loss_weight(self)
    kLossWeightFieldNumber = _gpudm.V1LayerParameter_kLossWeightFieldNumber

    def set_loss_weight(self, index, value):
        return _gpudm.V1LayerParameter_set_loss_weight(self, index, value)

    def add_loss_weight(self, value):
        return _gpudm.V1LayerParameter_add_loss_weight(self, value)

    def loss_weight(self, *args):
        return _gpudm.V1LayerParameter_loss_weight(self, *args)

    def mutable_loss_weight(self):
        return _gpudm.V1LayerParameter_mutable_loss_weight(self)

    def has_accuracy_param(self):
        return _gpudm.V1LayerParameter_has_accuracy_param(self)

    def clear_accuracy_param(self):
        return _gpudm.V1LayerParameter_clear_accuracy_param(self)
    kAccuracyParamFieldNumber = _gpudm.V1LayerParameter_kAccuracyParamFieldNumber

    def accuracy_param(self):
        return _gpudm.V1LayerParameter_accuracy_param(self)

    def mutable_accuracy_param(self):
        return _gpudm.V1LayerParameter_mutable_accuracy_param(self)

    def release_accuracy_param(self):
        return _gpudm.V1LayerParameter_release_accuracy_param(self)

    def set_allocated_accuracy_param(self, accuracy_param):
        return _gpudm.V1LayerParameter_set_allocated_accuracy_param(self, accuracy_param)

    def has_argmax_param(self):
        return _gpudm.V1LayerParameter_has_argmax_param(self)

    def clear_argmax_param(self):
        return _gpudm.V1LayerParameter_clear_argmax_param(self)
    kArgmaxParamFieldNumber = _gpudm.V1LayerParameter_kArgmaxParamFieldNumber

    def argmax_param(self):
        return _gpudm.V1LayerParameter_argmax_param(self)

    def mutable_argmax_param(self):
        return _gpudm.V1LayerParameter_mutable_argmax_param(self)

    def release_argmax_param(self):
        return _gpudm.V1LayerParameter_release_argmax_param(self)

    def set_allocated_argmax_param(self, argmax_param):
        return _gpudm.V1LayerParameter_set_allocated_argmax_param(self, argmax_param)

    def has_concat_param(self):
        return _gpudm.V1LayerParameter_has_concat_param(self)

    def clear_concat_param(self):
        return _gpudm.V1LayerParameter_clear_concat_param(self)
    kConcatParamFieldNumber = _gpudm.V1LayerParameter_kConcatParamFieldNumber

    def concat_param(self):
        return _gpudm.V1LayerParameter_concat_param(self)

    def mutable_concat_param(self):
        return _gpudm.V1LayerParameter_mutable_concat_param(self)

    def release_concat_param(self):
        return _gpudm.V1LayerParameter_release_concat_param(self)

    def set_allocated_concat_param(self, concat_param):
        return _gpudm.V1LayerParameter_set_allocated_concat_param(self, concat_param)

    def has_contrastive_loss_param(self):
        return _gpudm.V1LayerParameter_has_contrastive_loss_param(self)

    def clear_contrastive_loss_param(self):
        return _gpudm.V1LayerParameter_clear_contrastive_loss_param(self)
    kContrastiveLossParamFieldNumber = _gpudm.V1LayerParameter_kContrastiveLossParamFieldNumber

    def contrastive_loss_param(self):
        return _gpudm.V1LayerParameter_contrastive_loss_param(self)

    def mutable_contrastive_loss_param(self):
        return _gpudm.V1LayerParameter_mutable_contrastive_loss_param(self)

    def release_contrastive_loss_param(self):
        return _gpudm.V1LayerParameter_release_contrastive_loss_param(self)

    def set_allocated_contrastive_loss_param(self, contrastive_loss_param):
        return _gpudm.V1LayerParameter_set_allocated_contrastive_loss_param(self, contrastive_loss_param)

    def has_convolution_param(self):
        return _gpudm.V1LayerParameter_has_convolution_param(self)

    def clear_convolution_param(self):
        return _gpudm.V1LayerParameter_clear_convolution_param(self)
    kConvolutionParamFieldNumber = _gpudm.V1LayerParameter_kConvolutionParamFieldNumber

    def convolution_param(self):
        return _gpudm.V1LayerParameter_convolution_param(self)

    def mutable_convolution_param(self):
        return _gpudm.V1LayerParameter_mutable_convolution_param(self)

    def release_convolution_param(self):
        return _gpudm.V1LayerParameter_release_convolution_param(self)

    def set_allocated_convolution_param(self, convolution_param):
        return _gpudm.V1LayerParameter_set_allocated_convolution_param(self, convolution_param)

    def has_data_param(self):
        return _gpudm.V1LayerParameter_has_data_param(self)

    def clear_data_param(self):
        return _gpudm.V1LayerParameter_clear_data_param(self)
    kDataParamFieldNumber = _gpudm.V1LayerParameter_kDataParamFieldNumber

    def data_param(self):
        return _gpudm.V1LayerParameter_data_param(self)

    def mutable_data_param(self):
        return _gpudm.V1LayerParameter_mutable_data_param(self)

    def release_data_param(self):
        return _gpudm.V1LayerParameter_release_data_param(self)

    def set_allocated_data_param(self, data_param):
        return _gpudm.V1LayerParameter_set_allocated_data_param(self, data_param)

    def has_dropout_param(self):
        return _gpudm.V1LayerParameter_has_dropout_param(self)

    def clear_dropout_param(self):
        return _gpudm.V1LayerParameter_clear_dropout_param(self)
    kDropoutParamFieldNumber = _gpudm.V1LayerParameter_kDropoutParamFieldNumber

    def dropout_param(self):
        return _gpudm.V1LayerParameter_dropout_param(self)

    def mutable_dropout_param(self):
        return _gpudm.V1LayerParameter_mutable_dropout_param(self)

    def release_dropout_param(self):
        return _gpudm.V1LayerParameter_release_dropout_param(self)

    def set_allocated_dropout_param(self, dropout_param):
        return _gpudm.V1LayerParameter_set_allocated_dropout_param(self, dropout_param)

    def has_dummy_data_param(self):
        return _gpudm.V1LayerParameter_has_dummy_data_param(self)

    def clear_dummy_data_param(self):
        return _gpudm.V1LayerParameter_clear_dummy_data_param(self)
    kDummyDataParamFieldNumber = _gpudm.V1LayerParameter_kDummyDataParamFieldNumber

    def dummy_data_param(self):
        return _gpudm.V1LayerParameter_dummy_data_param(self)

    def mutable_dummy_data_param(self):
        return _gpudm.V1LayerParameter_mutable_dummy_data_param(self)

    def release_dummy_data_param(self):
        return _gpudm.V1LayerParameter_release_dummy_data_param(self)

    def set_allocated_dummy_data_param(self, dummy_data_param):
        return _gpudm.V1LayerParameter_set_allocated_dummy_data_param(self, dummy_data_param)

    def has_eltwise_param(self):
        return _gpudm.V1LayerParameter_has_eltwise_param(self)

    def clear_eltwise_param(self):
        return _gpudm.V1LayerParameter_clear_eltwise_param(self)
    kEltwiseParamFieldNumber = _gpudm.V1LayerParameter_kEltwiseParamFieldNumber

    def eltwise_param(self):
        return _gpudm.V1LayerParameter_eltwise_param(self)

    def mutable_eltwise_param(self):
        return _gpudm.V1LayerParameter_mutable_eltwise_param(self)

    def release_eltwise_param(self):
        return _gpudm.V1LayerParameter_release_eltwise_param(self)

    def set_allocated_eltwise_param(self, eltwise_param):
        return _gpudm.V1LayerParameter_set_allocated_eltwise_param(self, eltwise_param)

    def has_exp_param(self):
        return _gpudm.V1LayerParameter_has_exp_param(self)

    def clear_exp_param(self):
        return _gpudm.V1LayerParameter_clear_exp_param(self)
    kExpParamFieldNumber = _gpudm.V1LayerParameter_kExpParamFieldNumber

    def exp_param(self):
        return _gpudm.V1LayerParameter_exp_param(self)

    def mutable_exp_param(self):
        return _gpudm.V1LayerParameter_mutable_exp_param(self)

    def release_exp_param(self):
        return _gpudm.V1LayerParameter_release_exp_param(self)

    def set_allocated_exp_param(self, exp_param):
        return _gpudm.V1LayerParameter_set_allocated_exp_param(self, exp_param)

    def has_hdf5_data_param(self):
        return _gpudm.V1LayerParameter_has_hdf5_data_param(self)

    def clear_hdf5_data_param(self):
        return _gpudm.V1LayerParameter_clear_hdf5_data_param(self)
    kHdf5DataParamFieldNumber = _gpudm.V1LayerParameter_kHdf5DataParamFieldNumber

    def hdf5_data_param(self):
        return _gpudm.V1LayerParameter_hdf5_data_param(self)

    def mutable_hdf5_data_param(self):
        return _gpudm.V1LayerParameter_mutable_hdf5_data_param(self)

    def release_hdf5_data_param(self):
        return _gpudm.V1LayerParameter_release_hdf5_data_param(self)

    def set_allocated_hdf5_data_param(self, hdf5_data_param):
        return _gpudm.V1LayerParameter_set_allocated_hdf5_data_param(self, hdf5_data_param)

    def has_hdf5_output_param(self):
        return _gpudm.V1LayerParameter_has_hdf5_output_param(self)

    def clear_hdf5_output_param(self):
        return _gpudm.V1LayerParameter_clear_hdf5_output_param(self)
    kHdf5OutputParamFieldNumber = _gpudm.V1LayerParameter_kHdf5OutputParamFieldNumber

    def hdf5_output_param(self):
        return _gpudm.V1LayerParameter_hdf5_output_param(self)

    def mutable_hdf5_output_param(self):
        return _gpudm.V1LayerParameter_mutable_hdf5_output_param(self)

    def release_hdf5_output_param(self):
        return _gpudm.V1LayerParameter_release_hdf5_output_param(self)

    def set_allocated_hdf5_output_param(self, hdf5_output_param):
        return _gpudm.V1LayerParameter_set_allocated_hdf5_output_param(self, hdf5_output_param)

    def has_hinge_loss_param(self):
        return _gpudm.V1LayerParameter_has_hinge_loss_param(self)

    def clear_hinge_loss_param(self):
        return _gpudm.V1LayerParameter_clear_hinge_loss_param(self)
    kHingeLossParamFieldNumber = _gpudm.V1LayerParameter_kHingeLossParamFieldNumber

    def hinge_loss_param(self):
        return _gpudm.V1LayerParameter_hinge_loss_param(self)

    def mutable_hinge_loss_param(self):
        return _gpudm.V1LayerParameter_mutable_hinge_loss_param(self)

    def release_hinge_loss_param(self):
        return _gpudm.V1LayerParameter_release_hinge_loss_param(self)

    def set_allocated_hinge_loss_param(self, hinge_loss_param):
        return _gpudm.V1LayerParameter_set_allocated_hinge_loss_param(self, hinge_loss_param)

    def has_image_data_param(self):
        return _gpudm.V1LayerParameter_has_image_data_param(self)

    def clear_image_data_param(self):
        return _gpudm.V1LayerParameter_clear_image_data_param(self)
    kImageDataParamFieldNumber = _gpudm.V1LayerParameter_kImageDataParamFieldNumber

    def image_data_param(self):
        return _gpudm.V1LayerParameter_image_data_param(self)

    def mutable_image_data_param(self):
        return _gpudm.V1LayerParameter_mutable_image_data_param(self)

    def release_image_data_param(self):
        return _gpudm.V1LayerParameter_release_image_data_param(self)

    def set_allocated_image_data_param(self, image_data_param):
        return _gpudm.V1LayerParameter_set_allocated_image_data_param(self, image_data_param)

    def has_infogain_loss_param(self):
        return _gpudm.V1LayerParameter_has_infogain_loss_param(self)

    def clear_infogain_loss_param(self):
        return _gpudm.V1LayerParameter_clear_infogain_loss_param(self)
    kInfogainLossParamFieldNumber = _gpudm.V1LayerParameter_kInfogainLossParamFieldNumber

    def infogain_loss_param(self):
        return _gpudm.V1LayerParameter_infogain_loss_param(self)

    def mutable_infogain_loss_param(self):
        return _gpudm.V1LayerParameter_mutable_infogain_loss_param(self)

    def release_infogain_loss_param(self):
        return _gpudm.V1LayerParameter_release_infogain_loss_param(self)

    def set_allocated_infogain_loss_param(self, infogain_loss_param):
        return _gpudm.V1LayerParameter_set_allocated_infogain_loss_param(self, infogain_loss_param)

    def has_inner_product_param(self):
        return _gpudm.V1LayerParameter_has_inner_product_param(self)

    def clear_inner_product_param(self):
        return _gpudm.V1LayerParameter_clear_inner_product_param(self)
    kInnerProductParamFieldNumber = _gpudm.V1LayerParameter_kInnerProductParamFieldNumber

    def inner_product_param(self):
        return _gpudm.V1LayerParameter_inner_product_param(self)

    def mutable_inner_product_param(self):
        return _gpudm.V1LayerParameter_mutable_inner_product_param(self)

    def release_inner_product_param(self):
        return _gpudm.V1LayerParameter_release_inner_product_param(self)

    def set_allocated_inner_product_param(self, inner_product_param):
        return _gpudm.V1LayerParameter_set_allocated_inner_product_param(self, inner_product_param)

    def has_lrn_param(self):
        return _gpudm.V1LayerParameter_has_lrn_param(self)

    def clear_lrn_param(self):
        return _gpudm.V1LayerParameter_clear_lrn_param(self)
    kLrnParamFieldNumber = _gpudm.V1LayerParameter_kLrnParamFieldNumber

    def lrn_param(self):
        return _gpudm.V1LayerParameter_lrn_param(self)

    def mutable_lrn_param(self):
        return _gpudm.V1LayerParameter_mutable_lrn_param(self)

    def release_lrn_param(self):
        return _gpudm.V1LayerParameter_release_lrn_param(self)

    def set_allocated_lrn_param(self, lrn_param):
        return _gpudm.V1LayerParameter_set_allocated_lrn_param(self, lrn_param)

    def has_memory_data_param(self):
        return _gpudm.V1LayerParameter_has_memory_data_param(self)

    def clear_memory_data_param(self):
        return _gpudm.V1LayerParameter_clear_memory_data_param(self)
    kMemoryDataParamFieldNumber = _gpudm.V1LayerParameter_kMemoryDataParamFieldNumber

    def memory_data_param(self):
        return _gpudm.V1LayerParameter_memory_data_param(self)

    def mutable_memory_data_param(self):
        return _gpudm.V1LayerParameter_mutable_memory_data_param(self)

    def release_memory_data_param(self):
        return _gpudm.V1LayerParameter_release_memory_data_param(self)

    def set_allocated_memory_data_param(self, memory_data_param):
        return _gpudm.V1LayerParameter_set_allocated_memory_data_param(self, memory_data_param)

    def has_mvn_param(self):
        return _gpudm.V1LayerParameter_has_mvn_param(self)

    def clear_mvn_param(self):
        return _gpudm.V1LayerParameter_clear_mvn_param(self)
    kMvnParamFieldNumber = _gpudm.V1LayerParameter_kMvnParamFieldNumber

    def mvn_param(self):
        return _gpudm.V1LayerParameter_mvn_param(self)

    def mutable_mvn_param(self):
        return _gpudm.V1LayerParameter_mutable_mvn_param(self)

    def release_mvn_param(self):
        return _gpudm.V1LayerParameter_release_mvn_param(self)

    def set_allocated_mvn_param(self, mvn_param):
        return _gpudm.V1LayerParameter_set_allocated_mvn_param(self, mvn_param)

    def has_pooling_param(self):
        return _gpudm.V1LayerParameter_has_pooling_param(self)

    def clear_pooling_param(self):
        return _gpudm.V1LayerParameter_clear_pooling_param(self)
    kPoolingParamFieldNumber = _gpudm.V1LayerParameter_kPoolingParamFieldNumber

    def pooling_param(self):
        return _gpudm.V1LayerParameter_pooling_param(self)

    def mutable_pooling_param(self):
        return _gpudm.V1LayerParameter_mutable_pooling_param(self)

    def release_pooling_param(self):
        return _gpudm.V1LayerParameter_release_pooling_param(self)

    def set_allocated_pooling_param(self, pooling_param):
        return _gpudm.V1LayerParameter_set_allocated_pooling_param(self, pooling_param)

    def has_power_param(self):
        return _gpudm.V1LayerParameter_has_power_param(self)

    def clear_power_param(self):
        return _gpudm.V1LayerParameter_clear_power_param(self)
    kPowerParamFieldNumber = _gpudm.V1LayerParameter_kPowerParamFieldNumber

    def power_param(self):
        return _gpudm.V1LayerParameter_power_param(self)

    def mutable_power_param(self):
        return _gpudm.V1LayerParameter_mutable_power_param(self)

    def release_power_param(self):
        return _gpudm.V1LayerParameter_release_power_param(self)

    def set_allocated_power_param(self, power_param):
        return _gpudm.V1LayerParameter_set_allocated_power_param(self, power_param)

    def has_relu_param(self):
        return _gpudm.V1LayerParameter_has_relu_param(self)

    def clear_relu_param(self):
        return _gpudm.V1LayerParameter_clear_relu_param(self)
    kReluParamFieldNumber = _gpudm.V1LayerParameter_kReluParamFieldNumber

    def relu_param(self):
        return _gpudm.V1LayerParameter_relu_param(self)

    def mutable_relu_param(self):
        return _gpudm.V1LayerParameter_mutable_relu_param(self)

    def release_relu_param(self):
        return _gpudm.V1LayerParameter_release_relu_param(self)

    def set_allocated_relu_param(self, relu_param):
        return _gpudm.V1LayerParameter_set_allocated_relu_param(self, relu_param)

    def has_sigmoid_param(self):
        return _gpudm.V1LayerParameter_has_sigmoid_param(self)

    def clear_sigmoid_param(self):
        return _gpudm.V1LayerParameter_clear_sigmoid_param(self)
    kSigmoidParamFieldNumber = _gpudm.V1LayerParameter_kSigmoidParamFieldNumber

    def sigmoid_param(self):
        return _gpudm.V1LayerParameter_sigmoid_param(self)

    def mutable_sigmoid_param(self):
        return _gpudm.V1LayerParameter_mutable_sigmoid_param(self)

    def release_sigmoid_param(self):
        return _gpudm.V1LayerParameter_release_sigmoid_param(self)

    def set_allocated_sigmoid_param(self, sigmoid_param):
        return _gpudm.V1LayerParameter_set_allocated_sigmoid_param(self, sigmoid_param)

    def has_softmax_param(self):
        return _gpudm.V1LayerParameter_has_softmax_param(self)

    def clear_softmax_param(self):
        return _gpudm.V1LayerParameter_clear_softmax_param(self)
    kSoftmaxParamFieldNumber = _gpudm.V1LayerParameter_kSoftmaxParamFieldNumber

    def softmax_param(self):
        return _gpudm.V1LayerParameter_softmax_param(self)

    def mutable_softmax_param(self):
        return _gpudm.V1LayerParameter_mutable_softmax_param(self)

    def release_softmax_param(self):
        return _gpudm.V1LayerParameter_release_softmax_param(self)

    def set_allocated_softmax_param(self, softmax_param):
        return _gpudm.V1LayerParameter_set_allocated_softmax_param(self, softmax_param)

    def has_slice_param(self):
        return _gpudm.V1LayerParameter_has_slice_param(self)

    def clear_slice_param(self):
        return _gpudm.V1LayerParameter_clear_slice_param(self)
    kSliceParamFieldNumber = _gpudm.V1LayerParameter_kSliceParamFieldNumber

    def slice_param(self):
        return _gpudm.V1LayerParameter_slice_param(self)

    def mutable_slice_param(self):
        return _gpudm.V1LayerParameter_mutable_slice_param(self)

    def release_slice_param(self):
        return _gpudm.V1LayerParameter_release_slice_param(self)

    def set_allocated_slice_param(self, slice_param):
        return _gpudm.V1LayerParameter_set_allocated_slice_param(self, slice_param)

    def has_tanh_param(self):
        return _gpudm.V1LayerParameter_has_tanh_param(self)

    def clear_tanh_param(self):
        return _gpudm.V1LayerParameter_clear_tanh_param(self)
    kTanhParamFieldNumber = _gpudm.V1LayerParameter_kTanhParamFieldNumber

    def tanh_param(self):
        return _gpudm.V1LayerParameter_tanh_param(self)

    def mutable_tanh_param(self):
        return _gpudm.V1LayerParameter_mutable_tanh_param(self)

    def release_tanh_param(self):
        return _gpudm.V1LayerParameter_release_tanh_param(self)

    def set_allocated_tanh_param(self, tanh_param):
        return _gpudm.V1LayerParameter_set_allocated_tanh_param(self, tanh_param)

    def has_threshold_param(self):
        return _gpudm.V1LayerParameter_has_threshold_param(self)

    def clear_threshold_param(self):
        return _gpudm.V1LayerParameter_clear_threshold_param(self)
    kThresholdParamFieldNumber = _gpudm.V1LayerParameter_kThresholdParamFieldNumber

    def threshold_param(self):
        return _gpudm.V1LayerParameter_threshold_param(self)

    def mutable_threshold_param(self):
        return _gpudm.V1LayerParameter_mutable_threshold_param(self)

    def release_threshold_param(self):
        return _gpudm.V1LayerParameter_release_threshold_param(self)

    def set_allocated_threshold_param(self, threshold_param):
        return _gpudm.V1LayerParameter_set_allocated_threshold_param(self, threshold_param)

    def has_window_data_param(self):
        return _gpudm.V1LayerParameter_has_window_data_param(self)

    def clear_window_data_param(self):
        return _gpudm.V1LayerParameter_clear_window_data_param(self)
    kWindowDataParamFieldNumber = _gpudm.V1LayerParameter_kWindowDataParamFieldNumber

    def window_data_param(self):
        return _gpudm.V1LayerParameter_window_data_param(self)

    def mutable_window_data_param(self):
        return _gpudm.V1LayerParameter_mutable_window_data_param(self)

    def release_window_data_param(self):
        return _gpudm.V1LayerParameter_release_window_data_param(self)

    def set_allocated_window_data_param(self, window_data_param):
        return _gpudm.V1LayerParameter_set_allocated_window_data_param(self, window_data_param)

    def has_transform_param(self):
        return _gpudm.V1LayerParameter_has_transform_param(self)

    def clear_transform_param(self):
        return _gpudm.V1LayerParameter_clear_transform_param(self)
    kTransformParamFieldNumber = _gpudm.V1LayerParameter_kTransformParamFieldNumber

    def transform_param(self):
        return _gpudm.V1LayerParameter_transform_param(self)

    def mutable_transform_param(self):
        return _gpudm.V1LayerParameter_mutable_transform_param(self)

    def release_transform_param(self):
        return _gpudm.V1LayerParameter_release_transform_param(self)

    def set_allocated_transform_param(self, transform_param):
        return _gpudm.V1LayerParameter_set_allocated_transform_param(self, transform_param)

    def has_loss_param(self):
        return _gpudm.V1LayerParameter_has_loss_param(self)

    def clear_loss_param(self):
        return _gpudm.V1LayerParameter_clear_loss_param(self)
    kLossParamFieldNumber = _gpudm.V1LayerParameter_kLossParamFieldNumber

    def loss_param(self):
        return _gpudm.V1LayerParameter_loss_param(self)

    def mutable_loss_param(self):
        return _gpudm.V1LayerParameter_mutable_loss_param(self)

    def release_loss_param(self):
        return _gpudm.V1LayerParameter_release_loss_param(self)

    def set_allocated_loss_param(self, loss_param):
        return _gpudm.V1LayerParameter_set_allocated_loss_param(self, loss_param)

    def has_layer(self):
        return _gpudm.V1LayerParameter_has_layer(self)

    def clear_layer(self):
        return _gpudm.V1LayerParameter_clear_layer(self)
    kLayerFieldNumber = _gpudm.V1LayerParameter_kLayerFieldNumber

    def layer(self):
        return _gpudm.V1LayerParameter_layer(self)

    def mutable_layer(self):
        return _gpudm.V1LayerParameter_mutable_layer(self)

    def release_layer(self):
        return _gpudm.V1LayerParameter_release_layer(self)

    def set_allocated_layer(self, layer):
        return _gpudm.V1LayerParameter_set_allocated_layer(self, layer)
V1LayerParameter_swigregister = _gpudm.V1LayerParameter_swigregister
V1LayerParameter_swigregister(V1LayerParameter)

def V1LayerParameter_descriptor():
    return _gpudm.V1LayerParameter_descriptor()
V1LayerParameter_descriptor = _gpudm.V1LayerParameter_descriptor

def V1LayerParameter_default_instance():
    return _gpudm.V1LayerParameter_default_instance()
V1LayerParameter_default_instance = _gpudm.V1LayerParameter_default_instance

class V0LayerParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, V0LayerParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, V0LayerParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_V0LayerParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_V0LayerParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.V0LayerParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.V0LayerParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.V0LayerParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.V0LayerParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.V0LayerParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.V0LayerParameter_default_instance)

    def Swap(self, other):
        return _gpudm.V0LayerParameter_Swap(self, other)

    def New(self):
        return _gpudm.V0LayerParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.V0LayerParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.V0LayerParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.V0LayerParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.V0LayerParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.V0LayerParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.V0LayerParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.V0LayerParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.V0LayerParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.V0LayerParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.V0LayerParameter_GetMetadata(self)
    MAX = _gpudm.V0LayerParameter_MAX
    AVE = _gpudm.V0LayerParameter_AVE
    STOCHASTIC = _gpudm.V0LayerParameter_STOCHASTIC
    __swig_getmethods__["PoolMethod_IsValid"] = lambda x: _gpudm.V0LayerParameter_PoolMethod_IsValid
    if _newclass:
        PoolMethod_IsValid = staticmethod(_gpudm.V0LayerParameter_PoolMethod_IsValid)
    PoolMethod_MIN = _gpudm.V0LayerParameter_PoolMethod_MIN
    PoolMethod_MAX = _gpudm.V0LayerParameter_PoolMethod_MAX
    PoolMethod_ARRAYSIZE = _gpudm.V0LayerParameter_PoolMethod_ARRAYSIZE
    __swig_getmethods__["PoolMethod_descriptor"] = lambda x: _gpudm.V0LayerParameter_PoolMethod_descriptor
    if _newclass:
        PoolMethod_descriptor = staticmethod(_gpudm.V0LayerParameter_PoolMethod_descriptor)
    __swig_getmethods__["PoolMethod_Name"] = lambda x: _gpudm.V0LayerParameter_PoolMethod_Name
    if _newclass:
        PoolMethod_Name = staticmethod(_gpudm.V0LayerParameter_PoolMethod_Name)
    __swig_getmethods__["PoolMethod_Parse"] = lambda x: _gpudm.V0LayerParameter_PoolMethod_Parse
    if _newclass:
        PoolMethod_Parse = staticmethod(_gpudm.V0LayerParameter_PoolMethod_Parse)

    def has_name(self):
        return _gpudm.V0LayerParameter_has_name(self)

    def clear_name(self):
        return _gpudm.V0LayerParameter_clear_name(self)
    kNameFieldNumber = _gpudm.V0LayerParameter_kNameFieldNumber

    def name(self):
        return _gpudm.V0LayerParameter_name(self)

    def set_name(self, *args):
        return _gpudm.V0LayerParameter_set_name(self, *args)

    def mutable_name(self):
        return _gpudm.V0LayerParameter_mutable_name(self)

    def release_name(self):
        return _gpudm.V0LayerParameter_release_name(self)

    def set_allocated_name(self, name):
        return _gpudm.V0LayerParameter_set_allocated_name(self, name)

    def has_type(self):
        return _gpudm.V0LayerParameter_has_type(self)

    def clear_type(self):
        return _gpudm.V0LayerParameter_clear_type(self)
    kTypeFieldNumber = _gpudm.V0LayerParameter_kTypeFieldNumber

    def type(self):
        return _gpudm.V0LayerParameter_type(self)

    def set_type(self, *args):
        return _gpudm.V0LayerParameter_set_type(self, *args)

    def mutable_type(self):
        return _gpudm.V0LayerParameter_mutable_type(self)

    def release_type(self):
        return _gpudm.V0LayerParameter_release_type(self)

    def set_allocated_type(self, type):
        return _gpudm.V0LayerParameter_set_allocated_type(self, type)

    def has_num_output(self):
        return _gpudm.V0LayerParameter_has_num_output(self)

    def clear_num_output(self):
        return _gpudm.V0LayerParameter_clear_num_output(self)
    kNumOutputFieldNumber = _gpudm.V0LayerParameter_kNumOutputFieldNumber

    def num_output(self):
        return _gpudm.V0LayerParameter_num_output(self)

    def set_num_output(self, value):
        return _gpudm.V0LayerParameter_set_num_output(self, value)

    def has_biasterm(self):
        return _gpudm.V0LayerParameter_has_biasterm(self)

    def clear_biasterm(self):
        return _gpudm.V0LayerParameter_clear_biasterm(self)
    kBiastermFieldNumber = _gpudm.V0LayerParameter_kBiastermFieldNumber

    def biasterm(self):
        return _gpudm.V0LayerParameter_biasterm(self)

    def set_biasterm(self, value):
        return _gpudm.V0LayerParameter_set_biasterm(self, value)

    def has_weight_filler(self):
        return _gpudm.V0LayerParameter_has_weight_filler(self)

    def clear_weight_filler(self):
        return _gpudm.V0LayerParameter_clear_weight_filler(self)
    kWeightFillerFieldNumber = _gpudm.V0LayerParameter_kWeightFillerFieldNumber

    def weight_filler(self):
        return _gpudm.V0LayerParameter_weight_filler(self)

    def mutable_weight_filler(self):
        return _gpudm.V0LayerParameter_mutable_weight_filler(self)

    def release_weight_filler(self):
        return _gpudm.V0LayerParameter_release_weight_filler(self)

    def set_allocated_weight_filler(self, weight_filler):
        return _gpudm.V0LayerParameter_set_allocated_weight_filler(self, weight_filler)

    def has_bias_filler(self):
        return _gpudm.V0LayerParameter_has_bias_filler(self)

    def clear_bias_filler(self):
        return _gpudm.V0LayerParameter_clear_bias_filler(self)
    kBiasFillerFieldNumber = _gpudm.V0LayerParameter_kBiasFillerFieldNumber

    def bias_filler(self):
        return _gpudm.V0LayerParameter_bias_filler(self)

    def mutable_bias_filler(self):
        return _gpudm.V0LayerParameter_mutable_bias_filler(self)

    def release_bias_filler(self):
        return _gpudm.V0LayerParameter_release_bias_filler(self)

    def set_allocated_bias_filler(self, bias_filler):
        return _gpudm.V0LayerParameter_set_allocated_bias_filler(self, bias_filler)

    def has_pad(self):
        return _gpudm.V0LayerParameter_has_pad(self)

    def clear_pad(self):
        return _gpudm.V0LayerParameter_clear_pad(self)
    kPadFieldNumber = _gpudm.V0LayerParameter_kPadFieldNumber

    def pad(self):
        return _gpudm.V0LayerParameter_pad(self)

    def set_pad(self, value):
        return _gpudm.V0LayerParameter_set_pad(self, value)

    def has_kernelsize(self):
        return _gpudm.V0LayerParameter_has_kernelsize(self)

    def clear_kernelsize(self):
        return _gpudm.V0LayerParameter_clear_kernelsize(self)
    kKernelsizeFieldNumber = _gpudm.V0LayerParameter_kKernelsizeFieldNumber

    def kernelsize(self):
        return _gpudm.V0LayerParameter_kernelsize(self)

    def set_kernelsize(self, value):
        return _gpudm.V0LayerParameter_set_kernelsize(self, value)

    def has_group(self):
        return _gpudm.V0LayerParameter_has_group(self)

    def clear_group(self):
        return _gpudm.V0LayerParameter_clear_group(self)
    kGroupFieldNumber = _gpudm.V0LayerParameter_kGroupFieldNumber

    def group(self):
        return _gpudm.V0LayerParameter_group(self)

    def set_group(self, value):
        return _gpudm.V0LayerParameter_set_group(self, value)

    def has_stride(self):
        return _gpudm.V0LayerParameter_has_stride(self)

    def clear_stride(self):
        return _gpudm.V0LayerParameter_clear_stride(self)
    kStrideFieldNumber = _gpudm.V0LayerParameter_kStrideFieldNumber

    def stride(self):
        return _gpudm.V0LayerParameter_stride(self)

    def set_stride(self, value):
        return _gpudm.V0LayerParameter_set_stride(self, value)

    def has_pool(self):
        return _gpudm.V0LayerParameter_has_pool(self)

    def clear_pool(self):
        return _gpudm.V0LayerParameter_clear_pool(self)
    kPoolFieldNumber = _gpudm.V0LayerParameter_kPoolFieldNumber

    def pool(self):
        return _gpudm.V0LayerParameter_pool(self)

    def set_pool(self, value):
        return _gpudm.V0LayerParameter_set_pool(self, value)

    def has_dropout_ratio(self):
        return _gpudm.V0LayerParameter_has_dropout_ratio(self)

    def clear_dropout_ratio(self):
        return _gpudm.V0LayerParameter_clear_dropout_ratio(self)
    kDropoutRatioFieldNumber = _gpudm.V0LayerParameter_kDropoutRatioFieldNumber

    def dropout_ratio(self):
        return _gpudm.V0LayerParameter_dropout_ratio(self)

    def set_dropout_ratio(self, value):
        return _gpudm.V0LayerParameter_set_dropout_ratio(self, value)

    def has_local_size(self):
        return _gpudm.V0LayerParameter_has_local_size(self)

    def clear_local_size(self):
        return _gpudm.V0LayerParameter_clear_local_size(self)
    kLocalSizeFieldNumber = _gpudm.V0LayerParameter_kLocalSizeFieldNumber

    def local_size(self):
        return _gpudm.V0LayerParameter_local_size(self)

    def set_local_size(self, value):
        return _gpudm.V0LayerParameter_set_local_size(self, value)

    def has_alpha(self):
        return _gpudm.V0LayerParameter_has_alpha(self)

    def clear_alpha(self):
        return _gpudm.V0LayerParameter_clear_alpha(self)
    kAlphaFieldNumber = _gpudm.V0LayerParameter_kAlphaFieldNumber

    def alpha(self):
        return _gpudm.V0LayerParameter_alpha(self)

    def set_alpha(self, value):
        return _gpudm.V0LayerParameter_set_alpha(self, value)

    def has_beta(self):
        return _gpudm.V0LayerParameter_has_beta(self)

    def clear_beta(self):
        return _gpudm.V0LayerParameter_clear_beta(self)
    kBetaFieldNumber = _gpudm.V0LayerParameter_kBetaFieldNumber

    def beta(self):
        return _gpudm.V0LayerParameter_beta(self)

    def set_beta(self, value):
        return _gpudm.V0LayerParameter_set_beta(self, value)

    def has_k(self):
        return _gpudm.V0LayerParameter_has_k(self)

    def clear_k(self):
        return _gpudm.V0LayerParameter_clear_k(self)
    kKFieldNumber = _gpudm.V0LayerParameter_kKFieldNumber

    def k(self):
        return _gpudm.V0LayerParameter_k(self)

    def set_k(self, value):
        return _gpudm.V0LayerParameter_set_k(self, value)

    def has_source(self):
        return _gpudm.V0LayerParameter_has_source(self)

    def clear_source(self):
        return _gpudm.V0LayerParameter_clear_source(self)
    kSourceFieldNumber = _gpudm.V0LayerParameter_kSourceFieldNumber

    def source(self):
        return _gpudm.V0LayerParameter_source(self)

    def set_source(self, *args):
        return _gpudm.V0LayerParameter_set_source(self, *args)

    def mutable_source(self):
        return _gpudm.V0LayerParameter_mutable_source(self)

    def release_source(self):
        return _gpudm.V0LayerParameter_release_source(self)

    def set_allocated_source(self, source):
        return _gpudm.V0LayerParameter_set_allocated_source(self, source)

    def has_scale(self):
        return _gpudm.V0LayerParameter_has_scale(self)

    def clear_scale(self):
        return _gpudm.V0LayerParameter_clear_scale(self)
    kScaleFieldNumber = _gpudm.V0LayerParameter_kScaleFieldNumber

    def scale(self):
        return _gpudm.V0LayerParameter_scale(self)

    def set_scale(self, value):
        return _gpudm.V0LayerParameter_set_scale(self, value)

    def has_meanfile(self):
        return _gpudm.V0LayerParameter_has_meanfile(self)

    def clear_meanfile(self):
        return _gpudm.V0LayerParameter_clear_meanfile(self)
    kMeanfileFieldNumber = _gpudm.V0LayerParameter_kMeanfileFieldNumber

    def meanfile(self):
        return _gpudm.V0LayerParameter_meanfile(self)

    def set_meanfile(self, *args):
        return _gpudm.V0LayerParameter_set_meanfile(self, *args)

    def mutable_meanfile(self):
        return _gpudm.V0LayerParameter_mutable_meanfile(self)

    def release_meanfile(self):
        return _gpudm.V0LayerParameter_release_meanfile(self)

    def set_allocated_meanfile(self, meanfile):
        return _gpudm.V0LayerParameter_set_allocated_meanfile(self, meanfile)

    def has_batchsize(self):
        return _gpudm.V0LayerParameter_has_batchsize(self)

    def clear_batchsize(self):
        return _gpudm.V0LayerParameter_clear_batchsize(self)
    kBatchsizeFieldNumber = _gpudm.V0LayerParameter_kBatchsizeFieldNumber

    def batchsize(self):
        return _gpudm.V0LayerParameter_batchsize(self)

    def set_batchsize(self, value):
        return _gpudm.V0LayerParameter_set_batchsize(self, value)

    def has_cropsize(self):
        return _gpudm.V0LayerParameter_has_cropsize(self)

    def clear_cropsize(self):
        return _gpudm.V0LayerParameter_clear_cropsize(self)
    kCropsizeFieldNumber = _gpudm.V0LayerParameter_kCropsizeFieldNumber

    def cropsize(self):
        return _gpudm.V0LayerParameter_cropsize(self)

    def set_cropsize(self, value):
        return _gpudm.V0LayerParameter_set_cropsize(self, value)

    def has_mirror(self):
        return _gpudm.V0LayerParameter_has_mirror(self)

    def clear_mirror(self):
        return _gpudm.V0LayerParameter_clear_mirror(self)
    kMirrorFieldNumber = _gpudm.V0LayerParameter_kMirrorFieldNumber

    def mirror(self):
        return _gpudm.V0LayerParameter_mirror(self)

    def set_mirror(self, value):
        return _gpudm.V0LayerParameter_set_mirror(self, value)

    def blobs_size(self):
        return _gpudm.V0LayerParameter_blobs_size(self)

    def clear_blobs(self):
        return _gpudm.V0LayerParameter_clear_blobs(self)
    kBlobsFieldNumber = _gpudm.V0LayerParameter_kBlobsFieldNumber

    def add_blobs(self):
        return _gpudm.V0LayerParameter_add_blobs(self)

    def blobs(self, *args):
        return _gpudm.V0LayerParameter_blobs(self, *args)

    def mutable_blobs(self, *args):
        return _gpudm.V0LayerParameter_mutable_blobs(self, *args)

    def blobs_lr_size(self):
        return _gpudm.V0LayerParameter_blobs_lr_size(self)

    def clear_blobs_lr(self):
        return _gpudm.V0LayerParameter_clear_blobs_lr(self)
    kBlobsLrFieldNumber = _gpudm.V0LayerParameter_kBlobsLrFieldNumber

    def set_blobs_lr(self, index, value):
        return _gpudm.V0LayerParameter_set_blobs_lr(self, index, value)

    def add_blobs_lr(self, value):
        return _gpudm.V0LayerParameter_add_blobs_lr(self, value)

    def blobs_lr(self, *args):
        return _gpudm.V0LayerParameter_blobs_lr(self, *args)

    def mutable_blobs_lr(self):
        return _gpudm.V0LayerParameter_mutable_blobs_lr(self)

    def weight_decay_size(self):
        return _gpudm.V0LayerParameter_weight_decay_size(self)

    def clear_weight_decay(self):
        return _gpudm.V0LayerParameter_clear_weight_decay(self)
    kWeightDecayFieldNumber = _gpudm.V0LayerParameter_kWeightDecayFieldNumber

    def set_weight_decay(self, index, value):
        return _gpudm.V0LayerParameter_set_weight_decay(self, index, value)

    def add_weight_decay(self, value):
        return _gpudm.V0LayerParameter_add_weight_decay(self, value)

    def weight_decay(self, *args):
        return _gpudm.V0LayerParameter_weight_decay(self, *args)

    def mutable_weight_decay(self):
        return _gpudm.V0LayerParameter_mutable_weight_decay(self)

    def has_rand_skip(self):
        return _gpudm.V0LayerParameter_has_rand_skip(self)

    def clear_rand_skip(self):
        return _gpudm.V0LayerParameter_clear_rand_skip(self)
    kRandSkipFieldNumber = _gpudm.V0LayerParameter_kRandSkipFieldNumber

    def rand_skip(self):
        return _gpudm.V0LayerParameter_rand_skip(self)

    def set_rand_skip(self, value):
        return _gpudm.V0LayerParameter_set_rand_skip(self, value)

    def has_det_fg_threshold(self):
        return _gpudm.V0LayerParameter_has_det_fg_threshold(self)

    def clear_det_fg_threshold(self):
        return _gpudm.V0LayerParameter_clear_det_fg_threshold(self)
    kDetFgThresholdFieldNumber = _gpudm.V0LayerParameter_kDetFgThresholdFieldNumber

    def det_fg_threshold(self):
        return _gpudm.V0LayerParameter_det_fg_threshold(self)

    def set_det_fg_threshold(self, value):
        return _gpudm.V0LayerParameter_set_det_fg_threshold(self, value)

    def has_det_bg_threshold(self):
        return _gpudm.V0LayerParameter_has_det_bg_threshold(self)

    def clear_det_bg_threshold(self):
        return _gpudm.V0LayerParameter_clear_det_bg_threshold(self)
    kDetBgThresholdFieldNumber = _gpudm.V0LayerParameter_kDetBgThresholdFieldNumber

    def det_bg_threshold(self):
        return _gpudm.V0LayerParameter_det_bg_threshold(self)

    def set_det_bg_threshold(self, value):
        return _gpudm.V0LayerParameter_set_det_bg_threshold(self, value)

    def has_det_fg_fraction(self):
        return _gpudm.V0LayerParameter_has_det_fg_fraction(self)

    def clear_det_fg_fraction(self):
        return _gpudm.V0LayerParameter_clear_det_fg_fraction(self)
    kDetFgFractionFieldNumber = _gpudm.V0LayerParameter_kDetFgFractionFieldNumber

    def det_fg_fraction(self):
        return _gpudm.V0LayerParameter_det_fg_fraction(self)

    def set_det_fg_fraction(self, value):
        return _gpudm.V0LayerParameter_set_det_fg_fraction(self, value)

    def has_det_context_pad(self):
        return _gpudm.V0LayerParameter_has_det_context_pad(self)

    def clear_det_context_pad(self):
        return _gpudm.V0LayerParameter_clear_det_context_pad(self)
    kDetContextPadFieldNumber = _gpudm.V0LayerParameter_kDetContextPadFieldNumber

    def det_context_pad(self):
        return _gpudm.V0LayerParameter_det_context_pad(self)

    def set_det_context_pad(self, value):
        return _gpudm.V0LayerParameter_set_det_context_pad(self, value)

    def has_det_crop_mode(self):
        return _gpudm.V0LayerParameter_has_det_crop_mode(self)

    def clear_det_crop_mode(self):
        return _gpudm.V0LayerParameter_clear_det_crop_mode(self)
    kDetCropModeFieldNumber = _gpudm.V0LayerParameter_kDetCropModeFieldNumber

    def det_crop_mode(self):
        return _gpudm.V0LayerParameter_det_crop_mode(self)

    def set_det_crop_mode(self, *args):
        return _gpudm.V0LayerParameter_set_det_crop_mode(self, *args)

    def mutable_det_crop_mode(self):
        return _gpudm.V0LayerParameter_mutable_det_crop_mode(self)

    def release_det_crop_mode(self):
        return _gpudm.V0LayerParameter_release_det_crop_mode(self)

    def set_allocated_det_crop_mode(self, det_crop_mode):
        return _gpudm.V0LayerParameter_set_allocated_det_crop_mode(self, det_crop_mode)

    def has_new_num(self):
        return _gpudm.V0LayerParameter_has_new_num(self)

    def clear_new_num(self):
        return _gpudm.V0LayerParameter_clear_new_num(self)
    kNewNumFieldNumber = _gpudm.V0LayerParameter_kNewNumFieldNumber

    def new_num(self):
        return _gpudm.V0LayerParameter_new_num(self)

    def set_new_num(self, value):
        return _gpudm.V0LayerParameter_set_new_num(self, value)

    def has_new_channels(self):
        return _gpudm.V0LayerParameter_has_new_channels(self)

    def clear_new_channels(self):
        return _gpudm.V0LayerParameter_clear_new_channels(self)
    kNewChannelsFieldNumber = _gpudm.V0LayerParameter_kNewChannelsFieldNumber

    def new_channels(self):
        return _gpudm.V0LayerParameter_new_channels(self)

    def set_new_channels(self, value):
        return _gpudm.V0LayerParameter_set_new_channels(self, value)

    def has_new_height(self):
        return _gpudm.V0LayerParameter_has_new_height(self)

    def clear_new_height(self):
        return _gpudm.V0LayerParameter_clear_new_height(self)
    kNewHeightFieldNumber = _gpudm.V0LayerParameter_kNewHeightFieldNumber

    def new_height(self):
        return _gpudm.V0LayerParameter_new_height(self)

    def set_new_height(self, value):
        return _gpudm.V0LayerParameter_set_new_height(self, value)

    def has_new_width(self):
        return _gpudm.V0LayerParameter_has_new_width(self)

    def clear_new_width(self):
        return _gpudm.V0LayerParameter_clear_new_width(self)
    kNewWidthFieldNumber = _gpudm.V0LayerParameter_kNewWidthFieldNumber

    def new_width(self):
        return _gpudm.V0LayerParameter_new_width(self)

    def set_new_width(self, value):
        return _gpudm.V0LayerParameter_set_new_width(self, value)

    def has_shuffle_images(self):
        return _gpudm.V0LayerParameter_has_shuffle_images(self)

    def clear_shuffle_images(self):
        return _gpudm.V0LayerParameter_clear_shuffle_images(self)
    kShuffleImagesFieldNumber = _gpudm.V0LayerParameter_kShuffleImagesFieldNumber

    def shuffle_images(self):
        return _gpudm.V0LayerParameter_shuffle_images(self)

    def set_shuffle_images(self, value):
        return _gpudm.V0LayerParameter_set_shuffle_images(self, value)

    def has_concat_dim(self):
        return _gpudm.V0LayerParameter_has_concat_dim(self)

    def clear_concat_dim(self):
        return _gpudm.V0LayerParameter_clear_concat_dim(self)
    kConcatDimFieldNumber = _gpudm.V0LayerParameter_kConcatDimFieldNumber

    def concat_dim(self):
        return _gpudm.V0LayerParameter_concat_dim(self)

    def set_concat_dim(self, value):
        return _gpudm.V0LayerParameter_set_concat_dim(self, value)

    def has_hdf5_output_param(self):
        return _gpudm.V0LayerParameter_has_hdf5_output_param(self)

    def clear_hdf5_output_param(self):
        return _gpudm.V0LayerParameter_clear_hdf5_output_param(self)
    kHdf5OutputParamFieldNumber = _gpudm.V0LayerParameter_kHdf5OutputParamFieldNumber

    def hdf5_output_param(self):
        return _gpudm.V0LayerParameter_hdf5_output_param(self)

    def mutable_hdf5_output_param(self):
        return _gpudm.V0LayerParameter_mutable_hdf5_output_param(self)

    def release_hdf5_output_param(self):
        return _gpudm.V0LayerParameter_release_hdf5_output_param(self)

    def set_allocated_hdf5_output_param(self, hdf5_output_param):
        return _gpudm.V0LayerParameter_set_allocated_hdf5_output_param(self, hdf5_output_param)
V0LayerParameter_swigregister = _gpudm.V0LayerParameter_swigregister
V0LayerParameter_swigregister(V0LayerParameter)

def V0LayerParameter_descriptor():
    return _gpudm.V0LayerParameter_descriptor()
V0LayerParameter_descriptor = _gpudm.V0LayerParameter_descriptor

def V0LayerParameter_default_instance():
    return _gpudm.V0LayerParameter_default_instance()
V0LayerParameter_default_instance = _gpudm.V0LayerParameter_default_instance

class PReLUParameter(Message):
    __swig_setmethods__ = {}
    for _s in [Message]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PReLUParameter, name, value)
    __swig_getmethods__ = {}
    for _s in [Message]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PReLUParameter, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_PReLUParameter
    __del__ = lambda self: None

    def __init__(self, *args):
        this = _gpudm.new_PReLUParameter(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def unknown_fields(self):
        return _gpudm.PReLUParameter_unknown_fields(self)

    def mutable_unknown_fields(self):
        return _gpudm.PReLUParameter_mutable_unknown_fields(self)
    __swig_getmethods__["descriptor"] = lambda x: _gpudm.PReLUParameter_descriptor
    if _newclass:
        descriptor = staticmethod(_gpudm.PReLUParameter_descriptor)
    __swig_getmethods__["default_instance"] = lambda x: _gpudm.PReLUParameter_default_instance
    if _newclass:
        default_instance = staticmethod(_gpudm.PReLUParameter_default_instance)

    def Swap(self, other):
        return _gpudm.PReLUParameter_Swap(self, other)

    def New(self):
        return _gpudm.PReLUParameter_New(self)

    def CopyFrom(self, *args):
        return _gpudm.PReLUParameter_CopyFrom(self, *args)

    def MergeFrom(self, *args):
        return _gpudm.PReLUParameter_MergeFrom(self, *args)

    def Clear(self):
        return _gpudm.PReLUParameter_Clear(self)

    def IsInitialized(self):
        return _gpudm.PReLUParameter_IsInitialized(self)

    def ByteSize(self):
        return _gpudm.PReLUParameter_ByteSize(self)

    def MergePartialFromCodedStream(self, input):
        return _gpudm.PReLUParameter_MergePartialFromCodedStream(self, input)

    def SerializeWithCachedSizes(self, output):
        return _gpudm.PReLUParameter_SerializeWithCachedSizes(self, output)

    def SerializeWithCachedSizesToArray(self, output):
        return _gpudm.PReLUParameter_SerializeWithCachedSizesToArray(self, output)

    def GetCachedSize(self):
        return _gpudm.PReLUParameter_GetCachedSize(self)

    def GetMetadata(self):
        return _gpudm.PReLUParameter_GetMetadata(self)

    def has_filler(self):
        return _gpudm.PReLUParameter_has_filler(self)

    def clear_filler(self):
        return _gpudm.PReLUParameter_clear_filler(self)
    kFillerFieldNumber = _gpudm.PReLUParameter_kFillerFieldNumber

    def filler(self):
        return _gpudm.PReLUParameter_filler(self)

    def mutable_filler(self):
        return _gpudm.PReLUParameter_mutable_filler(self)

    def release_filler(self):
        return _gpudm.PReLUParameter_release_filler(self)

    def set_allocated_filler(self, filler):
        return _gpudm.PReLUParameter_set_allocated_filler(self, filler)

    def has_channel_shared(self):
        return _gpudm.PReLUParameter_has_channel_shared(self)

    def clear_channel_shared(self):
        return _gpudm.PReLUParameter_clear_channel_shared(self)
    kChannelSharedFieldNumber = _gpudm.PReLUParameter_kChannelSharedFieldNumber

    def channel_shared(self):
        return _gpudm.PReLUParameter_channel_shared(self)

    def set_channel_shared(self, value):
        return _gpudm.PReLUParameter_set_channel_shared(self, value)
PReLUParameter_swigregister = _gpudm.PReLUParameter_swigregister
PReLUParameter_swigregister(PReLUParameter)

def PReLUParameter_descriptor():
    return _gpudm.PReLUParameter_descriptor()
PReLUParameter_descriptor = _gpudm.PReLUParameter_descriptor

def PReLUParameter_default_instance():
    return _gpudm.PReLUParameter_default_instance()
PReLUParameter_default_instance = _gpudm.PReLUParameter_default_instance

class NetFloat(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetFloat, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NetFloat, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _gpudm.new_NetFloat(*args)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _gpudm.delete_NetFloat
    __del__ = lambda self: None

    def Init(self, param):
        return _gpudm.NetFloat_Init(self, param)

    def ForwardPrefilled(self, loss=None):
        return _gpudm.NetFloat_ForwardPrefilled(self, loss)

    def ForwardFromTo(self, start, end):
        return _gpudm.NetFloat_ForwardFromTo(self, start, end)

    def ForwardFrom(self, start):
        return _gpudm.NetFloat_ForwardFrom(self, start)

    def ForwardTo(self, end):
        return _gpudm.NetFloat_ForwardTo(self, end)

    def Forward(self, *args):
        return _gpudm.NetFloat_Forward(self, *args)

    def ClearParamDiffs(self):
        return _gpudm.NetFloat_ClearParamDiffs(self)

    def Backward(self):
        return _gpudm.NetFloat_Backward(self)

    def BackwardFromTo(self, start, end):
        return _gpudm.NetFloat_BackwardFromTo(self, start, end)

    def BackwardFrom(self, start):
        return _gpudm.NetFloat_BackwardFrom(self, start)

    def BackwardTo(self, end):
        return _gpudm.NetFloat_BackwardTo(self, end)

    def Reshape(self):
        return _gpudm.NetFloat_Reshape(self)

    def ForwardBackward(self, bottom):
        return _gpudm.NetFloat_ForwardBackward(self, bottom)

    def Update(self):
        return _gpudm.NetFloat_Update(self)

    def ShareWeights(self):
        return _gpudm.NetFloat_ShareWeights(self)

    def ShareTrainedLayersWith(self, other):
        return _gpudm.NetFloat_ShareTrainedLayersWith(self, other)

    def CopyTrainedLayersFrom(self, *args):
        return _gpudm.NetFloat_CopyTrainedLayersFrom(self, *args)

    def CopyTrainedLayersFromBinaryProto(self, trained_filename):
        return _gpudm.NetFloat_CopyTrainedLayersFromBinaryProto(self, trained_filename)

    def CopyTrainedLayersFromHDF5(self, trained_filename):
        return _gpudm.NetFloat_CopyTrainedLayersFromHDF5(self, trained_filename)

    def ToProto(self, param, write_diff=False):
        return _gpudm.NetFloat_ToProto(self, param, write_diff)

    def ToHDF5(self, filename, write_diff=False):
        return _gpudm.NetFloat_ToHDF5(self, filename, write_diff)

    def name(self):
        return _gpudm.NetFloat_name(self)

    def layer_names(self):
        return _gpudm.NetFloat_layer_names(self)

    def blob_names(self):
        return _gpudm.NetFloat_blob_names(self)

    def blobs(self):
        return _gpudm.NetFloat_blobs(self)

    def layers(self):
        return _gpudm.NetFloat_layers(self)

    def phase(self):
        return _gpudm.NetFloat_phase(self)

    def bottom_vecs(self):
        return _gpudm.NetFloat_bottom_vecs(self)

    def top_vecs(self):
        return _gpudm.NetFloat_top_vecs(self)

    def bottom_need_backward(self):
        return _gpudm.NetFloat_bottom_need_backward(self)

    def blob_loss_weights(self):
        return _gpudm.NetFloat_blob_loss_weights(self)

    def layer_need_backward(self):
        return _gpudm.NetFloat_layer_need_backward(self)

    def params(self):
        return _gpudm.NetFloat_params(self)

    def learnable_params(self):
        return _gpudm.NetFloat_learnable_params(self)

    def params_lr(self):
        return _gpudm.NetFloat_params_lr(self)

    def has_params_lr(self):
        return _gpudm.NetFloat_has_params_lr(self)

    def params_weight_decay(self):
        return _gpudm.NetFloat_params_weight_decay(self)

    def has_params_decay(self):
        return _gpudm.NetFloat_has_params_decay(self)

    def param_names_index(self):
        return _gpudm.NetFloat_param_names_index(self)

    def param_owners(self):
        return _gpudm.NetFloat_param_owners(self)

    def num_inputs(self):
        return _gpudm.NetFloat_num_inputs(self)

    def num_outputs(self):
        return _gpudm.NetFloat_num_outputs(self)

    def input_blobs(self):
        return _gpudm.NetFloat_input_blobs(self)

    def output_blobs(self):
        return _gpudm.NetFloat_output_blobs(self)

    def input_blob_indices(self):
        return _gpudm.NetFloat_input_blob_indices(self)

    def output_blob_indices(self):
        return _gpudm.NetFloat_output_blob_indices(self)

    def has_blob(self, blob_name):
        return _gpudm.NetFloat_has_blob(self, blob_name)

    def blob_by_name(self, blob_name):
        return _gpudm.NetFloat_blob_by_name(self, blob_name)

    def has_layer(self, layer_name):
        return _gpudm.NetFloat_has_layer(self, layer_name)

    def layer_by_name(self, layer_name):
        return _gpudm.NetFloat_layer_by_name(self, layer_name)

    def set_debug_info(self, value):
        return _gpudm.NetFloat_set_debug_info(self, value)
    __swig_getmethods__["FilterNet"] = lambda x: _gpudm.NetFloat_FilterNet
    if _newclass:
        FilterNet = staticmethod(_gpudm.NetFloat_FilterNet)
    __swig_getmethods__["StateMeetsRule"] = lambda x: _gpudm.NetFloat_StateMeetsRule
    if _newclass:
        StateMeetsRule = staticmethod(_gpudm.NetFloat_StateMeetsRule)
NetFloat_swigregister = _gpudm.NetFloat_swigregister
NetFloat_swigregister(NetFloat)

def NetFloat_FilterNet(param, param_filtered):
    return _gpudm.NetFloat_FilterNet(param, param_filtered)
NetFloat_FilterNet = _gpudm.NetFloat_FilterNet

def NetFloat_StateMeetsRule(state, rule, layer_name):
    return _gpudm.NetFloat_StateMeetsRule(state, rule, layer_name)
NetFloat_StateMeetsRule = _gpudm.NetFloat_StateMeetsRule

class BlobFloat(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlobFloat, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlobFloat, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _gpudm.new_BlobFloat(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def Reshape(self, *args):
        return _gpudm.BlobFloat_Reshape(self, *args)

    def ReshapeLike(self, other):
        return _gpudm.BlobFloat_ReshapeLike(self, other)

    def shape_string(self):
        return _gpudm.BlobFloat_shape_string(self)

    def shape(self, *args):
        return _gpudm.BlobFloat_shape(self, *args)

    def num_axes(self):
        return _gpudm.BlobFloat_num_axes(self)

    def count(self, *args):
        return _gpudm.BlobFloat_count(self, *args)

    def CanonicalAxisIndex(self, axis_index):
        return _gpudm.BlobFloat_CanonicalAxisIndex(self, axis_index)

    def num(self):
        return _gpudm.BlobFloat_num(self)

    def channels(self):
        return _gpudm.BlobFloat_channels(self)

    def height(self):
        return _gpudm.BlobFloat_height(self)

    def width(self):
        return _gpudm.BlobFloat_width(self)

    def LegacyShape(self, index):
        return _gpudm.BlobFloat_LegacyShape(self, index)

    def offset(self, *args):
        return _gpudm.BlobFloat_offset(self, *args)

    def CopyFrom(self, source, copy_diff=False, reshape=False):
        return _gpudm.BlobFloat_CopyFrom(self, source, copy_diff, reshape)

    def data_at(self, *args):
        return _gpudm.BlobFloat_data_at(self, *args)

    def diff_at(self, *args):
        return _gpudm.BlobFloat_diff_at(self, *args)

    def data(self):
        return _gpudm.BlobFloat_data(self)

    def diff(self):
        return _gpudm.BlobFloat_diff(self)

    def cpu_data(self):
        return _gpudm.BlobFloat_cpu_data(self)

    def set_cpu_data(self, data):
        return _gpudm.BlobFloat_set_cpu_data(self, data)

    def gpu_shape(self):
        return _gpudm.BlobFloat_gpu_shape(self)

    def gpu_data(self):
        return _gpudm.BlobFloat_gpu_data(self)

    def cpu_diff(self):
        return _gpudm.BlobFloat_cpu_diff(self)

    def gpu_diff(self):
        return _gpudm.BlobFloat_gpu_diff(self)

    def mutable_cpu_data(self):
        return _gpudm.BlobFloat_mutable_cpu_data(self)

    def mutable_gpu_data(self):
        return _gpudm.BlobFloat_mutable_gpu_data(self)

    def mutable_cpu_diff(self):
        return _gpudm.BlobFloat_mutable_cpu_diff(self)

    def mutable_gpu_diff(self):
        return _gpudm.BlobFloat_mutable_gpu_diff(self)

    def Update(self):
        return _gpudm.BlobFloat_Update(self)

    def FromProto(self, proto, reshape=True):
        return _gpudm.BlobFloat_FromProto(self, proto, reshape)

    def ToProto(self, proto, write_diff=False):
        return _gpudm.BlobFloat_ToProto(self, proto, write_diff)

    def asum_data(self):
        return _gpudm.BlobFloat_asum_data(self)

    def asum_diff(self):
        return _gpudm.BlobFloat_asum_diff(self)

    def sumsq_data(self):
        return _gpudm.BlobFloat_sumsq_data(self)

    def sumsq_diff(self):
        return _gpudm.BlobFloat_sumsq_diff(self)

    def scale_data(self, scale_factor):
        return _gpudm.BlobFloat_scale_data(self, scale_factor)

    def scale_diff(self, scale_factor):
        return _gpudm.BlobFloat_scale_diff(self, scale_factor)

    def ShareData(self, other):
        return _gpudm.BlobFloat_ShareData(self, other)

    def ShareDiff(self, other):
        return _gpudm.BlobFloat_ShareDiff(self, other)

    def ShapeEquals(self, other):
        return _gpudm.BlobFloat_ShapeEquals(self, other)
    __swig_destroy__ = _gpudm.delete_BlobFloat
    __del__ = lambda self: None
BlobFloat_swigregister = _gpudm.BlobFloat_swigregister
BlobFloat_swigregister(BlobFloat)

class LayerFloat(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LayerFloat, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LayerFloat, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _gpudm.delete_LayerFloat
    __del__ = lambda self: None

    def SetUp(self, bottom, top):
        return _gpudm.LayerFloat_SetUp(self, bottom, top)

    def LayerSetUp(self, bottom, top):
        return _gpudm.LayerFloat_LayerSetUp(self, bottom, top)

    def ShareInParallel(self):
        return _gpudm.LayerFloat_ShareInParallel(self)

    def IsShared(self):
        return _gpudm.LayerFloat_IsShared(self)

    def SetShared(self, is_shared):
        return _gpudm.LayerFloat_SetShared(self, is_shared)

    def Reshape(self, bottom, top):
        return _gpudm.LayerFloat_Reshape(self, bottom, top)

    def Forward(self, bottom, top):
        return _gpudm.LayerFloat_Forward(self, bottom, top)

    def Backward(self, top, propagate_down, bottom):
        return _gpudm.LayerFloat_Backward(self, top, propagate_down, bottom)

    def blobs(self):
        return _gpudm.LayerFloat_blobs(self)

    def layer_param(self):
        return _gpudm.LayerFloat_layer_param(self)

    def ToProto(self, param, write_diff=False):
        return _gpudm.LayerFloat_ToProto(self, param, write_diff)

    def loss(self, top_index):
        return _gpudm.LayerFloat_loss(self, top_index)

    def set_loss(self, top_index, value):
        return _gpudm.LayerFloat_set_loss(self, top_index, value)

    def type(self):
        return _gpudm.LayerFloat_type(self)

    def ExactNumBottomBlobs(self):
        return _gpudm.LayerFloat_ExactNumBottomBlobs(self)

    def MinBottomBlobs(self):
        return _gpudm.LayerFloat_MinBottomBlobs(self)

    def MaxBottomBlobs(self):
        return _gpudm.LayerFloat_MaxBottomBlobs(self)

    def ExactNumTopBlobs(self):
        return _gpudm.LayerFloat_ExactNumTopBlobs(self)

    def MinTopBlobs(self):
        return _gpudm.LayerFloat_MinTopBlobs(self)

    def MaxTopBlobs(self):
        return _gpudm.LayerFloat_MaxTopBlobs(self)

    def EqualNumBottomTopBlobs(self):
        return _gpudm.LayerFloat_EqualNumBottomTopBlobs(self)

    def AutoTopBlobs(self):
        return _gpudm.LayerFloat_AutoTopBlobs(self)

    def AllowForceBackward(self, bottom_index):
        return _gpudm.LayerFloat_AllowForceBackward(self, bottom_index)

    def param_propagate_down(self, param_id):
        return _gpudm.LayerFloat_param_propagate_down(self, param_id)

    def set_param_propagate_down(self, param_id, value):
        return _gpudm.LayerFloat_set_param_propagate_down(self, param_id, value)
LayerFloat_swigregister = _gpudm.LayerFloat_swigregister
LayerFloat_swigregister(LayerFloat)

class NeuronLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NeuronLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, NeuronLayerFloat, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Reshape(self, bottom, top):
        return _gpudm.NeuronLayerFloat_Reshape(self, bottom, top)

    def ExactNumBottomBlobs(self):
        return _gpudm.NeuronLayerFloat_ExactNumBottomBlobs(self)

    def ExactNumTopBlobs(self):
        return _gpudm.NeuronLayerFloat_ExactNumTopBlobs(self)
    __swig_destroy__ = _gpudm.delete_NeuronLayerFloat
    __del__ = lambda self: None
NeuronLayerFloat_swigregister = _gpudm.NeuronLayerFloat_swigregister
NeuronLayerFloat_swigregister(NeuronLayerFloat)

class ReLULayerFloat(NeuronLayerFloat):
    __swig_setmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReLULayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ReLULayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_ReLULayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def type(self):
        return _gpudm.ReLULayerFloat_type(self)
    __swig_destroy__ = _gpudm.delete_ReLULayerFloat
    __del__ = lambda self: None
ReLULayerFloat_swigregister = _gpudm.ReLULayerFloat_swigregister
ReLULayerFloat_swigregister(ReLULayerFloat)

class PowerLayerFloat(NeuronLayerFloat):
    __swig_setmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PowerLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PowerLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_PowerLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.PowerLayerFloat_LayerSetUp(self, bottom, top)

    def type(self):
        return _gpudm.PowerLayerFloat_type(self)
    __swig_destroy__ = _gpudm.delete_PowerLayerFloat
    __del__ = lambda self: None
PowerLayerFloat_swigregister = _gpudm.PowerLayerFloat_swigregister
PowerLayerFloat_swigregister(PowerLayerFloat)

class ReshapeLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReshapeLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ReshapeLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_ReshapeLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.ReshapeLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.ReshapeLayerFloat_Reshape(self, bottom, top)

    def type(self):
        return _gpudm.ReshapeLayerFloat_type(self)

    def ExactNumBottomBlobs(self):
        return _gpudm.ReshapeLayerFloat_ExactNumBottomBlobs(self)

    def ExactNumTopBlobs(self):
        return _gpudm.ReshapeLayerFloat_ExactNumTopBlobs(self)
    __swig_destroy__ = _gpudm.delete_ReshapeLayerFloat
    __del__ = lambda self: None
ReshapeLayerFloat_swigregister = _gpudm.ReshapeLayerFloat_swigregister
ReshapeLayerFloat_swigregister(ReshapeLayerFloat)

class RectifiedSigmoidLayerFloat(NeuronLayerFloat):
    __swig_setmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RectifiedSigmoidLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, RectifiedSigmoidLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_RectifiedSigmoidLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _gpudm.delete_RectifiedSigmoidLayerFloat
    __del__ = lambda self: None
RectifiedSigmoidLayerFloat_swigregister = _gpudm.RectifiedSigmoidLayerFloat_swigregister
RectifiedSigmoidLayerFloat_swigregister(RectifiedSigmoidLayerFloat)

class PixelNormLayerFloat(NeuronLayerFloat):
    __swig_setmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PixelNormLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [NeuronLayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PixelNormLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param, norm):
        this = _gpudm.new_PixelNormLayerFloat(param, norm)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _gpudm.delete_PixelNormLayerFloat
    __del__ = lambda self: None
PixelNormLayerFloat_swigregister = _gpudm.PixelNormLayerFloat_swigregister
PixelNormLayerFloat_swigregister(PixelNormLayerFloat)

class BaseConvolutionLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BaseConvolutionLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BaseConvolutionLayerFloat, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def LayerSetUp(self, bottom, top):
        return _gpudm.BaseConvolutionLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.BaseConvolutionLayerFloat_Reshape(self, bottom, top)

    def MinBottomBlobs(self):
        return _gpudm.BaseConvolutionLayerFloat_MinBottomBlobs(self)

    def MinTopBlobs(self):
        return _gpudm.BaseConvolutionLayerFloat_MinTopBlobs(self)

    def EqualNumBottomTopBlobs(self):
        return _gpudm.BaseConvolutionLayerFloat_EqualNumBottomTopBlobs(self)
    __swig_destroy__ = _gpudm.delete_BaseConvolutionLayerFloat
    __del__ = lambda self: None
BaseConvolutionLayerFloat_swigregister = _gpudm.BaseConvolutionLayerFloat_swigregister
BaseConvolutionLayerFloat_swigregister(BaseConvolutionLayerFloat)

class ConvolutionLayerFloat(BaseConvolutionLayerFloat):
    __swig_setmethods__ = {}
    for _s in [BaseConvolutionLayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConvolutionLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [BaseConvolutionLayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConvolutionLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_ConvolutionLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def type(self):
        return _gpudm.ConvolutionLayerFloat_type(self)
    __swig_destroy__ = _gpudm.delete_ConvolutionLayerFloat
    __del__ = lambda self: None
ConvolutionLayerFloat_swigregister = _gpudm.ConvolutionLayerFloat_swigregister
ConvolutionLayerFloat_swigregister(ConvolutionLayerFloat)

class PatchConvolutionLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PatchConvolutionLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PatchConvolutionLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param, ksize, pad, ngh_rad, normalize_borders):
        this = _gpudm.new_PatchConvolutionLayerFloat(param, ksize, pad, ngh_rad, normalize_borders)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.PatchConvolutionLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.PatchConvolutionLayerFloat_Reshape(self, bottom, top)
    __swig_destroy__ = _gpudm.delete_PatchConvolutionLayerFloat
    __del__ = lambda self: None
PatchConvolutionLayerFloat_swigregister = _gpudm.PatchConvolutionLayerFloat_swigregister
PatchConvolutionLayerFloat_swigregister(PatchConvolutionLayerFloat)

class CSR_SparseConvolutionLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSR_SparseConvolutionLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSR_SparseConvolutionLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_CSR_SparseConvolutionLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.CSR_SparseConvolutionLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.CSR_SparseConvolutionLayerFloat_Reshape(self, bottom, top)

    def SetSparsityPattern(self, nnz, row_ptr, col_ind, data=None):
        return _gpudm.CSR_SparseConvolutionLayerFloat_SetSparsityPattern(self, nnz, row_ptr, col_ind, data)
    __swig_destroy__ = _gpudm.delete_CSR_SparseConvolutionLayerFloat
    __del__ = lambda self: None
CSR_SparseConvolutionLayerFloat_swigregister = _gpudm.CSR_SparseConvolutionLayerFloat_swigregister
CSR_SparseConvolutionLayerFloat_swigregister(CSR_SparseConvolutionLayerFloat)

class BorderRectifyLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BorderRectifyLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BorderRectifyLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param, ksize):
        this = _gpudm.new_BorderRectifyLayerFloat(param, ksize)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.BorderRectifyLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.BorderRectifyLayerFloat_Reshape(self, bottom, top)
    __swig_destroy__ = _gpudm.delete_BorderRectifyLayerFloat
    __del__ = lambda self: None
BorderRectifyLayerFloat_swigregister = _gpudm.BorderRectifyLayerFloat_swigregister
BorderRectifyLayerFloat_swigregister(BorderRectifyLayerFloat)

class PoolingLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PoolingLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PoolingLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param):
        this = _gpudm.new_PoolingLayerFloat(param)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.PoolingLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.PoolingLayerFloat_Reshape(self, bottom, top)

    def type(self):
        return _gpudm.PoolingLayerFloat_type(self)

    def ExactNumBottomBlobs(self):
        return _gpudm.PoolingLayerFloat_ExactNumBottomBlobs(self)

    def MinTopBlobs(self):
        return _gpudm.PoolingLayerFloat_MinTopBlobs(self)

    def MaxTopBlobs(self):
        return _gpudm.PoolingLayerFloat_MaxTopBlobs(self)
    __swig_destroy__ = _gpudm.delete_PoolingLayerFloat
    __del__ = lambda self: None
PoolingLayerFloat_swigregister = _gpudm.PoolingLayerFloat_swigregister
PoolingLayerFloat_swigregister(PoolingLayerFloat)

class DeepMatchingArgMaxLayerFloat(LayerFloat):
    __swig_setmethods__ = {}
    for _s in [LayerFloat]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DeepMatchingArgMaxLayerFloat, name, value)
    __swig_getmethods__ = {}
    for _s in [LayerFloat]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DeepMatchingArgMaxLayerFloat, name)
    __repr__ = _swig_repr

    def __init__(self, param, img_height, img_width, step, ngh_rad):
        this = _gpudm.new_DeepMatchingArgMaxLayerFloat(param, img_height, img_width, step, ngh_rad)
        try:
            self.this.append(this)
        except:
            self.this = this

    def LayerSetUp(self, bottom, top):
        return _gpudm.DeepMatchingArgMaxLayerFloat_LayerSetUp(self, bottom, top)

    def Reshape(self, bottom, top):
        return _gpudm.DeepMatchingArgMaxLayerFloat_Reshape(self, bottom, top)
    __swig_destroy__ = _gpudm.delete_DeepMatchingArgMaxLayerFloat
    __del__ = lambda self: None
DeepMatchingArgMaxLayerFloat_swigregister = _gpudm.DeepMatchingArgMaxLayerFloat_swigregister
DeepMatchingArgMaxLayerFloat_swigregister(DeepMatchingArgMaxLayerFloat)


def floats_to_numpy_ref(src, size):
    return _gpudm.floats_to_numpy_ref(src, size)
floats_to_numpy_ref = _gpudm.floats_to_numpy_ref


import numpy

def BlobFloat_get_shape(self): 
  return (self.num(), self.channels(), self.height(), self.width())

def BlobFloat_to_numpy_ref(self): 
  b = floats_to_numpy_ref(self.cpu_data(), self.count())
  return b.reshape(self.get_shape())

def BlobFloat_diff_to_numpy_ref(self): 
  b = floats_to_numpy_ref(self.cpu_diff(), self.count())
  return b.reshape(self.get_shape())

def BlobFloat_mutable_to_numpy_ref(self): 
  b = floats_to_numpy_ref(self.mutable_cpu_data(), self.count())
  return b.reshape(self.get_shape())

def BlobFloat_mutable_diff_to_numpy_ref(self): 
  b = floats_to_numpy_ref(self.mutable_cpu_diff(), self.count())
  return b.reshape(self.get_shape())

BlobFloat.get_shape = BlobFloat_get_shape
BlobFloat.to_numpy_ref = BlobFloat_to_numpy_ref
BlobFloat.diff_to_numpy_ref = BlobFloat_diff_to_numpy_ref
BlobFloat.mutable_to_numpy_ref = BlobFloat_mutable_to_numpy_ref
BlobFloat.mutable_diff_to_numpy_ref = BlobFloat_mutable_diff_to_numpy_ref



def _prepare_big_cells(size, offset, step, child_grid, child_norms, grid, children, norms):
    return _gpudm._prepare_big_cells(size, offset, step, child_grid, child_norms, grid, children, norms)
_prepare_big_cells = _gpudm._prepare_big_cells

def _intersect_corres(map0, map1, corres):
    return _gpudm._intersect_corres(map0, map1, corres)
_intersect_corres = _gpudm._intersect_corres


def prepare_big_cells( imshape, cell_size, overlap, child_overlap, child_grid, child_norms, dense_step=0, offset=None ):
  if offset is None:  offset = cell_size/2 if not dense_step else 0
  step = cell_size/(overlap+1) if not dense_step else dense_step
  grid_size = lambda imsize: 1+max(0,imsize-2*offset)/step
  gtx = grid_size(imshape[1])
  gty = grid_size(imshape[0])
  grid = numpy.empty((gty,gtx,2),numpy.int32)
  norms = numpy.zeros((gty,gtx),numpy.float32) if child_norms is not None else None

  assert overlap in {0,1}
  nc = (2+child_overlap)**2  # number of children per cell
  children = numpy.empty((gty,gtx,nc),numpy.int32) if child_grid!=None else None

  _prepare_big_cells( cell_size, offset, step, child_grid, child_norms, grid, children, norms )

  if norms is None:
    return step, grid, children
  else:
    return step, grid, children, norms

def intersect_corres( c0, c1 ):
  n = min(c0.size, c1.size) / 6
  res = numpy.empty((n,6), numpy.float32)
  n = _intersect_corres( c0, c1, res )
  return res[:n]



# This file is compatible with both classic and new-style classes.


